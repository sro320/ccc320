{"version":3,"sources":["middleware/Api.ts","hooks/fileSubtitle.js","redux/explorer/reducer.ts","component/Placeholder/TextLoading.js","component/Dial/AutoHidden.js","services/navigate.ts","utils/page.ts","component/Uploader/core/utils/pool.ts","component/Uploader/core/utils/validator.ts","component/Uploader/core/utils/request.ts","middleware/Auth.ts","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","services/file.ts","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/Modals/OptionSelector.js","component/FileManager/Modals.js","utils/index.js","component/Viewer/Text.js","component/Viewer/Code.js","redux/explorer/index.ts","component/Uploader/core/errors/index.ts","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Uploader/core/utils/helper.ts","component/Uploader/core/utils/index.ts","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","component/Uploader/core/types.ts","component/Uploader/core/uploader/base.ts","component/Uploader/core/logger.ts","component/Uploader/core/api/index.ts","component/Uploader/core/index.ts","component/Uploader/core/uploader/chunk.ts","component/Uploader/core/uploader/local.ts","component/Uploader/core/uploader/remote.ts","component/Uploader/core/uploader/onedrive.ts","component/Uploader/core/uploader/oss.ts","component/Uploader/core/uploader/qiniu.ts","component/Uploader/core/uploader/cos.ts","component/Uploader/core/uploader/upyun.ts","component/Uploader/core/uploader/s3.ts","component/Uploader/core/uploader/placeholder.ts","component/Dial/Create.js","component/Uploader/Popup/TaskDetail.js","component/Uploader/Popup/UploadTask.js","component/Uploader/UseUpload.js","component/Modals/ConcurrentOption.js","component/Uploader/Popup/MoreActions.js","component/Uploader/Popup/TaskList.js","component/Placeholder/DropFile.js","component/Uploader/Uploader.js","utils/zip.js","utils/api.ts","redux/explorer/async.ts","redux/explorer/action.ts","config.ts","utils/datetime.js","component/FileManager/TypeIcon.js","component/Placeholder/Nothing.js","serviceWorker.js","middleware/AuthRoute.js","component/Share/NotFound.js","component/Common/ICPFooter.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/FileManager.js","component/Viewer/SelectMenu.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/FileManager/MusicPlayer.js","App.js","middleware/Init.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","redux/viewUpdate/action.ts","component/FileManager/PathSelector.js"],"names":["baseURL","getBaseURL","getPreviewURL","isShare","shareID","fileID","path","encodeURIComponent","instance","axios","create","withCredentials","AppError","message","code","error","stack","Error","interceptors","response","use","rawData","data","undefined","Auth","signout","window","location","href","msg","Promise","reject","UseFileSubTitle","query","math","dispatch","useDispatch","useState","title","setTitle","setPath","SetSubTitle","useCallback","changeSubTitle","useEffect","pathHelper","isSharePage","pathname","get","split","length","params","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","lastSelect","file","id","name","size","type","date","create_date","index","shiftSelectedIds","imgPreview","first","other","audioPreview","playingName","paused","isOpen","keywords","fileSave","sideBarOpen","checkSelectedProps","forEach","value","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","includes","open","currentPolicy","policy","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","AutoHidden","children","enable","hide","hidden","setHidden","prev","scrollY","lastUpdate","addEventListener","e","currentTarget","handleNavigation","in","share","a","apiURL","key","API","statusHelper","isHomePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","Pool","limit","queue","processing","uploader","resolve","push","check","item","this","v","findIndex","task","dst","ProcessingTaskDuplicatedError","release","run","then","err","processingNum","availableNum","slice","checkers","allowedSuffix","ext","pop","FileValidateError","maxSize","validate","c","CancelToken","baseConfig","transformResponse","JSON","parse","TransformResponseError","cdBackendConfig","request","url","config","catch","isCancel","RequestCanceledError","HTTPError","requestAPI","isAuthenticated","authenticate","cb","SetUser","GetUser","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","SetPreference","preference","GetPreference","GetPreferenceWithDefault","defaultVal","icon","color","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","ToggleThemeMode","toggleDaylightMode","isDayLight","isDark","placement","classNames","onClick","sideButton","marginRight","sortOptions","SubActions","isSmall","inherit","viewMethod","viewUpdate","explorerViewMethod","OpenLoadingDialog","method","changeViewMethod","ChangeSortMethod","changeSortMethod","SetShareUserPopover","setShareUserPopover","anchorSort","setAnchorSort","selectedIndex","setSelectedIndex","toggleViewMethod","newMethod","fontSize","anchorEl","Boolean","onClose","map","option","event","0","1","2","3","4","5","6","7","handleMenuItemClick","creator","nick","style","height","src","getDownloadURL","reqURL","downloadPath","put","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","SaveButton","buttonClassname","clsx","status","disabled","aria-label","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","modals","text","loadingText","Dialog","aria-labelledby","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","secondary","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","vertical","horizontal","toggleSnackbar","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","items","post","src_dir","modalsLoading","widthAnimation","shareUrl","minWidth","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","fullWidth","Divider","List","onChange","aria-controls","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","Math","random","toString","substr","edge","onMouseDown","on","onIcon","Visibility","offIcon","VisibilityOff","labelWidth","Select","labelId","MenuItem","Typography","TextField","onFocus","select","autoFocus","inputProps","readonly","label","navigator","clipboard","writeText","submitFormBody","is_dir","DecompressDialog","filePath","CompressDialog","fileName","setFileName","OptionSelector","dividers","component","options","o","callback","description","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","downloaded","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","getSource","score","scoreHandler","Download","dragMove","submitRemove","delete","refreshStorage","submitMove","patch","DragSelectedPath","closeAllModals","doMove","openLoadingDialog","submitRename","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","setMoveTarget","remoteDownloadNext","onSubmit","createNewFolder","createNewFile","copy","move","remove","music","controls","remoteDownload","placeholder","torrentDownload","decompress","compress","Component","Modals","connect","withRouter","sizeToString","bytes","i","floor","log","pow","toFixed","fixUrlHash","setGetParameter","paramName","paramValue","indexOf","prefix","substring","suffix","history","pushState","allowSharePreview","shareInfo","allowPreview","userInfo","uid","changeThemeColor","document","querySelector","setAttribute","bufferDecode","Uint8Array","from","atob","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","join","hex2bin","hex","parseInt","padStart","basename","pathList","filename","fileNameNoExt","lastIndexOf","randomStr","result","characters","charactersLength","charAt","getNumber","base","conditions","isMac","platform","toUpperCase","isMobileSafari","ua","userAgent","iOS","match","webkit","vhCheck","vh","innerHeight","documentElement","setProperty","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","useRouteMatch","$vm","createRef","useLocation","URLSearchParams","search","useParams","requestURL","responseType","textdata","Buffer","toBase64","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","current","$img2Url","console","elevation","ref","onSave","toolbar","h1","h2","h3","h4","img","link","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","wordWrap","setWordWrap","extension","codePreviewSuffix","control","Array","Set","keys","k","fallback","language","readOnly","extraEditorClassName","actions","reducers","setNavigator","navigatorLoading","navigateTo","getState","navigateUp","pathSplit","newPath","drawerToggleAction","dragAndDrop","changeContextMenu","menuType","setNavigatorLoadingStatus","setNavigatorError","openCreateFolderDialog","openCreateFileDialog","setUserPopover","anchor","openRenameDialog","openResaveDialog","openMoveDialog","openRemoveDialog","openShareDialog","applyThemes","setSessionStatus","openMusicDialog","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","searchMyFile","showImgPreivew","showAudioPreview","audioPreviewSetIsOpen","audioPreviewSetPlaying","saveFile","setSiteConfig","UploaderErrorName","RETRY_ERROR_LIST","FailedCreateUploadSession","HTTPRequestFailed","LocalChunkUploadFailed","SlaveChunkUploadFailed","RequestCanceled","ProcessingTaskDuplicated","FailedTransformResponse","RETRY_CODE_LIST","UploaderError","i18n","field","InvalidFile","UnknownPolicyError","UnknownPolicyType","APIError","CreateUploadSessionError","DeleteUploadSessionError","FailedDeleteUploadSession","axiosErr","LocalChunkUploadError","chunkIndex","SlaveChunkUploadError","OneDriveChunkError","OneDriveChunkUploadFailed","OneDriveEmptyFileSelected","OneDriveEmptyFile","OneDriveFinishUploadError","FailedFinishOneDriveUpload","S3LikeChunkError","S3LikeChunkUploadFailed","getElementsByTagName","innerHTML","S3LikeFinishUploadError","QiniuChunkError","QiniuChunkUploadFailed","QiniuFinishUploadError","FailedFinishQiniuUpload","COSUploadError","COSPostUploadFailed","COSUploadCallbackError","COSUploadCallbackFailed","UpyunUploadError","UpyunPostUploadFailed","S3LikeUploadCallbackError","S3LikeUploadCallbackFailed","parseError","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","openURL","sigOut","reload","user","Popover","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","group","UserAvatarPopover","userPopoverAnchorEl","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","handleDrawerToggle","mobileOpen","openDownload","archiveDownload","startBatchDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","webdav","process","browser","test","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","isPreviewable","openPreview","audioPreviewPlayingName","audioPreviewOpen","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","loadUploader","audioPreviewIsOpen","withTheme","flexShrink","drawerDesktop","mixins","flexDirection","justifyContent","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","getChunks","chunkByteSize","chunks","count","ceil","chunk","sumChunk","reduce","loaded","getResumeCtxKey","setResumeCtx","logger","ctxKey","warn","WriteCtxFailed","removeResumeCtx","removeItem","RemoveCtxFailed","cleanupResumeCtx","getResumeCtx","localInfoString","ReadCtxFailed","localInfo","InvalidCtxData","session","Date","now","CtxExpired","listResumeCtx","res","len","OBJtoXML","obj","xml","isArray","array","getFileInput","isFolder","createElement","multiple","body","appendChild","pathJoin","parts","sep","part","RegExp","trimPrefix","getDirectoryUploadDst","relPath","webkitRelativePath","fsPath","readEntriesPromise","directoryReader","readEntries","readFilePromise","fileReader","readAllDirectoryEntries","entries","getAllFileEntries","dataTransferItemList","fileEntries","webkitGetAsEntry","getAsFile","entry","shift","isFile","fullPath","isDirectory","createReader","isFileDrop","dataTransfer","types","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","minHeight","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","PolicyType","TaskType","Status","Logger","level","allowLevel","args","getPrintPrefix","createUploadSession","req","cancel","cancelToken","localUploadChunk","sessionID","onProgress","headers","onUploadProgress","progressEvent","slaveUploadChunk","credential","Authorization","oneDriveUploadChunk","range","finishOneDriveUpload","s3LikeUploadChunk","etag","s3LikeFinishUpload","isOss","PartNumber","ETag","validateStatus","qiniuDriveUploadChunk","upToken","authorization","qiniuFinishUpload","partNumber","cosFormUploadChunk","keyTime","ak","bodyFormData","FormData","append","cosUploadCallback","upyunFormUploadChunk","s3LikeUploadCallback","resumePolicy","local","remote","qiniu","oss","onedrive","s3","Base","manager","child","added","subscriber","progress","lastTime","startTime","subscribe","start","transit","initialized","setError","queued","pool","enqueue","preparing","cachedInfo","utils","policy_id","last_modified","lastModified","token","resumed","chunkProgress","upload","afterUpload","finished","cancelUploadSession","canceled","reset","deleteUploadSession","onTransition","newStatus","onError","onMsg","Retryable","fromCache","SelectType","Chunk","initBeforeUploadChunks","updateLocalCache","uploadChunk","chunkSize","notifyResumeProgress","getProgressInfoItem","Local","chunkInfo","p","updateChunkProgress","Remote","uploadURLs","OneDrive","rangeEnd","sendRange","innererror","alignChunkOffset","end","chunkOffset","rangeStatus","expectedStart","nextExpectedRanges","newChunkOffset","finishing","OSS","completeURL","Qiniu","chunkRes","COS","Upyun","ResumeHint","resumable","UploadManager","fileInput","directoryInput","currentPath","changeConcurrentLimit","newLimit","File","NoPolicySelected","onchange","ev","fileSelectCallback","click","resumeTasks","tasks","t","dispatchUploader","resumeHint","cleanupSessions","files","Event","onFileDroppedIn","onDropLeave","uploaders","onDropFileAdded","logLevel","concurrentLimit","dropZone","onDropOver","cos","upyun","S3","acceptVal","removeAttribute","UploadButton","setOpen","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","uploadClicked","openFileList","selectFile","circularProgress","useMemo","totalSize","processedSize","taskListOpen","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","tooltipOpen","Directory","infoTitle","fontWeight","infoValue","wordBreak","TaskDetail","navigateToDst","Link","datetime","locale","Grid","xs","progressContent","progressContainer","listAction","successStatus","errorStatus","disabledBadge","dstLink","fileNameContainer","getErrMsg","errMsg","Message","UploadTask","useAvgSpeed","onCancel","taskHover","setTaskHover","startLoadedRef","useRef","setProgress","durationTotal","resAvg","speed","speedAvg","retry","useUpload","fullScreen","useMediaQuery","statusText","parent","useSpeedAvg","displayedSpeed","getSpeedText","resumeLabel","continueLabel","progressBar","lighten","darken","taskDetail","u","stopRipple","stopPropagation","show","secondaryAction","onTouchStart","fileIcon","TypeIcon","isUpload","newExpanded","onMouseOver","ConcurrentOptionDialog","setCount","Input","min","step","max","MoreActions","uploadManager","deleteTask","setUseAvgSpeed","setFilter","sorter","setSorter","cleanFinished","concurrentDialog","setConcurrentDialog","RefreshStorage","listItems","tooltip","divider","ClearAll","Menu","enterNextDelay","dense","next","val","Transition","forwardRef","Slide","direction","rootOverwrite","flex","popup","dialog","inset","paddingZero","dialogContent","maxHeight","virtualList","expandIcon","shortest","expandIconExpanded","sorters","b","reverse","filters","ongoing","TaskList","taskList","setUploaders","setAnchorEl","reason","Fade","currentList","sort","Nothing","increaseViewportBy","itemContent","classnames","TransitionComponent","disableEnforceFocus","hideBackdrop","disableBackdropClick","disableScrollLock","Accordion","AppBar","Toolbar","disableGutters","MoreHoriz","AccordionDetails","createStyles","backdrop","DropFileBackground","totalProgressCollector","lastProgressStart","Uploader","setTaskListOpen","dropBgOpen","setDropBgOpen","processed","totalProgress","setTotalProgress","fileSelectCounter","openFileSelector","folderSelectCounter","openFolderSelector","enableUploader","taskAdded","original","onToast","setPolicy","unfinished","setInterval","Crc32","crc","table","offset","prototype","j","getDataHelper","byteLength","uint8","view","DataView","buffer","ZIP","underlyingSource","ctrl","activeZipObject","closed","filenames","encoder","TextEncoder","activeZipIndex","processNextChunk","closeZip","zipWriter","fileLike","TypeError","trim","directory","endsWith","nameBuf","encode","zipObject","comment","compressedLength","uncompressedLength","writeHeader","setUint16","setUint32","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","set","writeFooter","footer","indexFilename","setUint8","zipObj","read","done","outputData","stream","getReader","ReadableStream","pull","getPreviewPath","walk","f","objects","subs","askForOption","setOptionModal","setFileList","setDirList","setSortMethod","setSideBar","setCurrentPolicy","removeSelectedTargets","addSelectedTargets","setLastSelect","setShiftSelectedIds","sortMethodFuncs","sizePos","sizeRes","namePos","localeCompare","languages","numeric","ignorePunctuation","nameRev","timePos","timeRev","modifyTimePos","modifyTimeRev","updateFileList","sortMethod","x","sortFunc","toggleObjectInfoSidebar","closeContextMenu","serverSideBatchDownload","router","postBody","allowArchiveDownload","fileStream","streamSaver","createWriteStream","readableZipStream","previewPath","fetch","cache","WritableStream","pipeTo","getViewerURL","viewer","openViewer","shareDownload","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","begin","newShiftSelected","msDocPreviewSuffix","subtitleSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","policyTypeMap","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","dayjs","extend","utc","timezone","preferTimeZone","timeZone","refreshTimeZone","formatLocalTime","time","format","tz","validateTimeZone","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","fileSuffix","getColor","getColorValue","iconClassName","emptyContainer","emptyInfoBig","emptyInfoSmall","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","AuthRoute","rest","render","to","Notice","icp","ICPFooter","siteICPId","setShow","pageHelper","rel","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaContainer","required","autoComplete","captchaPlaceholder","alt","ReCAPTCHA","handleExpired","bind","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","onExpired","onErrored","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","removeChild","elem","childProps","displayName","defaultProps","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","ret","ticket","randstr","isValidate","submit","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","normal","captchaParamsRef","CaptchaRender","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","form","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","Paper","login","userName","Password","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Fingerprint","VpnKey","SmallIconCompoment","nextState","nextContext","isSelectedCurrent","isSelectedNext","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","Folder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","boxSizing","FileIconCompoment","showPicIcon","pic","picPreview","noDrag","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","userDrag","active","isActive","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","renderMenuItems","visibleCount","condition","allowRemoteDownload","menuOpen","anchorReference","anchorPosition","source_enabled","Unarchive","Archive","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","TableRow","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","hover","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","SelectFile","handleIconClick","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","away","showView","listView","Table","TableHead","TableSortLabel","changeSort","visuallyHidden","TableBody","normalView","flexFix","data-clickAway","typeHeader","gridContainer","gridItem","rootTable","rootShare","navigatorError","errorBox","errorMsg","navigatorErrorMsg","Explorer","drawerDesktopOpen","navigateToPath","upButton","clickAway","clip","gridTemplateColumns","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","element","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","max_size","file_type","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","details","setDetails","propsItem","d","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","query_date","Hidden","Clear","Drawer","gutterBottom","FileManager","DndProvider","backend","HTML5Backend","DragLayer","SelectMenu","showIcon","Artplayer","externalPlayers","actionButton","VideoViewer","art","setArt","setFiles","subtitles","setSubtitles","playlist","setPlaylist","subtitleOpen","setSubtitleOpen","subtitleSelected","setSubtitleSelected","playlistOpen","setPlaylistOpen","externalPlayerOpen","setExternalPlayerOpen","pictureInPictureEnabled","playing","pip","pause","newURL","subtitle","switchUrl","switchSubtitle","switch","flip","setting","playbackRate","aspectRatio","hotkey","fullscreen","fullscreenWeb","whitelist","moreVideoAttr","playsInline","getInstance","startIcon","Subtitles","PlaylistPlay","Launch","sub","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","sm","Card","CardHeader","subheader","Pagination","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","FormGroup","row","FormControlLabel","filesCopy","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","context","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","previousDownloading","downloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","cursor","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","accountCopy","deleteAccount","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","md","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","themes","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","GitHub","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","MusicPlayerComponent","currentIndex","currentTime","progressText","looptype","myAudioRef","newItem","handleItemClick","backgroundPlay","bindEvents","ele","readyPlay","loopnext","timeUpdate","unbindEvents","removeEventListener","play","formatTime","s","isNaN","minute","second","playOrPaues","isPlay","changeLoopType","lt","handleProgress","idx","Slider","slider_root","justify","Repeat","RepeatOne","Shuffle","MusicPlayer","PDFViewer","App","themeConfig","prefersDarkMode","prefer","createMuiTheme","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","initUserConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","resave","doNavigate","currntPath","defaultStatus","rawStore","configCache","InitSiteConfig","QQLogin","black","contrastText","hint","bgSelected","emptyIcon","ErrorBoundary","hasError","errorInfo","componentStack","Admin","hash","contentType","ready","unregister","checkValidServiceWorker","alert","waiting","postMessage","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","thunk","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","getElementById","setSubtitle","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","api","unshift","handleSelect","selector","primaryTypographyProps","buttonIcon","iconWhite"],"mappings":"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","file":"static/js/main.408509a2.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Auth from \"./Auth\";\n\nexport const baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nexport const getPreviewURL = (\n    isShare: boolean,\n    shareID: any,\n    fileID: any,\n    path: any\n): string => {\n    return (\n        getBaseURL() +\n        (isShare\n            ? \"/share/preview/\" +\n              shareID +\n              (path !== \"\" ? \"?path=\" + encodeURIComponent(path) : \"\")\n            : \"/file/preview/\" + fileID)\n    );\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n});\n\nclass AppError extends Error {\n    constructor(message: string | undefined, public code: any, error: any) {\n        super(message);\n        this.code = code;\n        this.message = message || \"未知错误\";\n        this.message += error ? \" \" + error : \"\";\n        this.stack = new Error().stack;\n    }\n}\n\ninstance.interceptors.response.use(\n    function (response: any) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // 登录过期\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href = \"/login\";\n            }\n\n            // 非管理员\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n","import { useDispatch } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { changeSubTitle } from \"../redux/viewUpdate/action\";\nimport pathHelper from \"../utils/page\";\n\nexport default function UseFileSubTitle(query, math, location) {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState(\"\");\n    const [path, setPath] = useState(\"\");\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            setPath(query.get(\"p\"));\n            SetSubTitle(path[path.length - 1]);\n            setTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n            setTitle(query.get(\"name\"));\n            setPath(query.get(\"share_path\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    return { title, path };\n}\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\nimport { Policy } from \"../../component/Uploader/core/types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    audioPreview: {\n        first: CloudreveFile;\n        other: [];\n        playingName: any;\n        paused: boolean;\n        isOpen: boolean;\n    };\n    keywords: string;\n    fileSave: boolean;\n    sideBarOpen: boolean;\n    currentPolicy?: Policy;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false,\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        index: -1,\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n    },\n    audioPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\",\n            path: \"\",\n            create_date: \"\",\n        },\n        other: [],\n        playingName: null,\n        paused: false,\n        isOpen: false,\n    },\n    keywords: \"\",\n    fileSave: false,\n    sideBarOpen: false,\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    selected.forEach((value) => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile,\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source,\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list,\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list,\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected),\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected),\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter((file) => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected),\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                },\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                },\n                keywords: action.keywords,\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"SHOW_AUDIO_PREVIEW\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    first: action.first,\n                    other: state.fileList,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_IS_OPEN\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    isOpen: action.isOpen,\n                },\n            });\n        case \"AUDIO_PREVIEW_SET_PLAYING\":\n            return Object.assign({}, state, {\n                audioPreview: {\n                    ...state.audioPreview,\n                    playingName: action.playingName,\n                    paused: action.paused,\n                },\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave,\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index,\n                },\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false,\n                },\n                keywords: \"\",\n            };\n        case \"SET_SIDE_BAR\":\n            return {\n                ...state,\n                sideBarOpen: action.open,\n            };\n        case \"SET_CURRENT_POLICY\":\n            return {\n                ...state,\n                currentPolicy: action.policy,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10,\n        },\n    },\n}));\n\nconst MyLoader = (props) => (\n    <Code\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction TextLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","import React, { useEffect, useState } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable, hide = false }) {\n    const [hidden, setHidden] = useState(false);\n\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = (e) => {\n            const window = e.currentTarget;\n\n            if (prev > window.scrollY) {\n                if (lastUpdate - window.scrollY > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(false);\n                }\n            } else if (prev < window.scrollY) {\n                if (window.scrollY - lastUpdate > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(true);\n                }\n            }\n            prev = window.scrollY;\n        };\n        if (enable) {\n            window.addEventListener(\"scroll\", (e) => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden && !hide}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","import API from \"../middleware/Api\";\n\nexport async function list(\n    path: string,\n    share: any,\n    keywords: string\n): Promise<any> {\n    const apiURL = share\n        ? \"/share/list/\" + share.key\n        : keywords === \"\"\n        ? \"/directory\"\n        : \"/file/search/\";\n    path = keywords === \"\" ? path : keywords;\n    return API.get(apiURL + encodeURIComponent(path));\n}\n","const statusHelper = {\n    isHomePage(path: string) {\n        return path === \"/home\";\n    },\n    isSharePage(path: string) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path: string) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path: string) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    },\n};\nexport default statusHelper;\n","import Base from \"../uploader/base\";\nimport { ProcessingTaskDuplicatedError } from \"../errors\";\n\nexport interface QueueContent {\n    uploader: Base;\n    resolve: () => void;\n    reject: (err?: any) => void;\n}\n\nexport class Pool {\n    queue: Array<QueueContent> = [];\n    processing: Array<QueueContent> = [];\n\n    constructor(public limit: number) {}\n\n    enqueue(uploader: Base) {\n        return new Promise<void>((resolve, reject) => {\n            this.queue.push({\n                uploader,\n                resolve,\n                reject,\n            });\n            this.check();\n        });\n    }\n\n    release(item: QueueContent) {\n        this.processing = this.processing.filter((v) => v !== item);\n        this.check();\n    }\n\n    run(item: QueueContent) {\n        this.queue = this.queue.filter((v) => v !== item);\n        if (\n            this.processing.findIndex(\n                (v) =>\n                    v.uploader.task.dst == item.uploader.task.dst &&\n                    v.uploader.task.file.name == item.uploader.task.name\n            ) > -1\n        ) {\n            // 找到重名任务\n            item.reject(new ProcessingTaskDuplicatedError());\n            this.release(item);\n            return;\n        }\n\n        this.processing.push(item);\n        item.uploader.run().then(\n            () => {\n                item.resolve();\n                this.release(item);\n            },\n            (err) => {\n                item.reject(err);\n                this.release(item);\n            }\n        );\n    }\n\n    check() {\n        const processingNum = this.processing.length;\n        const availableNum = this.limit - processingNum;\n        this.queue.slice(0, availableNum).forEach((item) => {\n            this.run(item);\n        });\n    }\n}\n","import { Policy } from \"../types\";\nimport { FileValidateError } from \"../errors\";\n\ninterface Validator {\n    (file: File, policy: Policy): void;\n}\n\n// validators\nconst checkers: Array<Validator> = [\n    function checkExt(file: File, policy: Policy) {\n        if (\n            policy.allowedSuffix != undefined &&\n            policy.allowedSuffix.length > 0\n        ) {\n            const ext = file?.name.split(\".\").pop();\n            if (ext === null || !ext || !policy.allowedSuffix.includes(ext))\n                throw new FileValidateError(\n                    \"File suffix not allowed in policy.\",\n                    \"suffix\",\n                    policy\n                );\n        }\n    },\n\n    function checkSize(file: File, policy: Policy) {\n        if (policy.maxSize > 0) {\n            if (file.size > policy.maxSize) {\n                throw new FileValidateError(\n                    \"File size exceeds maximum limit.\",\n                    \"size\",\n                    policy\n                );\n            }\n        }\n    },\n];\n\n/* 将每个 Validator 执行\n   失败返回 Error\n */\nexport function validate(file: File, policy: Policy) {\n    checkers.forEach((c) => c(file, policy));\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { Response } from \"../types\";\nimport {\n    HTTPError,\n    RequestCanceledError,\n    TransformResponseError,\n} from \"../errors\";\n\nexport const { CancelToken } = axios;\nexport { CancelTokenSource } from \"axios\";\n\nconst baseConfig = {\n    transformResponse: [\n        (response: any) => {\n            try {\n                return JSON.parse(response);\n            } catch (e) {\n                throw new TransformResponseError(response, e);\n            }\n        },\n    ],\n};\n\nconst cdBackendConfig = {\n    ...baseConfig,\n    baseURL: \"/api/v3\",\n    withCredentials: true,\n};\n\nexport function request<T = any>(url: string, config?: AxiosRequestConfig) {\n    return axios\n        .request<T>({ ...baseConfig, ...config, url })\n        .catch((err) => {\n            if (axios.isCancel(err)) {\n                throw new RequestCanceledError();\n            }\n\n            if (err instanceof TransformResponseError) {\n                throw err;\n            }\n\n            throw new HTTPError(err, url);\n        });\n}\n\nexport function requestAPI<T = any>(url: string, config?: AxiosRequestConfig) {\n    return request<Response<T>>(url, { ...cdBackendConfig, ...config });\n}\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key] !== undefined) {\n            return preference[key];\n        }\n        return null;\n    },\n    GetPreferenceWithDefault(key: string, defaultVal: any): any {\n        return Auth.GetPreference(key) !== null\n            ? Auth.GetPreference(key)\n            : defaultVal;\n    },\n};\n\nexport default Auth;\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\nimport { toggleDaylightMode } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\",\n    },\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const ThemeType = useSelector(\n        (state) => state.siteConfig.theme.palette.type\n    );\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch,\n    ]);\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position,\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React, { useCallback, useState } from \"react\";\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"../../../middleware/Auth\";\nimport { changeViewMethod, setShareUserPopover } from \"../../../redux/explorer\";\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\",\n    },\n}));\n\nconst sortOptions = [\n    \"A-Z\",\n    \"Z-A\",\n    \"最早上传\",\n    \"最新上传\",\n    \"最早修改\",\n    \"最新修改\",\n    \"最小\",\n    \"最大\",\n];\n\nexport default function SubActions({ isSmall, share, inherit }) {\n    const dispatch = useDispatch();\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const OpenLoadingDialog = useCallback(\n        (method) => dispatch(changeViewMethod(method)),\n        [dispatch]\n    );\n    const ChangeSortMethod = useCallback(\n        (method) => dispatch(changeSortMethod(method)),\n        [dispatch]\n    );\n    const SetShareUserPopover = useCallback(\n        (e) => dispatch(setShareUserPopover(e)),\n        [dispatch]\n    );\n    const [anchorSort, setAnchorSort] = useState(null);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const showSortOptions = (e) => {\n        setAnchorSort(e.currentTarget);\n    };\n    const handleMenuItemClick = (e, index) => {\n        setSelectedIndex(index);\n        const optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"modifyTimePos\",\n            5: \"modifyTimeRev\",\n            6: \"sizePos\",\n            7: \"sizeRes\",\n        };\n        ChangeSortMethod(optionsTable[index]);\n        setAnchorSort(null);\n    };\n\n    const toggleViewMethod = () => {\n        const newMethod =\n            viewMethod === \"icon\"\n                ? \"list\"\n                : viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        OpenLoadingDialog(newMethod);\n    };\n\n    const classes = useStyles();\n    return (\n        <>\n            {viewMethod === \"icon\" && (\n                <IconButton\n                    title=\"列表展示\"\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n            {viewMethod === \"list\" && (\n                <IconButton\n                    title=\"小图标展示\"\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            {viewMethod === \"smallIcon\" && (\n                <IconButton\n                    title=\"大图标展示\"\n                    className={classes.sideButton}\n                    onClick={toggleViewMethod}\n                    color={inherit ? \"inherit\" : \"default\"}\n                >\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\n                </IconButton>\n            )}\n\n            <IconButton\n                title=\"排序方式\"\n                className={classes.sideButton}\n                onClick={showSortOptions}\n                color={inherit ? \"inherit\" : \"default\"}\n            >\n                <TextTotateVerticalIcon\n                    fontSize={isSmall ? \"small\" : \"default\"}\n                />\n            </IconButton>\n            <Menu\n                id=\"sort-menu\"\n                anchorEl={anchorSort}\n                open={Boolean(anchorSort)}\n                onClose={() => setAnchorSort(null)}\n            >\n                {sortOptions.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n            {share && (\n                <IconButton\n                    title={\"由 \" + share.creator.nick + \" 创建\"}\n                    className={classes.sideButton}\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\n                    style={{ padding: 5 }}\n                >\n                    <Avatar\n                        style={{ height: 23, width: 23 }}\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\n                    />\n                </IconButton>\n            )}\n        </>\n    );\n}\n","import API from \"../middleware/Api\";\n\nexport async function getDownloadURL(file: any): Promise<any> {\n    let reqURL = \"\";\n    if (file.key) {\n        const downloadPath =\n            file.path === \"/\"\n                ? file.path + file.name\n                : file.path + \"/\" + file.name;\n        reqURL =\n            \"/share/download/\" +\n            file.key +\n            \"?path=\" +\n            encodeURIComponent(downloadPath);\n    } else {\n        reqURL = \"/file/download/\" + file.id;\n    }\n\n    return API.put(reqURL);\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\",\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    loadingContainer: {\n        display: \"flex\",\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20,\n    },\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { refreshFileList, setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CopyDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        复制到 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    makeStyles,\n    TextField,\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\n\nconst useStyles = makeStyles((theme) => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n    },\n    flexCenter: {\n        alignItems: \"center\",\n    },\n    noFlex: {\n        display: \"block\",\n    },\n    scoreCalc: {\n        marginTop: 10,\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: \"auto\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false,\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true,\n    });\n\n    const handleChange = (prop) => (event) => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random().toString(36).substr(2).slice(2, 8),\n            showPassword: true,\n        });\n    };\n\n    const handleExpand = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = (prop) => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\",\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const senLink = () => {\n        if (navigator.share) {\n            navigator.share({\n                title: props.selected[0].name,\n                url: shareURL,\n            });\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareURL);\n            ToggleSnackbar(\"top\", \"right\", \"分享链接已复制\", \"info\");\n        }\n    };\n\n    const submitShare = (e) => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            preview: shareOption.preview,\n        };\n\n        API.post(\"/share\", submitFormBody)\n            .then((response) => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false,\n                });\n                setShareOption({\n                    password: false,\n                    expire: false,\n                });\n                props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = (event) => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"使用密码保护\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        分享密码\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title=\"随机生成\">\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    <ToggleIcon\n                                                        on={values.showPassword}\n                                                        onIcon={<Visibility />}\n                                                        offIcon={\n                                                            <VisibilityOff />\n                                                        }\n                                                    />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"自动过期\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        <MenuItem value={1}>1 次下载</MenuItem>\n                                        <MenuItem value={2}>2 次下载</MenuItem>\n                                        <MenuItem value={3}>3 次下载</MenuItem>\n                                        <MenuItem value={4}>4 次下载</MenuItem>\n                                        <MenuItem value={5}>5 次下载</MenuItem>\n                                        <MenuItem value={20}>\n                                            20 次下载\n                                        </MenuItem>\n                                        <MenuItem value={50}>\n                                            50 次下载\n                                        </MenuItem>\n                                        <MenuItem value={100}>\n                                            100 次下载\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>或者</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10,\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>5 分钟</MenuItem>\n                                        <MenuItem value={3600}>1 小时</MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            1 天\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            7 天\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            30 天\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>后过期</Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"允许预览\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    是否允许在分享页面预览文件内容\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label=\"分享链接\"\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                {shareURL !== \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button onClick={senLink} color=\"secondary\">\n                            发送链接\n                        </Button>\n                    </div>\n                )}\n                <Button onClick={onClose}>关闭</Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            创建分享链接\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { filePath } from \"../../utils\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function DecompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        API.post(\"/file/decompress\", {\n            src: filePath(props.selected[0]),\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        解压缩至 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            name: fileName,\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={(e) => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label=\"压缩文件名\"\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function OptionSelector() {\n    const classes = useStyles();\n    const option = useSelector((state) => state.viewUpdate.modals.option);\n\n    return (\n        <Dialog\n            open={option && option.open}\n            onClose={option && option.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {option && option.title}\n            </DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    {option &&\n                        option.options.map((o) => (\n                            <ListItem\n                                key={o.key}\n                                onClick={() => option && option.callback(o)}\n                                button\n                            >\n                                <ListItemText\n                                    primary={o.name}\n                                    secondary={o.description}\n                                />\n                            </ListItem>\n                        ))}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={option && option.onClose}>取消</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PathSelector from \"./PathSelector\";\nimport API, { baseURL } from \"../../middleware/Api\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    withStyles,\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\nimport {\n    closeAllModals,\n    openLoadingDialog,\n    refreshFileList,\n    refreshStorage,\n    setModalsLoading,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport OptionSelector from \"../Modals/OptionSelector\";\nimport { getDownloadURL } from \"../../services/file\";\n\nconst styles = (theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: (status) => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        downloadURL: \"\",\n        remoteDownloadPathSelect: false,\n        source: \"\",\n        purchaseCallback: null,\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    newNameSuffix = \"\";\n    downloaded = false;\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n        if (this.props.loading !== nextProps.loading) {\n            // 打包下载\n            if (nextProps.loading === true) {\n                if (nextProps.loadingText === \"获取下载地址...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.Download);\n                        return;\n                    }\n                    this.Download();\n                }\n            }\n            return;\n        }\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name,\n            });\n            return;\n        }\n        if (\n            this.props.modalsStatus.getSource !==\n                nextProps.modalsStatus.getSource &&\n            nextProps.modalsStatus.getSource === true\n        ) {\n            API.get(\"/file/source/\" + this.props.selected[0].id)\n                .then((response) => {\n                    this.setState({\n                        source: response.data.url,\n                    });\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n    };\n\n    scoreHandler = (callback) => {\n        callback();\n    };\n\n    Download = () => {\n        getDownloadURL(this.props.selected[0])\n            .then((response) => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitRemove = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs,\n            },\n        })\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    setTimeout(this.props.refreshFileList, 500);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.props.setModalsLoading(false);\n                this.props.refreshStorage();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitMove = (e) => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items,\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                ? \"/\"\n                : this.state.selectedPath,\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map((value) => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(\"处理中...\");\n            this.submitMove();\n        }\n    };\n\n    submitRename = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: [],\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex((value) => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"新名称与已有文件重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件夹名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value) => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName,\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch((error) => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitTorrentDownload = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\n            dst:\n                this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitDownload = (e) => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/url\", {\n            url: this.state.downloadURL,\n            dst:\n                this.state.selectedPath === \"//\"\n                    ? \"/\"\n                    : this.state.selectedPath,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name,\n        });\n    };\n\n    remoteDownloadNext = () => {\n        this.props.closeAllModals();\n        this.setState({\n            remoteDownloadPathSelect: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            downloadURL: \"\",\n            shareUrl: \"\",\n            remoteDownloadPathSelect: false,\n            source: \"\",\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <OptionSelector />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        获取文件外链\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"外链地址\"\n                                type=\"text\"\n                                value={this.state.source}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"文件夹名称\"\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.createNewFile}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFile}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFileName\"\n                                label=\"文件名称\"\n                                type=\"text\"\n                                value={this.state.newFileName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFile}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFileName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            输入{\" \"}\n                            <strong>\n                                {this.props.selected.length === 1\n                                    ? this.props.selected[0].name\n                                    : \"\"}\n                            </strong>{\" \"}\n                            的新名称：\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label=\"新名称\"\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={(e) => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                移动至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            确定要删除\n                            {this.props.selected.length === 1 && (\n                                <strong> {this.props.selected[0].name} </strong>\n                            )}\n                            {this.props.selected.length > 1 && (\n                                <span>\n                                    这{this.props.selected.length}个对象\n                                </span>\n                            )}\n                            吗？\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRemove}\n                                color=\"primary\"\n                                disabled={this.props.modalsLoading}\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.music}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.selected.length !== 0 && (\n                                <audio\n                                    controls\n                                    src={\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )\n                                            ? baseURL +\n                                              \"/share/preview/\" +\n                                              this.props.selected[0].key +\n                                              (this.props.selected[0].key\n                                                  ? \"?path=\" +\n                                                    encodeURIComponent(\n                                                        this.props.selected[0]\n                                                            .path === \"/\"\n                                                            ? this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                            : this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  \"/\" +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                    )\n                                                  : \"\")\n                                            : baseURL +\n                                              \"/file/preview/\" +\n                                              this.props.selected[0].id\n                                    }\n                                />\n                            )}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        新建离线下载任务\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                label=\"文件地址\"\n                                autoFocus\n                                fullWidth\n                                id=\"downloadURL\"\n                                onChange={this.handleInputChange}\n                                placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链\"\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                        <Button\n                            onClick={this.remoteDownloadNext}\n                            color=\"primary\"\n                            disabled={\n                                this.props.modalsLoading ||\n                                this.state.downloadURL === \"\"\n                            }\n                        >\n                            下一步\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.remoteDownloadPathSelect}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.torrentDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitTorrentDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ModalsCompoment)));\n\nexport default Modals;\n","export const sizeToString = (bytes) => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = (path) => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const allowSharePreview = () => {\n    if (!window.isSharePage) {\n        return true;\n    }\n    if (window.isSharePage) {\n        if (window.shareInfo.allowPreview) {\n            return true;\n        }\n        if (window.userInfo.uid === -1) {\n            return false;\n        }\n        return true;\n    }\n};\n\nexport const checkGetParameters = (field) => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = (color) => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport const decode = (c) => {\n    let e = c.height,\n        a = c.width,\n        b = document.createElement(\"canvas\");\n    b.height = e;\n    b.width = a;\n    b = b.getContext(\"2d\");\n    b.drawImage(c, 0, 0);\n    c = b.getImageData(0, 0, a, e);\n    b = [];\n    for (let d = 0; d < a * e * 4; d += 4)\n        0 !== (d + 4) % (4 * a) &&\n            [].push.apply(b, [].slice.call(c.data, d, d + 3));\n    c = e = 0;\n    for (\n        a = \"\";\n        c < b.length &&\n        (16 >= c ||\n            (0 === b[c] % 2 ? (e++, (a += \"1\")) : ((e = 0), (a += \"0\")),\n            17 !== e));\n        c++\n    );\n    a = a.slice(0, -16);\n    a = a.replace(/[\\s]/g, \"\").replace(/(\\d{16})(?=\\d)/g, \"$1 \");\n    e = \"\";\n    a = a.split(\" \");\n    for (c = 0; c < a.length; c++) {\n        b = a[c];\n        if (16 === b.length) {\n            b = parseInt(b, 2);\n            e += String.fromCharCode(b);\n        }\n    }\n    return e;\n};\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    if (!path) {\n        return \"\";\n    }\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function filename(path) {\n    const pathList = path.split(\"/\");\n    return pathList.pop();\n}\n\nexport function fileNameNoExt(filename) {\n    return filename.substring(0, filename.lastIndexOf(\".\")) || filename;\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach((v) => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport const isMobileSafari = () => {\n    const ua = window.navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    return iOS && webkit && !ua.match(/CriOS/i);\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            marginLeft: theme.spacing(12),\n            marginRight: theme.spacing(12),\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: \"8px\",\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\",\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async ($file) => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={($file) => addImg($file)}\n                        onChange={(value) => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true, // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\n\nconst MonacoEditor = React.lazy(() =>\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\n);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 50,\n    },\n    editor: {\n        borderRadius: \"4px\",\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"4px!important\",\n        },\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\",\n    },\n    toobar: {\n        textAlign: \"right\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n    const [wordWrap, setWordWrap] = useState(\"off\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        const extension = query.get(\"p\").split(\".\");\n        setSuffix(codePreviewSuffix[extension.pop()]);\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then((response) => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch((error) => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    onChange={(e) =>\n                                        setWordWrap(\n                                            e.target.checked ? \"on\" : \"off\"\n                                        )\n                                    }\n                                />\n                            }\n                            label=\"自动换行\"\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={(e) => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map((k) => {\n                                        return codePreviewSuffix[k];\n                                    })\n                                )\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"600\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor,\n                                wordWrap: wordWrap,\n                            }}\n                            onChange={(value) => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\n\nexport default {\n    actions,\n    reducers,\n};\nexport { selectFile } from \"./action\";\nexport { openPreview } from \"./action\";\nexport { setShiftSelectedIds } from \"./action\";\nexport { setLastSelect } from \"./action\";\nexport { setSelectedTarget } from \"./action\";\nexport { addSelectedTargets } from \"./action\";\nexport { removeSelectedTargets } from \"./action\";\nexport const setNavigator = (path: any, navigatorLoading: any) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading,\n    };\n};\nexport const navigateTo = (path: any) => {\n    return (dispatch: any, getState: any) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\nexport const drawerToggleAction = (open) => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open,\n    };\n};\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target,\n    };\n};\nexport const changeViewMethod = (method) => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method,\n    };\n};\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\",\n    };\n};\n// Deprecated\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\nexport const setNavigatorLoadingStatus = (status) => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status,\n    };\n};\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg,\n    };\n};\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\n    };\n};\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\",\n    };\n};\nexport const setUserPopover = (anchor) => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const setShareUserPopover = (anchor) => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor,\n    };\n};\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\",\n    };\n};\nexport const openResaveDialog = (key) => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key,\n    };\n};\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\",\n    };\n};\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\",\n    };\n};\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\",\n    };\n};\nexport const applyThemes = (theme) => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme,\n    };\n};\nexport const setSessionStatus = (status) => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status,\n    };\n};\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\",\n    };\n};\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\n    };\n};\nexport const openTorrentDownloadDialog = () => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\n    };\n};\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\",\n    };\n};\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\",\n    };\n};\nexport const openRelocateDialog = () => {\n    return {\n        type: \"OPEN_RELOCATE_DIALOG\",\n    };\n};\nexport const openGetSourceDialog = () => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\",\n    };\n};\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\",\n    };\n};\n// Deprecated\nexport const openLoadingDialog = (text) => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text,\n    };\n};\n// Deprecated\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\",\n    };\n};\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color,\n    };\n};\nexport const setModalsLoading = (status) => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status,\n    };\n};\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\",\n    };\n};\nexport const searchMyFile = (keywords) => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords,\n    };\n};\nexport const showImgPreivew = (first) => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first,\n    };\n};\nexport const showAudioPreview = (first) => {\n    return {\n        type: \"SHOW_AUDIO_PREVIEW\",\n        first: first,\n    };\n};\nexport const audioPreviewSetIsOpen = (isOpen) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_IS_OPEN\",\n        isOpen,\n    };\n};\nexport const audioPreviewSetPlaying = (playingName, paused) => {\n    return {\n        type: \"AUDIO_PREVIEW_SET_PLAYING\",\n        playingName, //the playing content name\n        paused,\n    };\n};\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\",\n    };\n};\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\",\n    };\n};\n\nexport const setSiteConfig = (config) => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config,\n    };\n};\n","import {\n    OneDriveError,\n    Policy,\n    QiniuError,\n    Response,\n    UpyunError,\n} from \"../types\";\nimport { sizeToString } from \"../utils\";\n\nexport enum UploaderErrorName {\n    InvalidFile = \"InvalidFile\",\n    NoPolicySelected = \"NoPolicySelected\",\n    UnknownPolicyType = \"UnknownPolicyType\",\n    FailedCreateUploadSession = \"FailedCreateUploadSession\",\n    FailedDeleteUploadSession = \"FailedDeleteUploadSession\",\n    HTTPRequestFailed = \"HTTPRequestFailed\",\n    LocalChunkUploadFailed = \"LocalChunkUploadFailed\",\n    SlaveChunkUploadFailed = \"SlaveChunkUploadFailed\",\n    WriteCtxFailed = \"WriteCtxFailed\",\n    RemoveCtxFailed = \"RemoveCtxFailed\",\n    ReadCtxFailed = \"ReadCtxFailed\",\n    InvalidCtxData = \"InvalidCtxData\",\n    CtxExpired = \"CtxExpired\",\n    RequestCanceled = \"RequestCanceled\",\n    ProcessingTaskDuplicated = \"ProcessingTaskDuplicated\",\n    OneDriveChunkUploadFailed = \"OneDriveChunkUploadFailed\",\n    OneDriveEmptyFile = \"OneDriveEmptyFile\",\n    FailedFinishOneDriveUpload = \"FailedFinishOneDriveUpload\",\n    S3LikeChunkUploadFailed = \"S3LikeChunkUploadFailed\",\n    S3LikeUploadCallbackFailed = \"S3LikeUploadCallbackFailed\",\n    COSUploadCallbackFailed = \"COSUploadCallbackFailed\",\n    COSPostUploadFailed = \"COSPostUploadFailed\",\n    UpyunPostUploadFailed = \"UpyunPostUploadFailed\",\n    QiniuChunkUploadFailed = \"QiniuChunkUploadFailed\",\n    FailedFinishOSSUpload = \"FailedFinishOSSUpload\",\n    FailedFinishQiniuUpload = \"FailedFinishQiniuUpload\",\n    FailedTransformResponse = \"FailedTransformResponse\",\n}\n\nconst RETRY_ERROR_LIST = [\n    UploaderErrorName.FailedCreateUploadSession,\n    UploaderErrorName.HTTPRequestFailed,\n    UploaderErrorName.LocalChunkUploadFailed,\n    UploaderErrorName.SlaveChunkUploadFailed,\n    UploaderErrorName.RequestCanceled,\n    UploaderErrorName.ProcessingTaskDuplicated,\n    UploaderErrorName.FailedTransformResponse,\n];\n\nconst RETRY_CODE_LIST = [-1];\n\nexport class UploaderError implements Error {\n    public stack: string | undefined;\n    constructor(public name: UploaderErrorName, public message: string) {\n        this.stack = new Error().stack;\n    }\n\n    public Message(i18n: string): string {\n        return this.message;\n    }\n\n    public Retryable(): boolean {\n        return RETRY_ERROR_LIST.includes(this.name);\n    }\n}\n\n// 文件未通过存储策略验证\nexport class FileValidateError extends UploaderError {\n    // 未通过验证的文件属性\n    public field: \"size\" | \"suffix\";\n\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, field: \"size\" | \"suffix\", policy: Policy) {\n        super(UploaderErrorName.InvalidFile, message);\n        this.field = field;\n        this.policy = policy;\n    }\n\n    public Message(i18n: string): string {\n        if (this.field == \"size\") {\n            return `文件大小超出存储策略限制（最大：${sizeToString(\n                this.policy.maxSize\n            )}）`;\n        }\n\n        return `存储策略不支持上传此扩展名的文件（当前支持：${\n            this.policy.allowedSuffix\n                ? this.policy.allowedSuffix.join(\",\")\n                : \"*\"\n        }）`;\n    }\n}\n\n// 未知存储策略\nexport class UnknownPolicyError extends UploaderError {\n    // 对应的存储策略\n    public policy: Policy;\n\n    constructor(message: string, policy: Policy) {\n        super(UploaderErrorName.UnknownPolicyType, message);\n        this.policy = policy;\n    }\n}\n\n// 后端 API 出错\nexport class APIError extends UploaderError {\n    constructor(\n        name: UploaderErrorName,\n        message: string,\n        protected response: Response<any>\n    ) {\n        super(name, message);\n    }\n\n    public Message(i18n: string): string {\n        let msg = `${this.message}: ${this.response.msg}`;\n        if (this.response.error) {\n            msg += ` (${this.response.error})`;\n        }\n\n        return msg;\n    }\n\n    public Retryable(): boolean {\n        return (\n            super.Retryable() && RETRY_CODE_LIST.includes(this.response.code)\n        );\n    }\n}\n\n// 无法创建上传会话\nexport class CreateUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedCreateUploadSession, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = \"无法创建上传会话\";\n        return super.Message(i18n);\n    }\n}\n\n// 无法删除上传会话\nexport class DeleteUploadSessionError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedDeleteUploadSession, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = \"无法删除上传会话\";\n        return super.Message(i18n);\n    }\n}\n\n// HTTP 请求出错\nexport class HTTPError extends UploaderError {\n    public response?: any;\n    constructor(public axiosErr: any, protected url: string) {\n        super(UploaderErrorName.HTTPRequestFailed, axiosErr.message);\n        this.response = axiosErr.response;\n    }\n\n    public Message(i18n: string): string {\n        return `请求失败: ${this.axiosErr} (${this.url})`;\n    }\n}\n\n// 本地分块上传失败\nexport class LocalChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.LocalChunkUploadFailed, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = `分片 [${this.chunkIndex}] 上传失败`;\n        return super.Message(i18n);\n    }\n}\n\n// 无法创建上传会话\nexport class RequestCanceledError extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.RequestCanceled, \"Request canceled\");\n    }\n}\n\n// 从机分块上传失败\nexport class SlaveChunkUploadError extends APIError {\n    constructor(response: Response<any>, protected chunkIndex: number) {\n        super(UploaderErrorName.SlaveChunkUploadFailed, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = `分片 [${this.chunkIndex}] 上传失败`;\n        return super.Message(i18n);\n    }\n}\n\n// 上传任务冲突\nexport class ProcessingTaskDuplicatedError extends UploaderError {\n    constructor() {\n        super(\n            UploaderErrorName.ProcessingTaskDuplicated,\n            \"Processing task duplicated\"\n        );\n    }\n\n    public Message(i18n: string): string {\n        return \"同名文件的上传任务已经在处理中\";\n    }\n}\n\n// OneDrive 分块上传失败\nexport class OneDriveChunkError extends UploaderError {\n    constructor(public response: OneDriveError) {\n        super(\n            UploaderErrorName.OneDriveChunkUploadFailed,\n            response.error.message\n        );\n    }\n\n    public Message(i18n: string): string {\n        return `分片上传失败: ${this.message}`;\n    }\n}\n\n// OneDrive 选择了空文件上传\nexport class OneDriveEmptyFileSelected extends UploaderError {\n    constructor() {\n        super(UploaderErrorName.OneDriveEmptyFile, \"empty file not supported\");\n    }\n\n    public Message(i18n: string): string {\n        return `暂不支持上传空文件至 OneDrive，请通过创建文件按钮创建空文件`;\n    }\n}\n\n// OneDrive 无法完成文件上传\nexport class OneDriveFinishUploadError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.FailedFinishOneDriveUpload, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = `无法完成文件上传`;\n        return super.Message(i18n);\n    }\n}\n\n// S3 类策略分块上传失败\nexport class S3LikeChunkError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(i18n: string): string {\n        return `分片上传失败: ${this.message}`;\n    }\n}\n\n// OSS 完成传失败\nexport class S3LikeFinishUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.S3LikeChunkUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(i18n: string): string {\n        return `无法完成文件上传: ${this.message} (${\n            this.response.getElementsByTagName(\"Code\")[0].innerHTML\n        })`;\n    }\n}\n\n// qiniu 分块上传失败\nexport class QiniuChunkError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.QiniuChunkUploadFailed, response.error);\n    }\n\n    public Message(i18n: string): string {\n        return `分片上传失败: ${this.message}`;\n    }\n}\n\n// qiniu 完成传失败\nexport class QiniuFinishUploadError extends UploaderError {\n    constructor(public response: QiniuError) {\n        super(UploaderErrorName.FailedFinishQiniuUpload, response.error);\n    }\n\n    public Message(i18n: string): string {\n        return `无法完成文件上传: ${this.message}`;\n    }\n}\n\n// COS 上传失败\nexport class COSUploadError extends UploaderError {\n    constructor(public response: Document) {\n        super(\n            UploaderErrorName.COSPostUploadFailed,\n            response.getElementsByTagName(\"Message\")[0].innerHTML\n        );\n    }\n\n    public Message(i18n: string): string {\n        return `上传失败: ${this.message} (${\n            this.response.getElementsByTagName(\"Code\")[0].innerHTML\n        })`;\n    }\n}\n\n// COS 无法完成上传回调\nexport class COSUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.COSUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = `无法完成文件上传`;\n        return super.Message(i18n);\n    }\n}\n\n// Upyun 上传失败\nexport class UpyunUploadError extends UploaderError {\n    constructor(public response: UpyunError) {\n        super(UploaderErrorName.UpyunPostUploadFailed, response.message);\n    }\n\n    public Message(i18n: string): string {\n        return `上传失败: ${this.message}`;\n    }\n}\n\n// S3 无法完成上传回调\nexport class S3LikeUploadCallbackError extends APIError {\n    constructor(response: Response<any>) {\n        super(UploaderErrorName.S3LikeUploadCallbackFailed, \"\", response);\n    }\n\n    public Message(i18n: string): string {\n        this.message = `无法完成文件上传`;\n        return super.Message(i18n);\n    }\n}\n\n// 无法解析响应\nexport class TransformResponseError extends UploaderError {\n    constructor(private response: string, parseError: Error) {\n        super(UploaderErrorName.FailedTransformResponse, parseError.message);\n    }\n\n    public Message(i18n: string): string {\n        return `无法解析响应: ${this.message} (${this.response})`;\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport {\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    withStyles,\n} from \"@material-ui/core\";\n\nconst mapStateToProps = (state) => {\n    return {\n        snackbar: state.viewUpdate.snackbar,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = (theme) => ({\n    success: {\n        backgroundColor: theme.palette.success.main,\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warning: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\n        .isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = (theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal,\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    LogoutVariant,\n    HomeAccount,\n    DesktopMacDashboard,\n    AccountArrowRight,\n    AccountPlus,\n} from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Avatar,\n    Popover,\n    Typography,\n    Chip,\n    ListItemIcon,\n    MenuItem,\n    Divider,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport { setSessionStatus, setUserPopover, toggleSnackbar } from \"../../redux/explorer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: (status) => {\n            dispatch(setSessionStatus(status));\n        },\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            登录\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus />\n                            </ListItemIcon>\n                            注册\n                        </MenuItem>\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\",\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    个人主页\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    管理面板\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\",\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                退出登录\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Grow,\n    Avatar,\n    IconButton,\n    Tooltip,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\nimport { setUserPopover } from \"../../redux/explorer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        whiteSpace: \"nowrap\",\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\",\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\",\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\",\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\",\n    },\n    badge: {\n        marginTop: \"10px\",\n    },\n    visitorMenu: {\n        width: 200,\n    },\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null,\n    };\n\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    openURL = (url) => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={\"设置\"}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\"\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip title={\"返回主页\"} placement=\"bottom\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MusicNote from \"@material-ui/icons/MusicNote\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport {\n    allowSharePreview,\n    changeThemeColor,\n    sizeToString,\n    vhCheck,\n} from \"../../utils\";\nimport Uploader from \"../Uploader/Uploader.js\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Drawer,\n    Grow,\n    Hidden,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    SwipeableDrawer,\n    Toolbar,\n    Tooltip,\n    Typography,\n    withStyles,\n    withTheme,\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SubActions from \"../FileManager/Navigator/SubActions\";\nimport {\n    audioPreviewSetIsOpen,\n    changeContextMenu,\n    drawerToggleAction,\n    navigateTo,\n    openCreateFolderDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openPreview,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    saveFile,\n    searchMyFile,\n    setSelectedTarget,\n    setSessionStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { startBatchDownload } from \"../../redux/explorer/action\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst mapStateToProps = (state) => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        keywords: state.explorer.keywords,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin,\n        audioPreviewPlayingName: state.explorer.audioPreview.playingName,\n        audioPreviewIsOpen: state.explorer.audioPreview.isOpen,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        searchMyFile: (keywords) => {\n            dispatch(searchMyFile(keywords));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        },\n        openPreview: () => {\n            dispatch(openPreview());\n        },\n        audioPreviewOpen: () => {\n            dispatch(audioPreviewSetIsOpen(true));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\",\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0,\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n    },\n    menuIcon: {\n        marginRight: 20,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile,\n    },\n    drawerPaperDesktop: {\n        width: drawerWidth,\n    },\n    upDrawer: {\n        overflowX: \"hidden\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            justifyContent: \"space-between\",\n        },\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 0,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    badge: {\n        top: 1,\n        right: -15,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    sectionForFile: {\n        display: \"flex\",\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\",\n    },\n    fabButton: {\n        borderRadius: \"100px\",\n    },\n    badgeFix: {\n        right: \"10px\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    dividerFix: {\n        marginTop: \"8px\",\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\",\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\",\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\",\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\",\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\",\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n    },\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false,\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.selected.length === 0) !==\n            (nextProps.selected.length === 0)\n        ) {\n            changeThemeColor(\n                !(this.props.selected.length === 0)\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            return;\n        }\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    archiveDownload = () => {\n        this.props.startBatchDownload(this.props.share);\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"我的分享\" />\n                                </ListItem>\n                                <ListItem\n                                    button\n                                    key=\"离线下载\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/aria2?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"离线下载\" />\n                                </ListItem>\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"WebDAV\" />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"任务队列\" />\n                                </ListItem>\n                                {pathHelper.isMobile() && (\n                                    <>\n                                        <Divider />\n                                        <ListItem\n                                            button\n                                            key=\"个人设置\"\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/setting?\"\n                                                )\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <Settings\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText primary=\"个人设置\" />\n                                        </ListItem>\n\n                                        <ListItem\n                                            button\n                                            key=\"退出登录\"\n                                            onClick={this.signOut}\n                                        >\n                                            <ListItemIcon>\n                                                <LogoutVariant\n                                                    className={classes.iconFix}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText primary=\"退出登录\" />\n                                        </ListItem>\n                                    </>\n                                )}\n                            </List>\n                        </div>\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary=\"登录\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            key=\"注册\"\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"注册\" />\n                        </ListItem>\n                    </div>\n                )}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length === 0\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={this.handleDrawerToggle}\n                                className={classes.menuButton}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length === 0 && (\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open drawer\"\n                                onClick={() =>\n                                    this.props.handleDesktopToggle(\n                                        !this.props.desktopOpen\n                                    )\n                                }\n                                className={classes.menuButtonDesktop}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                        )}\n                        {this.props.selected.length > 0 &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow in={this.props.selected.length > 0}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length === 0 && (\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                noWrap\n                                onClick={() => {\n                                    this.props.history.push(\"/\");\n                                }}\n                            >\n                                {this.props.subTitle\n                                    ? this.props.subTitle\n                                    : this.props.title}\n                            </Typography>\n                        )}\n\n                        {!this.props.isMultiple &&\n                            (this.props.withFile || this.props.withFolder) &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {this.props.withFile &&\n                                        (isHomePage ||\n                                            pathHelper.isSharePage(\n                                                this.props.location.pathname\n                                            )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected.length} 个对象\n                                </Typography>\n                            )}\n                        {this.props.selected.length === 0 && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {this.props.selected.length > 0 &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip title=\"打开\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openPreview()\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip title=\"下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) && (\n                                        <Grow\n                                            in={\n                                                this.props.isMultiple ||\n                                                this.props.withFolder\n                                            }\n                                        >\n                                            <Tooltip title=\"打包下载\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.archiveDownload()\n                                                    }\n                                                >\n                                                    <DownloadIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple &&\n                                        !pathHelper.isMobile() &&\n                                        !isSharePage && (\n                                            <Grow in={!this.props.isMultiple}>\n                                                <Tooltip title=\"分享\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openShareDialog()\n                                                        }\n                                                    >\n                                                        <ShareIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"重命名\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"移动\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip title=\"删除\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n\n                                            {pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"更多操作\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.changeContextMenu(\n                                                                    \"file\",\n                                                                    true\n                                                                )\n                                                            }\n                                                        >\n                                                            <MoreHoriz />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(!this.props.isMultiple && this.props.withFile) &&\n                            this.props.audioPreviewPlayingName != null && (\n                                <IconButton\n                                    title=\"音乐\"\n                                    className={classes.sideButton}\n                                    onClick={this.props.audioPreviewOpen}\n                                    color={\"inherit\"}\n                                >\n                                    <MusicNote fontSize={\"default\"} />\n                                </IconButton>\n                            )}\n\n                        {this.props.selected.length === 0 && <UserAvatar />}\n                        {this.props.selected.length === 0 &&\n                            isHomePage &&\n                            pathHelper.isMobile() && <SubActions inherit />}\n                    </Toolbar>\n                </AppBar>\n                <Uploader />\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaperDesktop,\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen,\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\n\nimport {\n    withStyles,\n    InputBase,\n    Popper,\n    Fade,\n    Paper,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { HotKeys, configure } from \"react-hotkeys\";\nimport { searchMyFile } from \"../../redux/explorer\";\n\nconfigure({\n    ignoreTags: [],\n});\n\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchMyFile: (keywords) => {\n            dispatch(searchMyFile(keywords));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\",\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\",\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300,\n            },\n        },\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364,\n    },\n});\n\nconst keyMap = {\n    SEARCH: \"enter\",\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\",\n        };\n    }\n\n    handlers = {\n        SEARCH: (e) => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        },\n    };\n\n    handleChange = (event) => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value,\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\",\n        });\n    };\n\n    searchMyFile = () => {\n        this.props.searchMyFile(\"keywords/\" + this.input);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input)\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder=\"搜索...\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary,\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    在我的文件中搜索{\" \"}\n                                                    <strong>\n                                                        {this.state.input}\n                                                    </strong>\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                在全站分享中搜索{\" \"}\n                                                <strong>\n                                                    {this.state.input}\n                                                </strong>\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\n\nimport {\n    Divider,\n    LinearProgress,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\",\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\",\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\",\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\",\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\",\n        },\n        marginTop: \"5px\",\n    },\n    bar: {\n        marginTop: \"5px\",\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\n// TODO 使用 hooks 重构\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false,\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then((response) => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total),\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            存储空间{\"   \"}\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={\n                                        \"已使用 \" +\n                                        (this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used) +\n                                        \", 共 \" +\n                                        (this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total)\n                                    }\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        {\" / \"}\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\n\nexport default StorageBar;\n","import { Task } from \"../types\";\nimport Logger from \"../logger\";\nimport { UploaderError, UploaderErrorName } from \"../errors\";\nimport { ChunkProgress } from \"../uploader/chunk\";\n\nexport const sizeToString = (bytes: number): string => {\n    if (bytes === 0) return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\n// 文件分块\nexport function getChunks(\n    file: File,\n    chunkByteSize: number | undefined\n): Blob[] {\n    // 如果 chunkByteSize 比文件大或为0，则直接取文件的大小\n    if (!chunkByteSize || chunkByteSize > file.size || chunkByteSize == 0) {\n        chunkByteSize = file.size;\n    }\n\n    const chunks: Blob[] = [];\n    const count = Math.ceil(file.size / chunkByteSize);\n    for (let i = 0; i < count; i++) {\n        const chunk = file.slice(\n            chunkByteSize * i,\n            i === count - 1 ? file.size : chunkByteSize * (i + 1)\n        );\n        chunks.push(chunk);\n    }\n\n    if (chunks.length == 0) {\n        chunks.push(file.slice(0));\n    }\n    return chunks;\n}\n\nexport function sumChunk(list: ChunkProgress[]) {\n    return list.reduce((data, loaded) => data + loaded.loaded, 0);\n}\n\nconst resumeKeyPrefix = \"cd_upload_ctx_\";\n\nfunction isTask(toBeDetermined: Task | string): toBeDetermined is Task {\n    return !!(toBeDetermined as Task).name;\n}\n\nexport function getResumeCtxKey(task: Task | string): string {\n    if (isTask(task)) {\n        return `${resumeKeyPrefix}name_${task.name}_dst_${task.dst}_size_${task.size}_policy_${task.policy.id}`;\n    }\n\n    return task;\n}\n\nexport function setResumeCtx(task: Task, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.setItem(ctxKey, JSON.stringify(task));\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.WriteCtxFailed,\n                `setResumeCtx failed: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function removeResumeCtx(task: Task | string, logger: Logger) {\n    const ctxKey = getResumeCtxKey(task);\n    try {\n        localStorage.removeItem(ctxKey);\n    } catch (err) {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.RemoveCtxFailed,\n                `removeResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n}\n\nexport function cleanupResumeCtx(logger: Logger) {\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            try {\n                localStorage.removeItem(key);\n            } catch (err) {\n                logger.warn(\n                    new UploaderError(\n                        UploaderErrorName.RemoveCtxFailed,\n                        `removeResumeCtx failed. key: ${key}`\n                    )\n                );\n            }\n        }\n    }\n}\n\nexport function getResumeCtx(task: Task | string, logger: Logger): Task | null {\n    const ctxKey = getResumeCtxKey(task);\n    let localInfoString: string | null = null;\n    try {\n        localInfoString = localStorage.getItem(ctxKey);\n    } catch {\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.ReadCtxFailed,\n                `getResumeCtx failed. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (localInfoString == null) {\n        return null;\n    }\n\n    let localInfo: Task | null = null;\n    try {\n        localInfo = JSON.parse(localInfoString);\n    } catch {\n        // 本地信息已被破坏，直接删除\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.InvalidCtxData,\n                `getResumeCtx failed to parse. key: ${ctxKey}`\n            )\n        );\n    }\n\n    if (\n        localInfo &&\n        localInfo.session &&\n        localInfo.session.expires < Math.floor(Date.now() / 1000)\n    ) {\n        removeResumeCtx(task, logger);\n        logger.warn(\n            new UploaderError(\n                UploaderErrorName.CtxExpired,\n                `upload session already expired at ${localInfo.session.expires}. key: ${ctxKey}`\n            )\n        );\n        return null;\n    }\n\n    return localInfo;\n}\n\nexport function listResumeCtx(logger: Logger): Task[] {\n    const res: Task[] = [];\n    for (let i = 0, len = localStorage.length; i < len; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith(resumeKeyPrefix)) {\n            const value = getResumeCtx(key, logger);\n            if (value) {\n                res.push(value);\n            }\n        }\n    }\n\n    return res;\n}\n\nexport function OBJtoXML(obj: any): string {\n    let xml = \"\";\n    for (const prop in obj) {\n        xml += \"<\" + prop + \">\";\n        if (Array.isArray(obj[prop])) {\n            for (const array of obj[prop]) {\n                // A real botch fix here\n                xml += \"</\" + prop + \">\";\n                xml += \"<\" + prop + \">\";\n\n                xml += OBJtoXML(new Object(array));\n            }\n        } else if (typeof obj[prop] == \"object\") {\n            xml += OBJtoXML(new Object(obj[prop]));\n        } else {\n            xml += obj[prop];\n        }\n        xml += \"</\" + prop + \">\";\n    }\n    return xml.replace(/<\\/?[0-9]{1,}>/g, \"\");\n}\n\nexport function getFileInput(id: number, isFolder: boolean): HTMLInputElement {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.id = `upload-file-input-${id}`;\n    if (isFolder) {\n        input.id = `upload-folder-input-${id}`;\n        input.setAttribute(\"webkitdirectory\", \"true\");\n        input.setAttribute(\"mozdirectory\", \"true\");\n    } else {\n        input.id = `upload-file-input-${id}`;\n        input.multiple = true;\n    }\n    input.hidden = true;\n    document.body.appendChild(input);\n    return input;\n}\n\nexport function pathJoin(parts: string[], sep = \"/\"): string {\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + sep), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(sep + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(sep);\n}\n\nfunction basename(path: string): string {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function trimPrefix(src: string, prefix: string): string {\n    if (src.startsWith(prefix)) {\n        return src.slice(prefix.length);\n    }\n    return src;\n}\n\nexport function getDirectoryUploadDst(dst: string, file: any): string {\n    let relPath = file.webkitRelativePath;\n    if (!relPath || relPath == \"\") {\n        relPath = file.fsPath;\n        if (!relPath || relPath == \"\") {\n            return dst;\n        }\n    }\n\n    relPath = trimPrefix(relPath, \"/\");\n\n    return basename(pathJoin([dst, relPath]));\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\nasync function readEntriesPromise(directoryReader: any): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            directoryReader.readEntries(resolve, reject);\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nasync function readFilePromise(fileReader: any, path: string): Promise<any> {\n    try {\n        return await new Promise((resolve, reject) => {\n            fileReader.file((file: any) => {\n                file.fsPath = path;\n                resolve(file);\n            });\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n// Get all the entries (files or sub-directories) in a directory by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader: any): Promise<any> {\n    const entries: any[] = [];\n    let readEntries = await readEntriesPromise(directoryReader);\n    while (readEntries.length > 0) {\n        entries.push(...readEntries);\n        readEntries = await readEntriesPromise(directoryReader);\n    }\n    return entries;\n}\n\n// Drop handler function to get all files\nexport async function getAllFileEntries(\n    dataTransferItemList: DataTransferItemList\n): Promise<File[]> {\n    const fileEntries: any[] = [];\n    // Use BFS to traverse entire directory/file structure\n    const queue: any[] = [];\n    // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n    for (let i = 0; i < dataTransferItemList.length; i++) {\n        const fileEntry = dataTransferItemList[i].webkitGetAsEntry();\n        if (!fileEntry) {\n            const file = dataTransferItemList[i].getAsFile();\n            if (file) {\n                fileEntries.push(file);\n            }\n        }\n\n        queue.push(dataTransferItemList[i].webkitGetAsEntry());\n    }\n    while (queue.length > 0) {\n        const entry = queue.shift();\n        if (!entry) {\n            continue;\n        }\n        if (entry.isFile) {\n            fileEntries.push(await readFilePromise(entry, entry.fullPath));\n        } else if (entry.isDirectory) {\n            const reader = entry.createReader();\n            const entries: any = await readAllDirectoryEntries(reader);\n            queue.push(...entries);\n        }\n    }\n    return fileEntries;\n}\n\nexport function isFileDrop(e: DragEvent): boolean {\n    return !!e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n}\n","export * from \"./pool\";\nexport * from \"./helper\";\nexport * from \"./validator\";\nexport * from \"./request\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { setUserPopover } from \"../../redux/explorer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isLogin: state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserPopover: (anchor) => {\n            dispatch(setUserPopover(anchor));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\",\n    },\n    nickName: {\n        color: \"#fff\",\n        marginLeft: \"10px\",\n        marginTop: \"15px\",\n        fontSize: \"17px\",\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n    },\n    groupName: {\n        marginLeft: \"10px\",\n        color: \"#ffffff\",\n        opacity: \"0.54\",\n    },\n    storageCircle: {\n        width: \"200px\",\n    },\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = (e) => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : \"未登录\"}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : \"游客\"}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(UserInfoCompoment));\n\nexport default UserInfo;\n","import React, { useCallback, useState, Suspense } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles,\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    Triangle,\n    TriangleOutline,\n    FolderHeartOutline,\n    TagPlus,\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../redux/explorer\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": { margin: 0 },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\",\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\",\n    },\n    iconFix: {\n        marginLeft: \"16px\",\n    },\n    hiddenButton: {\n        display: \"none\",\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2),\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline,\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback((k) => dispatch(searchMyFile(k)), [\n        dispatch,\n    ]);\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color,\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = (tag) => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = (id) => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter((v) => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <ListItem\n                        button\n                        key=\"我的文件\"\n                        onClick={() =>\n                            !isHomePage && history.push(\"/home?path=%2F\")\n                        }\n                    >\n                        <ListItemIcon>\n                            <KeyboardArrowRight\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            tagOpen && isHomePage,\n                                        [classes.iconFix]: true,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                            {!(tagOpen && isHomePage) && (\n                                <FolderShared className={classes.iconFix} />\n                            )}\n                        </ListItemIcon>\n                        <ListItemText primary=\"我的文件\" />\n                    </ListItem>\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List onMouseLeave={() => setTagHover(null)}>\n                        <ListItem\n                            button\n                            id=\"pickfiles\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        <ListItem\n                            button\n                            id=\"pickfolder\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        {[\n                            {\n                                key: \"视频\",\n                                id: \"video\",\n                                icon: (\n                                    <VideoIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconVideo,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: \"图片\",\n                                id: \"image\",\n                                icon: (\n                                    <ImageIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconImg,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: \"音频\",\n                                id: \"audio\",\n                                icon: (\n                                    <MusicIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconAudio,\n                                        ]}\n                                    />\n                                ),\n                            },\n                            {\n                                key: \"文档\",\n                                id: \"doc\",\n                                icon: (\n                                    <DocIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconDoc,\n                                        ]}\n                                    />\n                                ),\n                            },\n                        ].map((v) => (\n                            <ListItem\n                                button\n                                key={v.key}\n                                onClick={() => SearchMyFile(v.id + \"/internal\")}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {v.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={v.key} />\n                            </ListItem>\n                        ))}\n                        {tags.map((v) => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id);\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        <ListItem button onClick={() => setAddTagModal(true)}>\n                            <ListItemIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary={\"添加标签...\"} />\n                        </ListItem>\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport { showImgPreivew } from \"../../redux/explorer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false,\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true,\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true,\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={(n) =>\n                            this.setState({\n                                photoIndex: n,\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","import { ChunkProgress } from \"./uploader/chunk\";\n\nexport enum PolicyType {\n    local = \"local\",\n    remote = \"remote\",\n    oss = \"oss\",\n    qiniu = \"qiniu\",\n    onedrive = \"onedrive\",\n    cos = \"cos\",\n    upyun = \"upyun\",\n    s3 = \"s3\",\n}\n\nexport interface Policy {\n    id: number;\n    name: string;\n    allowedSuffix: Nullable<string[]>;\n    maxSize: number;\n    type: PolicyType;\n}\n\nexport enum TaskType {\n    file,\n    resumeHint,\n}\n\nexport interface Task {\n    type: TaskType;\n    name: string;\n    size: number;\n    policy: Policy;\n    dst: string;\n    file: File;\n    child?: Task[];\n    session?: UploadCredential;\n    chunkProgress: ChunkProgress[];\n    resumed: boolean;\n}\n\ntype Nullable<T> = T | null;\n\nexport interface Response<T> {\n    code: number;\n    data: T;\n    msg: string;\n    error: string;\n}\n\nexport interface UploadSessionRequest {\n    path: string;\n    size: number;\n    name: string;\n    policy_id: number;\n    last_modified?: number;\n}\n\nexport interface UploadCredential {\n    sessionID: string;\n    expires: number;\n    chunkSize: number;\n    uploadURLs: string[];\n    credential: string;\n    uploadID: string;\n    callback: string;\n    policy: string;\n    ak: string;\n    keyTime: string;\n    path: string;\n    completeURL: string;\n}\n\nexport interface OneDriveError {\n    error: {\n        code: string;\n        message: string;\n        innererror?: {\n            code: string;\n        };\n    };\n}\n\nexport interface OneDriveChunkResponse {\n    expirationDateTime: string;\n    nextExpectedRanges: string[];\n}\n\nexport interface QiniuChunkResponse {\n    etag: string;\n    md5: string;\n}\n\nexport interface QiniuError {\n    error: string;\n}\n\nexport interface QiniuPartsInfo {\n    etag: string;\n    partNumber: number;\n}\n\nexport interface QiniuFinishUploadRequest {\n    parts: QiniuPartsInfo[];\n}\n\nexport interface UpyunError {\n    message: string;\n    code: number;\n}\n\nexport interface S3Part {\n    ETag: string;\n    PartNumber: number;\n}\n","// 所有 Uploader 的基类\nimport { PolicyType, Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\nimport { validate } from \"../utils/validator\";\nimport { CancelToken } from \"../utils/request\";\nimport axios, { CancelTokenSource } from \"axios\";\nimport { createUploadSession, deleteUploadSession } from \"../api\";\nimport * as utils from \"../utils\";\nimport { RequestCanceledError, UploaderError } from \"../errors\";\n\nexport enum Status {\n    added,\n    resumable,\n    initialized,\n    queued,\n    preparing,\n    processing,\n    finishing,\n    finished,\n    error,\n    canceled,\n}\n\nexport interface UploadHandlers {\n    onTransition: (newStatus: Status) => void;\n    onError: (err: Error) => void;\n    onProgress: (data: UploadProgress) => void;\n    onMsg: (msg: string, color: string) => void;\n}\n\nexport interface UploadProgress {\n    total: ProgressCompose;\n    chunks?: ProgressCompose[];\n}\n\nexport interface ProgressCompose {\n    size: number;\n    loaded: number;\n    percent: number;\n    fromCache?: boolean;\n}\n\nexport interface Progress {\n    total: number;\n    loaded: number;\n}\n\nconst resumePolicy = [\n    PolicyType.local,\n    PolicyType.remote,\n    PolicyType.qiniu,\n    PolicyType.oss,\n    PolicyType.onedrive,\n    PolicyType.s3,\n];\nconst deleteUploadSessionDelay = 500;\n\nexport default abstract class Base {\n    public child?: Base[];\n    public status: Status = Status.added;\n    public error?: Error;\n\n    public id = ++Base.id;\n    private static id = 0;\n\n    protected logger: Logger;\n    protected subscriber: UploadHandlers;\n    // 用于取消请求\n    protected cancelToken: CancelTokenSource = CancelToken.source();\n    protected progress: UploadProgress;\n\n    public lastTime = Date.now();\n    public startTime = Date.now();\n\n    constructor(public task: Task, protected manager: UploadManager) {\n        this.logger = new Logger(\n            this.manager.logger.level,\n            \"UPLOADER\",\n            this.id\n        );\n        this.logger.info(\"Initialize new uploader for task: \", task);\n        this.subscriber = {\n            /* eslint-disable @typescript-eslint/no-empty-function */\n            onTransition: (newStatus: Status) => {},\n            onError: (err: Error) => {},\n            onProgress: (data: UploadProgress) => {},\n            onMsg: (msg, color: string) => {},\n            /* eslint-enable @typescript-eslint/no-empty-function */\n        };\n    }\n\n    public subscribe = (handlers: UploadHandlers) => {\n        this.subscriber = handlers;\n    };\n\n    public start = async () => {\n        this.logger.info(\"Activate uploading task\");\n        this.transit(Status.initialized);\n        this.lastTime = this.startTime = Date.now();\n\n        try {\n            validate(this.task.file, this.task.policy);\n        } catch (e) {\n            this.logger.error(\"File validate failed with error:\", e);\n            this.setError(e);\n            return;\n        }\n\n        this.logger.info(\"Enqueued in manager pool\");\n        this.transit(Status.queued);\n        this.manager.pool.enqueue(this).catch((e) => {\n            this.logger.info(\"Upload task failed with error:\", e);\n            this.setError(e);\n        });\n    };\n\n    public run = async () => {\n        this.logger.info(\"Start upload task, create upload session...\");\n        this.transit(Status.preparing);\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.session = await createUploadSession(\n                {\n                    path: this.task.dst,\n                    size: this.task.file.size,\n                    name: this.task.file.name,\n                    policy_id: this.task.policy.id,\n                    last_modified: this.task.file.lastModified,\n                },\n                this.cancelToken.token\n            );\n            this.logger.info(\"Upload session created:\", this.task.session);\n        } else {\n            this.task.session = cachedInfo.session;\n            this.task.resumed = true;\n            this.task.chunkProgress = cachedInfo.chunkProgress;\n            this.logger.info(\"Resume upload from cached ctx:\", cachedInfo);\n        }\n\n        this.transit(Status.processing);\n        await this.upload();\n        await this.afterUpload();\n        utils.removeResumeCtx(this.task, this.logger);\n        this.transit(Status.finished);\n        this.logger.info(\"Upload task completed\");\n    };\n\n    public abstract async upload(): Promise<any>;\n    protected async afterUpload(): Promise<any> {\n        return;\n    }\n\n    public cancel = async () => {\n        if (this.status === Status.finished) {\n            return;\n        }\n\n        this.cancelToken.cancel();\n        await this.cancelUploadSession();\n        this.transit(Status.canceled);\n    };\n\n    public reset = () => {\n        this.cancelToken = axios.CancelToken.source();\n        this.progress = {\n            total: {\n                size: 0,\n                loaded: 0,\n                percent: 0,\n            },\n        };\n    };\n\n    protected setError(e: Error) {\n        if (\n            !(e instanceof UploaderError && e.Retryable()) ||\n            !resumePolicy.includes(this.task.policy.type)\n        ) {\n            this.logger.warn(\"Non-resume error occurs, clean resume ctx cache\");\n            this.cancelUploadSession();\n        }\n\n        if (!(e instanceof RequestCanceledError)) {\n            this.status = Status.error;\n            this.error = e;\n            this.subscriber.onError(e);\n        }\n    }\n\n    protected cancelUploadSession = (): Promise<void> => {\n        return new Promise<void>((resolve) => {\n            utils.removeResumeCtx(this.task, this.logger);\n            if (this.task.session) {\n                setTimeout(() => {\n                    deleteUploadSession(this.task.session!?.sessionID)\n                        .catch((e) => {\n                            this.logger.warn(\n                                \"Failed to cancel upload session: \",\n                                e\n                            );\n                        })\n                        .finally(() => {\n                            resolve();\n                        });\n                }, deleteUploadSessionDelay);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    protected transit(status: Status) {\n        this.status = status;\n        this.subscriber.onTransition(status);\n    }\n\n    public getProgressInfoItem(\n        loaded: number,\n        size: number,\n        fromCache?: boolean\n    ): ProgressCompose {\n        return {\n            size,\n            loaded,\n            percent: (loaded / size) * 100,\n            ...(fromCache == null ? {} : { fromCache }),\n        };\n    }\n\n    public key(): string {\n        return utils.getResumeCtxKey(this.task);\n    }\n}\n","export type LogLevel = \"INFO\" | \"WARN\" | \"ERROR\" | \"OFF\";\n\nexport default class Logger {\n    constructor(\n        public level: LogLevel = \"OFF\",\n        private prefix = \"UPLOAD\",\n        private id: number = 1\n    ) {}\n\n    private getPrintPrefix(level: LogLevel) {\n        return `Cloudreve-Uploader [${level}][${this.prefix}#${this.id}]:`;\n    }\n\n    info(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.log(this.getPrintPrefix(\"INFO\"), ...args);\n        }\n    }\n\n    warn(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.warn(this.getPrintPrefix(\"WARN\"), ...args);\n        }\n    }\n\n    error(...args: unknown[]) {\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\", \"ERROR\"];\n        if (allowLevel.includes(this.level)) {\n            // eslint-disable-next-line no-console\n            console.error(this.getPrintPrefix(\"ERROR\"), ...args);\n        }\n    }\n}\n","import {\n    OneDriveChunkResponse,\n    QiniuChunkResponse,\n    QiniuFinishUploadRequest,\n    QiniuPartsInfo,\n    S3Part,\n    UploadCredential,\n    UploadSessionRequest,\n} from \"../types\";\nimport { OBJtoXML, request, requestAPI } from \"../utils\";\nimport {\n    COSUploadCallbackError,\n    COSUploadError,\n    CreateUploadSessionError,\n    DeleteUploadSessionError,\n    HTTPError,\n    LocalChunkUploadError,\n    OneDriveChunkError,\n    OneDriveFinishUploadError,\n    QiniuChunkError,\n    QiniuFinishUploadError,\n    S3LikeChunkError,\n    S3LikeFinishUploadError,\n    S3LikeUploadCallbackError,\n    SlaveChunkUploadError,\n    UpyunUploadError,\n} from \"../errors\";\nimport { ChunkInfo, ChunkProgress } from \"../uploader/chunk\";\nimport { Progress } from \"../uploader/base\";\nimport { CancelToken } from \"axios\";\n\nexport async function createUploadSession(\n    req: UploadSessionRequest,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\"file/upload\", {\n        method: \"put\",\n        data: req,\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new CreateUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function deleteUploadSession(id: string): Promise<any> {\n    const res = await requestAPI<UploadCredential>(`file/upload/${id}`, {\n        method: \"delete\",\n    });\n\n    if (res.data.code != 0) {\n        throw new DeleteUploadSessionError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function localUploadChunk(\n    sessionID: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(\n        `file/upload/${sessionID}/${chunk.index}`,\n        {\n            method: \"post\",\n            headers: { \"content-type\": \"application/octet-stream\" },\n            data: chunk.chunk,\n            onUploadProgress: (progressEvent) => {\n                onProgress({\n                    loaded: progressEvent.loaded,\n                    total: progressEvent.total,\n                });\n            },\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new LocalChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function slaveUploadChunk(\n    url: string,\n    credential: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await request<any>(`${url}?chunk=${chunk.index}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            Authorization: credential,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new SlaveChunkUploadError(res.data, chunk.index);\n    }\n\n    return res.data.data;\n}\n\nexport async function oneDriveUploadChunk(\n    url: string,\n    range: string, // if range is empty, this will be an request to query the session status\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<OneDriveChunkResponse> {\n    const res = await request<OneDriveChunkResponse>(url, {\n        method: range === \"\" ? \"get\" : \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            ...(range !== \"\" && { \"content-range\": range }),\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new OneDriveChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function finishOneDriveUpload(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<UploadCredential> {\n    const res = await requestAPI<UploadCredential>(\n        `callback/onedrive/finish/${sessionID}`,\n        {\n            method: \"post\",\n            data: \"{}\",\n            cancelToken: cancel,\n        }\n    );\n\n    if (res.data.code != 0) {\n        throw new OneDriveFinishUploadError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function s3LikeUploadChunk(\n    url: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<string> {\n    const res = await request<string>(url, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.headers.etag;\n}\n\nexport async function s3LikeFinishUpload(\n    url: string,\n    isOss: boolean,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    let body = \"\";\n    if (!isOss) {\n        body += \"<CompleteMultipartUpload>\";\n        chunks.forEach((chunk) => {\n            body += \"<Part>\";\n            const part: S3Part = {\n                PartNumber: chunk.index + 1,\n                ETag: chunk.etag!,\n            };\n            body += OBJtoXML(part);\n            body += \"</Part>\";\n        });\n        body += \"</CompleteMultipartUpload>\";\n    }\n\n    const res = await request<any>(url, {\n        method: \"post\",\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n        data: body,\n        headers: isOss\n            ? {\n                  \"content-type\": \"application/octet-stream\",\n                  \"x-oss-forbid-overwrite\": \"true\",\n                  \"x-oss-complete-all\": \"yes\",\n              }\n            : {\n                  \"content-type\": \"application/xhtml+xml\",\n              },\n        validateStatus: function (status) {\n            return status == 200;\n        },\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new S3LikeFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuDriveUploadChunk(\n    url: string,\n    upToken: string,\n    chunk: ChunkInfo,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<QiniuChunkResponse> {\n    const res = await request<QiniuChunkResponse>(`${url}/${chunk.index + 1}`, {\n        method: \"put\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: chunk.chunk,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuChunkError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function qiniuFinishUpload(\n    url: string,\n    upToken: string,\n    chunks: ChunkProgress[],\n    cancel: CancelToken\n): Promise<any> {\n    const content: QiniuFinishUploadRequest = {\n        parts: chunks.map(\n            (chunk): QiniuPartsInfo => {\n                return {\n                    etag: chunk.etag!,\n                    partNumber: chunk.index + 1,\n                };\n            }\n        ),\n    };\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"application/json\",\n            authorization: \"UpToken \" + upToken,\n        },\n        data: content,\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new QiniuFinishUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    path: string,\n    callback: string,\n    sessionID: string,\n    keyTime: string,\n    credential: string,\n    ak: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"key\", path);\n    bodyFormData.append(\"x-cos-meta-callback\", callback);\n    bodyFormData.append(\"x-cos-meta-key\", sessionID);\n    bodyFormData.append(\"q-sign-algorithm\", \"sha1\");\n    bodyFormData.append(\"q-key-time\", keyTime);\n    bodyFormData.append(\"q-ak\", ak);\n    bodyFormData.append(\"q-signature\", credential);\n    bodyFormData.append(\"name\", file.name);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n        responseType: \"document\",\n        transformResponse: undefined,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new COSUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function cosUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/cos/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new COSUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n\nexport async function upyunFormUploadChunk(\n    url: string,\n    file: File,\n    policy: string,\n    credential: string,\n    onProgress: (p: Progress) => void,\n    cancel: CancelToken\n): Promise<any> {\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"policy\", policy);\n    bodyFormData.append(\"authorization\", credential);\n    // File must be the last element in the form\n    bodyFormData.append(\"file\", file);\n\n    const res = await request<any>(`${url}`, {\n        method: \"post\",\n        headers: {\n            \"content-type\": \"multipart/form-data\",\n        },\n        data: bodyFormData,\n        onUploadProgress: (progressEvent) => {\n            onProgress({\n                loaded: progressEvent.loaded,\n                total: progressEvent.total,\n            });\n        },\n        cancelToken: cancel,\n    }).catch((e) => {\n        if (e instanceof HTTPError && e.response) {\n            throw new UpyunUploadError(e.response.data);\n        }\n\n        throw e;\n    });\n\n    return res.data;\n}\n\nexport async function s3LikeUploadCallback(\n    sessionID: string,\n    cancel: CancelToken\n): Promise<any> {\n    const res = await requestAPI<any>(`callback/s3/${sessionID}`, {\n        method: \"get\",\n        data: \"{}\",\n        cancelToken: cancel,\n    });\n\n    if (res.data.code != 0) {\n        throw new S3LikeUploadCallbackError(res.data);\n    }\n\n    return res.data.data;\n}\n","import { Policy, PolicyType, Task, TaskType } from \"./types\";\nimport Logger, { LogLevel } from \"./logger\";\nimport { UnknownPolicyError, UploaderError, UploaderErrorName } from \"./errors\";\nimport Base from \"./uploader/base\";\nimport Local from \"./uploader/local\";\nimport { Pool } from \"./utils/pool\";\nimport {\n    cleanupResumeCtx,\n    getAllFileEntries,\n    getDirectoryUploadDst,\n    getFileInput,\n    isFileDrop,\n    listResumeCtx,\n} from \"./utils\";\nimport Remote from \"./uploader/remote\";\nimport OneDrive from \"./uploader/onedrive\";\nimport OSS from \"./uploader/oss\";\nimport Qiniu from \"./uploader/qiniu\";\nimport COS from \"./uploader/cos\";\nimport Upyun from \"./uploader/upyun\";\nimport S3 from \"./uploader/s3\";\nimport ResumeHint from \"./uploader/placeholder\";\n\nexport interface Option {\n    logLevel: LogLevel;\n    concurrentLimit: number;\n    dropZone?: HTMLElement;\n    onDropOver?: (e: DragEvent) => void;\n    onDropLeave?: (e: DragEvent) => void;\n    onToast: (type: string, msg: string) => void;\n    onDropFileAdded?: (uploaders: Base[]) => void;\n}\n\nexport enum SelectType {\n    File,\n    Directory,\n}\n\nexport default class UploadManager {\n    public logger: Logger;\n    public pool: Pool;\n    private static id = 0;\n    private policy?: Policy;\n    private fileInput: HTMLInputElement;\n    private directoryInput: HTMLInputElement;\n    private id = ++UploadManager.id;\n    // used for proactive upload (drop, paste)\n    private currentPath = \"/\";\n\n    constructor(private o: Option) {\n        this.logger = new Logger(o.logLevel, \"MANAGER\");\n        this.logger.info(`Initialized with log level: ${o.logLevel}`);\n\n        this.pool = new Pool(o.concurrentLimit);\n        this.fileInput = getFileInput(this.id, false);\n        this.directoryInput = getFileInput(this.id, true);\n\n        if (o.dropZone) {\n            this.logger.info(`Drag and drop container set to:`, o.dropZone);\n            o.dropZone.addEventListener(\"dragenter\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropOver) {\n                        o.onDropOver(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"dragleave\", (e) => {\n                if (isFileDrop(e)) {\n                    e.preventDefault();\n                    if (o.onDropLeave) {\n                        o.onDropLeave(e);\n                    }\n                }\n            });\n\n            o.dropZone.addEventListener(\"drop\", this.onFileDroppedIn);\n        }\n    }\n\n    changeConcurrentLimit = (newLimit: number) => {\n        this.pool.limit = newLimit;\n    };\n\n    dispatchUploader(task: Task): Base {\n        if (task.type == TaskType.resumeHint) {\n            return new ResumeHint(task, this);\n        }\n\n        switch (task.policy.type) {\n            case PolicyType.local:\n                return new Local(task, this);\n            case PolicyType.remote:\n                return new Remote(task, this);\n            case PolicyType.onedrive:\n                return new OneDrive(task, this);\n            case PolicyType.oss:\n                return new OSS(task, this);\n            case PolicyType.qiniu:\n                return new Qiniu(task, this);\n            case PolicyType.cos:\n                return new COS(task, this);\n            case PolicyType.upyun:\n                return new Upyun(task, this);\n            case PolicyType.s3:\n                return new S3(task, this);\n            default:\n                throw new UnknownPolicyError(\n                    \"Unknown policy type.\",\n                    task.policy\n                );\n        }\n    }\n\n    // 设定当前存储策略\n    public setPolicy(p: Policy, path: string) {\n        this.policy = p;\n        this.currentPath = path;\n        if (p == undefined) {\n            this.logger.info(`Currently no policy selected`);\n            return;\n        }\n\n        this.logger.info(`Switching policy to:`, p);\n\n        if (p.allowedSuffix != undefined && p.allowedSuffix.length > 0) {\n            const acceptVal = p.allowedSuffix\n                .map((v) => {\n                    return \".\" + v;\n                })\n                .join(\",\");\n            this.logger.info(`Set allowed file suffix to ${acceptVal}`);\n            this.fileInput.setAttribute(\"accept\", acceptVal);\n        } else {\n            this.logger.info(`Set allowed file suffix to *`);\n            this.fileInput.removeAttribute(\"accept\");\n        }\n    }\n\n    // 选择文件\n    public select = (dst: string, type = SelectType.File): Promise<Base[]> => {\n        return new Promise<Base[]>((resolve) => {\n            if (this.policy == undefined) {\n                this.logger.warn(\n                    `Calling file selector while no policy is set`\n                );\n                throw new UploaderError(\n                    UploaderErrorName.NoPolicySelected,\n                    \"No policy selected.\"\n                );\n            }\n\n            this.fileInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.directoryInput.onchange = (ev: Event) =>\n                this.fileSelectCallback(ev, dst, resolve);\n            this.fileInput.value = \"\";\n            this.directoryInput.value = \"\";\n            type == SelectType.File\n                ? this.fileInput.click()\n                : this.directoryInput.click();\n        });\n    };\n\n    public resumeTasks = (): Base[] => {\n        const tasks = listResumeCtx(this.logger);\n        if (tasks.length > 0) {\n            this.logger.info(\n                `Resumed ${tasks.length} unfinished task(s) from local storage:`,\n                tasks\n            );\n        }\n        return tasks\n            .filter(\n                (t) =>\n                    t.chunkProgress.length > 0 && t.chunkProgress[0].loaded > 0\n            )\n            .map((t) =>\n                this.dispatchUploader({ ...t, type: TaskType.resumeHint })\n            );\n    };\n\n    public cleanupSessions = () => {\n        cleanupResumeCtx(this.logger);\n    };\n\n    private fileSelectCallback = (\n        ev: Event | File[],\n        dst: string,\n        resolve: (value?: Base[] | PromiseLike<Base[]> | undefined) => void\n    ) => {\n        let files: File[] = [];\n        if (ev instanceof Event) {\n            const target = ev.target as HTMLInputElement;\n            if (!ev || !target || !target.files) return;\n            if (target.files.length > 0) {\n                files = Array.from(target.files);\n            }\n        } else {\n            files = ev as File[];\n        }\n\n        if (files.length > 0) {\n            resolve(\n                files.map(\n                    (file): Base =>\n                        this.dispatchUploader({\n                            type: TaskType.file,\n                            policy: this.policy as Policy,\n                            dst: getDirectoryUploadDst(dst, file),\n                            file: file,\n                            size: file.size,\n                            name: file.name,\n                            chunkProgress: [],\n                            resumed: false,\n                        })\n                )\n            );\n        }\n    };\n\n    private onFileDroppedIn = async (e: DragEvent) => {\n        const containFile =\n            e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\n        if (containFile) {\n            this.o.onDropLeave && this.o.onDropLeave(e);\n            const items = await getAllFileEntries(e.dataTransfer!.items);\n            console.log(items);\n            const uploaders = await new Promise<Base[]>((resolve) =>\n                this.fileSelectCallback(items, this.currentPath, resolve)\n            );\n            this.o.onDropFileAdded && this.o.onDropFileAdded(uploaders);\n        }\n    };\n}\n","import Base, { Status, UploadProgress } from \"./base\";\nimport * as utils from \"../utils\";\nimport { Task, TaskType } from \"../types\";\nimport UploadManager from \"../index\";\nimport Logger from \"../logger\";\n\nexport interface ChunkProgress {\n    loaded: number;\n    index: number;\n    etag?: string;\n}\n\nexport interface ChunkInfo {\n    chunk: Blob;\n    index: number;\n}\n\nexport default abstract class Chunk extends Base {\n    protected chunks: Blob[];\n\n    public upload = async () => {\n        this.logger.info(\"Preparing uploading file chunks.\");\n        this.initBeforeUploadChunks();\n\n        this.logger.info(\"Starting uploading file chunks:\", this.chunks);\n        this.updateLocalCache();\n        for (let i = 0; i < this.chunks.length; i++) {\n            if (\n                this.task.chunkProgress[i].loaded < this.chunks[i].size ||\n                this.chunks[i].size == 0\n            ) {\n                await this.uploadChunk({ chunk: this.chunks[i], index: i });\n                this.logger.info(`Chunk [${i}] uploaded.`);\n                this.updateLocalCache();\n            }\n        }\n    };\n\n    private initBeforeUploadChunks() {\n        this.chunks = utils.getChunks(\n            this.task.file,\n            this.task.session?.chunkSize\n        );\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\n        if (cachedInfo == null) {\n            this.task.chunkProgress = this.chunks.map(\n                (value, index): ChunkProgress => ({\n                    loaded: 0,\n                    index,\n                })\n            );\n        }\n\n        this.notifyResumeProgress();\n    }\n\n    protected abstract async uploadChunk(chunkInfo: ChunkInfo): Promise<any>;\n\n    protected updateChunkProgress(loaded: number, index: number) {\n        this.task.chunkProgress[index].loaded = loaded;\n        this.notifyResumeProgress();\n    }\n\n    private notifyResumeProgress() {\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.file.size + 1\n            ),\n            chunks: this.chunks.map((chunk, index) => {\n                return this.getProgressInfoItem(\n                    this.task.chunkProgress[index].loaded,\n                    chunk.size,\n                    false\n                );\n            }),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    private updateLocalCache() {\n        utils.setResumeCtx(this.task, this.logger);\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { localUploadChunk } from \"../api\";\n\nexport default class Local extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return localUploadChunk(\n            this.task.session?.sessionID!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { slaveUploadChunk } from \"../api\";\n\nexport default class Remote extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return slaveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { finishOneDriveUpload, oneDriveUploadChunk } from \"../api\";\nimport { OneDriveChunkError, OneDriveEmptyFileSelected } from \"../errors\";\nimport { Status } from \"./base\";\n\nexport default class OneDrive extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        if (chunkInfo.chunk.size === 0) {\n            throw new OneDriveEmptyFileSelected();\n        }\n\n        const rangeEnd = this.progress.total.loaded + chunkInfo.chunk.size - 1;\n        return this.sendRange(\n            chunkInfo,\n            this.progress.total.loaded,\n            rangeEnd,\n            0\n        ).catch((e) => {\n            if (\n                e instanceof OneDriveChunkError &&\n                e.response.error.innererror &&\n                e.response.error.innererror.code == \"fragmentOverlap\"\n            ) {\n                return this.alignChunkOffset(chunkInfo);\n            }\n\n            throw e;\n        });\n    }\n\n    private async sendRange(\n        chunkInfo: ChunkInfo,\n        start: number,\n        end: number,\n        chunkOffset: number\n    ) {\n        const range = `bytes ${start}-${end}/${this.task.file.size}`;\n        return oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            range,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(\n                    chunkOffset + p.loaded,\n                    chunkInfo.index\n                );\n            },\n            this.cancelToken.token\n        );\n    }\n\n    private async alignChunkOffset(chunkInfo: ChunkInfo) {\n        this.logger.info(\n            `Chunk [${chunkInfo.index}] overlapped, checking next expected range...`\n        );\n        const rangeStatus = await oneDriveUploadChunk(\n            `${this.task.session?.uploadURLs[0]!}`,\n            \"\",\n            chunkInfo,\n            (p) => {\n                return null;\n            },\n            this.cancelToken.token\n        );\n        const expectedStart = parseInt(\n            rangeStatus.nextExpectedRanges[0].split(\"-\")[0]\n        );\n        this.logger.info(\n            `Next expected range start from OneDrive is ${expectedStart}.`\n        );\n\n        if (expectedStart >= this.progress.total.loaded) {\n            this.logger.info(`This whole chunk is overlapped, skipping...`);\n            this.updateChunkProgress(chunkInfo.chunk.size, chunkInfo.index);\n            return;\n        } else {\n            this.updateChunkProgress(0, chunkInfo.index);\n            const rangeEnd =\n                this.progress.total.loaded + chunkInfo.chunk.size - 1;\n            const newChunkOffset = expectedStart - this.progress.total.loaded;\n            chunkInfo.chunk = chunkInfo.chunk.slice(newChunkOffset);\n            this.updateChunkProgress(newChunkOffset, chunkInfo.index);\n            return this.sendRange(\n                chunkInfo,\n                expectedStart,\n                rangeEnd,\n                newChunkOffset\n            );\n        }\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing upload...`);\n        this.transit(Status.finishing);\n        return finishOneDriveUpload(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { s3LikeFinishUpload, s3LikeUploadChunk } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            true,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class Qiniu extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const chunkRes = await qiniuDriveUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = chunkRes.etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        return qiniuFinishUpload(\n            this.task.session?.uploadURLs[0]!,\n            this.task.session?.credential!,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n    }\n}\n","import Base, { Status } from \"./base\";\nimport { cosFormUploadChunk, cosUploadCallback } from \"../api\";\n\nexport default class COS extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await cosFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.path!,\n            this.task.session?.callback!,\n            this.task.session?.sessionID!,\n            this.task.session?.keyTime!,\n            this.task.session?.credential!,\n            this.task.session?.ak!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n\n    protected async afterUpload(): Promise<any> {\n        this.transit(Status.finishing);\n        this.logger.info(`Sending COS upload callback...`);\n        try {\n            await cosUploadCallback(\n                this.task.session!.sessionID,\n                this.cancelToken.token\n            );\n        } catch (e) {\n            this.logger.warn(`Failed to finish COS upload:`, e);\n        }\n    }\n}\n","import Base from \"./base\";\nimport { upyunFormUploadChunk } from \"../api\";\n\nexport default class Upyun extends Base {\n    public upload = async () => {\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\n        await upyunFormUploadChunk(\n            this.task.session?.uploadURLs[0]!,\n            this.task.file,\n            this.task.session?.policy!,\n            this.task.session?.credential!,\n            (p) => {\n                this.subscriber.onProgress({\n                    total: this.getProgressInfoItem(p.loaded, p.total),\n                });\n            },\n            this.cancelToken.token\n        );\n    };\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport {\n    s3LikeFinishUpload,\n    s3LikeUploadCallback,\n    s3LikeUploadChunk,\n} from \"../api\";\nimport { Status } from \"./base\";\n\nexport default class OSS extends Chunk {\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        const etag = await s3LikeUploadChunk(\n            this.task.session?.uploadURLs[chunkInfo.index]!,\n            chunkInfo,\n            (p) => {\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\n            },\n            this.cancelToken.token\n        );\n\n        this.task.chunkProgress[chunkInfo.index].etag = etag;\n    }\n\n    protected async afterUpload(): Promise<any> {\n        this.logger.info(`Finishing multipart upload...`);\n        this.transit(Status.finishing);\n        await s3LikeFinishUpload(\n            this.task.session!.completeURL,\n            false,\n            this.task.chunkProgress,\n            this.cancelToken.token\n        );\n\n        this.logger.info(`Sending S3-like upload callback...`);\n        return s3LikeUploadCallback(\n            this.task.session!.sessionID,\n            this.cancelToken.token\n        );\n    }\n}\n","import Chunk, { ChunkInfo } from \"./chunk\";\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\nimport { Status } from \"./base\";\nimport { Task } from \"../types\";\nimport UploadManager from \"../index\";\nimport * as utils from \"../utils\";\n\nexport default class ResumeHint extends Chunk {\n    constructor(task: Task, manager: UploadManager) {\n        super(task, manager);\n        this.status = Status.resumable;\n        this.progress = {\n            total: this.getProgressInfoItem(\n                utils.sumChunk(this.task.chunkProgress),\n                this.task.size + 1\n            ),\n        };\n        this.subscriber.onProgress(this.progress);\n    }\n\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\n        return null;\n    }\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Badge, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FilePlus, FolderUpload } from \"mdi-material-ui\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport { SelectType } from \"../Uploader/core\";\nimport { openCreateFileDialog, openCreateFolderDialog, toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7,\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            width: 100,\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        bottom: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function UploadButton(props) {\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n    const path = useSelector((state) => state.navigator.path);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                props.selectFile(path);\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const circularProgress = useMemo(() => {\n        if (props.progress.totalSize > 0) {\n            return (\n                <CircularProgress\n                    key={1}\n                    size={68}\n                    variant=\"determinate\"\n                    value={\n                        (props.progress.processedSize /\n                            props.progress.totalSize) *\n                        100\n                    }\n                    className={classes.fabProgress}\n                />\n            );\n        }\n    }, [classes, props.progress]);\n\n    return (\n        <AutoHidden enable hide={props.taskListOpen}>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge, // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    ariaLabel=\"SpeedDial openIcon example\"\n                    hidden={false}\n                    tooltipTitle=\"上传文件\"\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\",\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle=\"上传文件\"\n                            onClick={() => uploadClicked()}\n                            title={\"上传文件\"}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle=\"上传目录\"\n                            onClick={() =>\n                                props.selectFile(path, SelectType.Directory)\n                            }\n                            title={\"上传目录\"}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle=\"新建目录\"\n                        onClick={() => OpenNewFolderDialog()}\n                        title={\"新建目录\"}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle=\"新建文件\"\n                        onClick={() => OpenNewFileDialog()}\n                        title={\"新建文件\"}\n                    />\n                </SpeedDial>\n                {circularProgress}\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport TimeAgo from \"timeago-react\";\nimport { Status } from \"../core/uploader/base\";\n\nconst useStyles = makeStyles((theme) => ({\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n        wordBreak: \"break-all\",\n    },\n}));\n\nexport default function TaskDetail({ uploader, navigateToDst, error }) {\n    const classes = useStyles();\n    const items = [\n        {\n            name: \"文件名\",\n            value: uploader.task.name,\n        },\n        {\n            name: \"文件大小\",\n            value: `${sizeToString(uploader.task.size)} ${\n                uploader.task.session && uploader.task.session.chunkSize > 0\n                    ? `(${\n                          uploader.task.chunkProgress.length\n                      } 个分片, 每个分片 ${sizeToString(\n                          uploader.task.session.chunkSize\n                      )})`\n                    : \"(无分片)\"\n            }`,\n        },\n        {\n            name: \"存储策略\",\n            value: uploader.task.policy.name,\n        },\n        {\n            name: \"目的路径\",\n            value: (\n                <Link\n                    href={\"javascript:void\"}\n                    onClick={() => navigateToDst(uploader.task.dst)}\n                >\n                    {uploader.task.dst === \"/\" ? \"根目录\" : uploader.task.dst}\n                </Link>\n            ),\n        },\n        uploader.task.session\n            ? {\n                  name: \"上传会话\",\n                  value: (\n                      <>\n                          <TimeAgo\n                              datetime={\n                                  uploader.task.session\n                                      ? uploader.task.session.expires * 1000\n                                      : 0\n                              }\n                              locale=\"zh_CN\"\n                          />\n                          {\"过期\"}\n                      </>\n                  ),\n              }\n            : null,\n        uploader.status === Status.error\n            ? {\n                  name: \"错误信息\",\n                  value: error,\n              }\n            : null,\n    ];\n    return (\n        <Grid container>\n            {items.map((i) => (\n                <>\n                    {i && (\n                        <Grid key={i.name} container xs={12}>\n                            <Grid item xs={3} className={classes.infoTitle}>\n                                {i.name}：\n                            </Grid>\n                            <Grid item xs={9} className={classes.infoValue}>\n                                {i.value}\n                            </Grid>\n                        </Grid>\n                    )}\n                </>\n            ))}\n        </Grid>\n    );\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport {\n    Divider,\n    Grow,\n    IconButton,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Tooltip,\n} from \"@material-ui/core\";\nimport TypeIcon from \"../../FileManager/TypeIcon\";\nimport { useUpload } from \"../UseUpload\";\nimport { Status } from \"../core/uploader/base\";\nimport { UploaderError } from \"../core/errors\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDispatch } from \"react-redux\";\nimport Link from \"@material-ui/core/Link\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport TaskDetail from \"./TaskDetail\";\nimport { SelectType } from \"../core\";\nimport { navigateTo } from \"../../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9,\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n    progressContainer: {\n        position: \"relative\",\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20,\n    },\n    wordBreak: {\n        wordBreak: \"break-all\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    successStatus: {\n        color: theme.palette.success.main,\n    },\n    errorStatus: {\n        color: theme.palette.warning.main,\n        wordBreak: \"break-all\",\n        [theme.breakpoints.up(\"sm\")]: {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n        },\n    },\n    disabledBadge: {\n        marginLeft: theme.spacing(1),\n        height: 18,\n    },\n    delete: {\n        zIndex: 9,\n    },\n    dstLink: {\n        color: theme.palette.success.main,\n        fontWeight: 600,\n    },\n    fileNameContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n        display: \"block\",\n        \"&$expanded\": {},\n    },\n    content: {\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        paddingLeft: 16,\n        paddingRight: 16,\n        paddingTop: 8,\n        paddingBottom: 8,\n        display: \"block\",\n        backgroundColor: theme.palette.background.default,\n    },\n}))(MuiExpansionPanelDetails);\n\nconst getSpeedText = (speed, speedAvg, useSpeedAvg) => {\n    let displayedSpeed = speedAvg;\n    if (!useSpeedAvg) {\n        displayedSpeed = speed;\n    }\n\n    return `${sizeToString(displayedSpeed ? displayedSpeed : 0)} /s`;\n};\n\nconst getErrMsg = (error) => {\n    let errMsg = error.message;\n    if (error instanceof UploaderError) {\n        errMsg = error.Message(\"\");\n    }\n\n    return errMsg;\n};\n\nexport default function UploadTask({\n    uploader,\n    useAvgSpeed,\n    onCancel,\n    onClose,\n    selectFile,\n    filter,\n}) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [taskHover, setTaskHover] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const { status, error, progress, speed, speedAvg, retry } = useUpload(\n        uploader\n    );\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const navigateToDst = (path) => {\n        onClose(null, \"backdropClick\");\n        NavigateTo(path);\n    };\n\n    const toggleDetail = (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const statusText = useMemo(() => {\n        const parent = filename(uploader.task.dst);\n        switch (status) {\n            case Status.added:\n            case Status.initialized:\n            case Status.queued:\n                return <div>排队中...</div>;\n            case Status.preparing:\n                return <div>准备中...</div>;\n            case Status.error:\n                return (\n                    <div className={classes.errorStatus}>\n                        {getErrMsg(error)}\n                        <br />\n                    </div>\n                );\n            case Status.finishing:\n                return <div>处理中...</div>;\n            case Status.resumable:\n                return (\n                    <div>\n                        {`已上传 ${sizeToString(\n                            progress.total.loaded\n                        )} , 共 ${sizeToString(\n                            progress.total.size\n                        )} - ${progress.total.percent.toFixed(2)}%`}\n                    </div>\n                );\n            case Status.processing:\n                if (progress) {\n                    return (\n                        <div>\n                            {`${getSpeedText(\n                                speed,\n                                speedAvg,\n                                useAvgSpeed\n                            )} 已上传 ${sizeToString(\n                                progress.total.loaded\n                            )} , 共 ${sizeToString(\n                                progress.total.size\n                            )} - ${progress.total.percent.toFixed(2)}%`}\n                        </div>\n                    );\n                }\n                return <div>已上传 - </div>;\n            case Status.finished:\n                return (\n                    <div className={classes.successStatus}>\n                        已上传至{\" \"}\n                        <Tooltip title={uploader.task.dst}>\n                            <Link\n                                className={classes.dstLink}\n                                href={\"javascript:void\"}\n                                onClick={() => navigateToDst(uploader.task.dst)}\n                            >\n                                {parent === \"\" ? \"根目录\" : parent}\n                            </Link>\n                        </Tooltip>\n                        <br />\n                    </div>\n                );\n            default:\n                return <div>未知</div>;\n        }\n    }, [status, error, progress, speed, speedAvg, useAvgSpeed]);\n\n    const resumeLabel = useMemo(\n        () =>\n            uploader.task.resumed && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    label={\"断点续传\"}\n                />\n            ) : null,\n        [status, fullScreen]\n    );\n\n    const continueLabel = useMemo(\n        () =>\n            status === Status.resumable && !fullScreen ? (\n                <Chip\n                    className={classes.disabledBadge}\n                    size=\"small\"\n                    color={\"secondary\"}\n                    label={\"可恢复进度\"}\n                />\n            ) : null,\n        [status, fullScreen]\n    );\n\n    const progressBar = useMemo(\n        () =>\n            (status === Status.processing ||\n                status === Status.finishing ||\n                status === Status.resumable) &&\n            progress ? (\n                <div\n                    style={{\n                        backgroundColor:\n                            theme.palette.type === \"light\"\n                                ? lighten(theme.palette.primary.main, 0.8)\n                                : darken(theme.palette.background.paper, 0.2),\n                        width: progress.total.percent + \"%\",\n                    }}\n                    className={classes.progress}\n                />\n            ) : null,\n        [status, progress, theme]\n    );\n\n    const taskDetail = useMemo(() => {\n        return (\n            <TaskDetail\n                error={error && getErrMsg(error)}\n                navigateToDst={navigateToDst}\n                uploader={uploader}\n            />\n        );\n    }, [uploader, expanded]);\n\n    const cancel = () => {\n        setLoading(true);\n        uploader.cancel().then(() => {\n            setLoading(false);\n            onCancel((u) => u.id != uploader.id);\n        });\n    };\n\n    const stopRipple = (e) => {\n        e.stopPropagation();\n    };\n\n    const show = useMemo(() => filter(uploader), [filter, status, uploader]);\n\n    const secondaryAction = useMemo(() => {\n        if (!taskHover && !fullScreen) {\n            return <></>;\n        }\n\n        const actions = [\n            {\n                show: status === Status.error,\n                title: \"重试\",\n                click: retry,\n                icon: <RefreshIcon />,\n                loading: false,\n            },\n            {\n                show: true,\n                title:\n                    status === Status.finished ? \"删除任务记录\" : \"取消并删除\",\n                click: cancel,\n                icon: <DeleteIcon />,\n                loading: loading,\n            },\n            {\n                show: status === Status.resumable,\n                title: \"选取同样文件并恢复上传\",\n                click: () =>\n                    selectFile(uploader.task.dst, SelectType.File, uploader),\n                icon: <PlayArrow />,\n                loading: false,\n            },\n        ];\n\n        return (\n            <>\n                {actions.map((a) => (\n                    <>\n                        {a.show && (\n                            <Grow in={a.show}>\n                                <Tooltip title={a.title}>\n                                    <IconButton\n                                        onMouseDown={stopRipple}\n                                        onTouchStart={stopRipple}\n                                        disabled={a.loading}\n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            a.click();\n                                        }}\n                                    >\n                                        {a.icon}\n                                    </IconButton>\n                                </Tooltip>\n                            </Grow>\n                        )}\n                    </>\n                ))}\n            </>\n        );\n    }, [status, loading, taskHover, fullScreen, uploader]);\n\n    const fileIcon = useMemo(() => {\n        if (!fullScreen) {\n            return <TypeIcon fileName={uploader.task.name} isUpload />;\n        }\n    }, [uploader, fullScreen]);\n\n    return (\n        show && (\n            <>\n                <ExpansionPanel\n                    square\n                    expanded={expanded}\n                    onChange={toggleDetail}\n                >\n                    <ExpansionPanelSummary\n                        aria-controls=\"panel1d-content\"\n                        id=\"panel1d-header\"\n                    >\n                        <div\n                            className={classes.progressContainer}\n                            onMouseLeave={() => setTaskHover(false)}\n                            onMouseOver={() => setTaskHover(true)}\n                        >\n                            {progressBar}\n                            <ListItem\n                                className={classes.progressContent}\n                                button\n                            >\n                                {fileIcon}\n                                <ListItemText\n                                    className={classes.listAction}\n                                    primary={\n                                        <div\n                                            className={\n                                                classes.fileNameContainer\n                                            }\n                                        >\n                                            <div className={classes.wordBreak}>\n                                                {uploader.task.name}\n                                            </div>\n                                            <div>{resumeLabel}</div>\n                                            <div>{continueLabel}</div>\n                                        </div>\n                                    }\n                                    secondary={\n                                        <div className={classes.wordBreak}>\n                                            {statusText}\n                                        </div>\n                                    }\n                                />\n                                {secondaryAction}\n                            </ListItem>\n                        </div>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>{taskDetail}</ExpansionPanelDetails>\n                </ExpansionPanel>\n                <Divider />\n            </>\n        )\n    );\n}\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nexport function useUpload(uploader) {\n    const startLoadedRef = useRef(0);\n    const [status, setStatus] = useState(uploader.status);\n    const [error, setError] = useState(uploader.error);\n    const [progress, setProgress] = useState(uploader.progress);\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        /* eslint-disable @typescript-eslint/no-empty-function */\n        uploader.subscribe({\n            onTransition: (newStatus) => {\n                setStatus(newStatus);\n            },\n            onError: (err) => {\n                setError(err);\n                setStatus(uploader.status);\n            },\n            onProgress: (data) => {\n                setProgress(data);\n            },\n            onMsg: (msg, color) => {\n                ToggleSnackbar(\"top\", \"right\", msg, color);\n            },\n        });\n    }, []);\n\n    // 获取上传速度\n    const [speed, speedAvg] = React.useMemo(() => {\n        if (\n            progress == null ||\n            progress.total == null ||\n            progress.total.loaded == null\n        )\n            return [0, 0];\n        const duration = (Date.now() - (uploader.lastTime || 0)) / 1000;\n        const durationTotal = (Date.now() - (uploader.startTime || 0)) / 1000;\n        const res =\n            progress.total.loaded > startLoadedRef.current\n                ? Math.floor(\n                      (progress.total.loaded - startLoadedRef.current) /\n                          duration\n                  )\n                : 0;\n        const resAvg =\n            progress.total.loaded > 0\n                ? Math.floor(progress.total.loaded / durationTotal)\n                : 0;\n\n        startLoadedRef.current = progress.total.loaded;\n        uploader.lastTime = Date.now();\n        return [res, resAvg];\n    }, [progress]);\n\n    const retry = () => {\n        uploader.reset();\n        uploader.start();\n    };\n\n    return { status, error, progress, speed, speedAvg, retry };\n}\n","import React, { useState } from \"react\";\nimport { Input, InputLabel, makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function ConcurrentOptionDialog({ open, onClose, onSave }) {\n    const [count, setCount] = useState(\n        Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\n    );\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            fullWidth\n            maxWidth={\"xs\"}\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">任务并行数量</DialogTitle>\n\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel htmlFor=\"component-helper\">\n                        同时上传的任务数量\n                    </InputLabel>\n                    <Input\n                        type={\"number\"}\n                        inputProps={{\n                            min: 1,\n                            step: 1,\n                            max: 20,\n                        }}\n                        value={count}\n                        onChange={(e) => setCount(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={count === \"\"}\n                        onClick={() => onSave(count)}\n                    >\n                        确定\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n    Tooltip,\n} from \"@material-ui/core\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../../middleware/Api\";\nimport { TaskType } from \"../core/types\";\nimport { refreshStorage, toggleSnackbar } from \"../../../redux/explorer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { DeleteEmpty } from \"mdi-material-ui\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ConcurrentOptionDialog from \"../../Modals/ConcurrentOption\";\nimport Auth from \"../../../middleware/Auth\";\nimport { ClearAll } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function MoreActions({\n    anchorEl,\n    onClose,\n    uploadManager,\n    deleteTask,\n    useAvgSpeed,\n    setUseAvgSpeed,\n    filter,\n    setFilter,\n    sorter,\n    setSorter,\n    cleanFinished,\n}) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [concurrentDialog, setConcurrentDialog] = useState(false);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\n        dispatch,\n    ]);\n\n    const actionClicked = (next) => () => {\n        onClose();\n        next();\n    };\n\n    const cleanupSessions = () => {\n        uploadManager.cleanupSessions();\n        API.delete(\"/file/upload\")\n            .then((response) => {\n                if (response.rawData.code === 0) {\n                    ToggleSnackbar(\"top\", \"right\", \"上传会话已清除\", \"success\");\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                deleteTask((u) => u.task.type !== TaskType.resumeHint);\n                RefreshStorage();\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"uploader-action-popover\" : undefined;\n\n    const listItems = useMemo(\n        () => [\n            {\n                tooltip: \"列表中不显示已完成、失败、被取消的任务\",\n                onClick: () =>\n                    setFilter(filter === \"default\" ? \"ongoing\" : \"default\"),\n                icon: filter !== \"default\" ? <CheckIcon /> : <Icon />,\n                text: \"隐藏已完成任务\",\n                divider: true,\n            },\n            {\n                tooltip: \"最先添加的任务排在最前\",\n                onClick: () => setSorter(\"default\"),\n                icon: sorter === \"default\" ? <CheckIcon /> : <Icon />,\n                text: \"最先添加靠前\",\n                divider: false,\n            },\n            {\n                tooltip: \"最后添加的任务排在最前\",\n                onClick: () => setSorter(\"reverse\"),\n                icon: sorter === \"reverse\" ? <CheckIcon /> : <Icon />,\n                text: \"最后添加靠前\",\n                divider: true,\n            },\n            {\n                tooltip: \"单个任务上传速度展示为瞬时速度\",\n                onClick: () => setUseAvgSpeed(false),\n                icon: useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: \"瞬时速度\",\n                divider: false,\n            },\n            {\n                tooltip: \"单个任务上传速度展示为平均速度\",\n                onClick: () => setUseAvgSpeed(true),\n                icon: !useAvgSpeed ? <Icon /> : <CheckIcon />,\n                text: \"平均速度\",\n                divider: true,\n            },\n            {\n                tooltip: \"清空服务端所有未完成的上传会话\",\n                onClick: () => cleanupSessions(),\n                icon: <DeleteEmpty />,\n                text: \"清空所有上传会话\",\n                divider: false,\n            },\n            {\n                tooltip: \"清除列表中已完成、失败、被取消的任务\",\n                onClick: () => cleanFinished(),\n                icon: <DeleteIcon />,\n                text: \"清除已完成任务\",\n                divider: true,\n            },\n            {\n                tooltip: \"清除列表中已完成、失败、被取消的任务\",\n                onClick: () => setConcurrentDialog(true),\n                icon: <ClearAll />,\n                text: \"设置并行数量\",\n                divider: false,\n            },\n        ],\n        [\n            useAvgSpeed,\n            setUseAvgSpeed,\n            sorter,\n            setSorter,\n            filter,\n            setFilter,\n            cleanFinished,\n        ]\n    );\n\n    const onConcurrentLimitSave = (val) => {\n        val = parseInt(val);\n        if (val > 0) {\n            Auth.SetPreference(\"concurrent_limit\", val);\n            uploadManager.changeConcurrentLimit(parseInt(val));\n        }\n        setConcurrentDialog(false);\n    };\n\n    return (\n        <>\n            <Menu id={id} open={open} anchorEl={anchorEl} onClose={onClose}>\n                {listItems.map((item) => (\n                    <>\n                        <Tooltip\n                            enterNextDelay={500}\n                            key={item.text}\n                            title={item.tooltip}\n                        >\n                            <MenuItem\n                                dense\n                                onClick={actionClicked(item.onClick)}\n                            >\n                                <ListItemIcon className={classes.icon}>\n                                    {item.icon}\n                                </ListItemIcon>\n                                {item.text}\n                            </MenuItem>\n                        </Tooltip>\n                        {item.divider && <Divider />}\n                    </>\n                ))}\n            </Menu>\n            <ConcurrentOptionDialog\n                open={concurrentDialog}\n                onClose={() => setConcurrentDialog(false)}\n                onSave={onConcurrentLimitSave}\n            />\n        </>\n    );\n}\n","import React, { useMemo, useState } from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AppBar,\n    Dialog,\n    DialogContent,\n    Fade,\n    IconButton,\n    makeStyles,\n    Slide,\n    Toolbar,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandLess\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport classnames from \"classnames\";\nimport UploadTask from \"./UploadTask\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport MoreActions from \"./MoreActions\";\nimport { useSelector } from \"react-redux\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport Nothing from \"../../Placeholder/Nothing\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { Status } from \"../core/uploader/base\";\nimport Auth from \"../../../middleware/Auth\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    rootOverwrite: {\n        top: \"auto!important\",\n        left: \"auto!important\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n    popup: {\n        alignItems: \"flex-end\",\n        justifyContent: \"flex-end\",\n    },\n    dialog: {\n        margin: 0,\n        right: 10,\n        bottom: 10,\n        zIndex: 9999,\n        position: \"fixed\",\n        inset: \"-1!important\",\n    },\n    paddingZero: {\n        padding: 0,\n    },\n    dialogContent: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: 500,\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n        padding: 0,\n        paddingTop: \"0!important\",\n    },\n    virtualList: {\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 56px)\",\n        [theme.breakpoints.up(\"md\")]: {\n            minHeight: 300,\n            maxHeight: \"calc(100vh - 140px)\",\n        },\n    },\n    expandIcon: {\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandIconExpanded: {\n        transform: \"rotate(180deg)\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: -1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    },\n}));\n\nconst sorters = {\n    default: (a, b) => a.id - b.id,\n    reverse: (a, b) => b.id - a.id,\n};\n\nconst filters = {\n    default: (u) => true,\n    ongoing: (u) => u.status < Status.finished,\n};\n\nexport default function TaskList({\n    open,\n    onClose,\n    selectFile,\n    taskList,\n    onCancel,\n    uploadManager,\n    progress,\n    setUploaders,\n}) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const path = useSelector((state) => state.navigator.path);\n    const [expanded, setExpanded] = useState(true);\n    const [useAvgSpeed, setUseAvgSpeed] = useState(\n        Auth.GetPreferenceWithDefault(\"use_avg_speed\", true)\n    );\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [filter, setFilter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_filter\", \"default\")\n    );\n    const [sorter, setSorter] = useState(\n        Auth.GetPreferenceWithDefault(\"task_sorter\", \"default\")\n    );\n\n    const handleActionClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleActionClose = () => {\n        setAnchorEl(null);\n    };\n\n    const close = (e, reason) => {\n        if (reason !== \"backdropClick\") {\n            onClose();\n        } else {\n            setExpanded(false);\n        }\n    };\n    const handlePanelChange = (event, isExpanded) => {\n        setExpanded(isExpanded);\n    };\n\n    useMemo(() => {\n        if (open) {\n            setExpanded(true);\n        }\n    }, [taskList]);\n\n    const progressBar = useMemo(\n        () =>\n            progress.totalSize > 0 ? (\n                <Fade in={progress.totalSize > 0 && !expanded}>\n                    <div>\n                        <div\n                            style={{\n                                backgroundColor:\n                                    theme.palette.type === \"light\"\n                                        ? lighten(\n                                              theme.palette.primary.main,\n                                              0.2\n                                          )\n                                        : lighten(\n                                              theme.palette.primary.main,\n                                              0.2\n                                          ),\n                                width:\n                                    (progress.processedSize /\n                                        progress.totalSize) *\n                                        100 +\n                                    \"%\",\n                            }}\n                            className={classes.progress}\n                        />\n                    </div>\n                </Fade>\n            ) : null,\n        [progress, expanded, classes, theme]\n    );\n\n    const list = useMemo(() => {\n        const currentList = taskList\n            .filter(filters[filter])\n            .sort(sorters[sorter]);\n        if (currentList.length === 0) {\n            return <Nothing size={0.5} top={63} primary={\"没有上传任务\"} />;\n        }\n\n        return (\n            <Virtuoso\n                style={{\n                    height: (fullScreen ? 500 : 73) * currentList.length,\n                }}\n                className={classes.virtualList}\n                increaseViewportBy={180}\n                data={currentList}\n                itemContent={(index, uploader) => (\n                    <UploadTask\n                        selectFile={selectFile}\n                        onClose={close}\n                        onCancel={onCancel}\n                        key={uploader.id}\n                        useAvgSpeed={useAvgSpeed}\n                        uploader={uploader}\n                        filter={filters[filter]}\n                    />\n                )}\n            />\n        );\n    }, [classes, taskList, useAvgSpeed, fullScreen, filter, sorter]);\n\n    return (\n        <>\n            <MoreActions\n                deleteTask={onCancel}\n                onClose={handleActionClose}\n                uploadManager={uploadManager}\n                anchorEl={anchorEl}\n                useAvgSpeed={useAvgSpeed}\n                setUseAvgSpeed={(v) => {\n                    Auth.SetPreference(\"use_avg_speed\", v);\n                    setUseAvgSpeed(v);\n                }}\n                filter={filter}\n                sorter={sorter}\n                setFilter={(v) => {\n                    Auth.SetPreference(\"task_filter\", v);\n                    setFilter(v);\n                }}\n                setSorter={(v) => {\n                    Auth.SetPreference(\"task_sorter\", v);\n                    setSorter(v);\n                }}\n                cleanFinished={() =>\n                    setUploaders((u) => u.filter(filters[\"ongoing\"]))\n                }\n            />\n            <Dialog\n                classes={{\n                    container: classes.popup, // class name, e.g. `classes-nesting-root-x`\n                    root: classnames({\n                        [classes.rootOverwrite]: !fullScreen,\n                    }),\n                }}\n                className={classnames({\n                    [classes.dialog]: !fullScreen,\n                })}\n                fullScreen={fullScreen}\n                open={open}\n                onClose={close}\n                TransitionComponent={Transition}\n                disableEnforceFocus={!expanded}\n                hideBackdrop={!expanded}\n                disableBackdropClick={!expanded}\n                disableScrollLock={!expanded}\n            >\n                <Accordion\n                    expanded={expanded || fullScreen}\n                    onChange={handlePanelChange}\n                >\n                    <AppBar className={classes.appBar}>\n                        {progressBar}\n                        <Toolbar disableGutters className={classes.toolbar}>\n                            <Tooltip title={\"隐藏队列\"}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={close}\n                                    aria-label=\"Close\"\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"inherit\"\n                                className={classes.flex}\n                            >\n                                上传队列\n                            </Typography>\n                            <Tooltip title={\"更多操作\"}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={handleActionClick}\n                                >\n                                    <MoreHoriz />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title={\"添加新文件\"}>\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={() => selectFile(path)}\n                                >\n                                    <AddIcon />\n                                </IconButton>\n                            </Tooltip>\n                            {!fullScreen && (\n                                <Tooltip title={\"展开/折叠队列\"}>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        onClick={() => setExpanded(!expanded)}\n                                    >\n                                        <ExpandMoreIcon\n                                            className={classnames({\n                                                [classes.expandIconExpanded]: expanded,\n                                                [classes.expandIcon]: true,\n                                            })}\n                                        />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                        </Toolbar>\n                    </AppBar>\n                    <AccordionDetails className={classes.paddingZero}>\n                        <DialogContent className={classes.dialogContent}>\n                            {list}\n                        </DialogContent>\n                    </AccordionDetails>\n                </Accordion>\n            </Dialog>\n        </>\n    );\n}\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: \"#fff\",\n            flexDirection: \"column\",\n        },\n    })\n);\n\nexport function DropFileBackground({ open }) {\n    const classes = useStyles();\n    return (\n        <Backdrop className={classes.backdrop} open={open}>\n            <div>\n                <UploadIcon style={{ fontSize: 80 }} />\n            </div>\n            <div>\n                <Typography variant={\"h4\"}>松开鼠标开始上传</Typography>\n            </div>\n        </Backdrop>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport UploadManager, { SelectType } from \"./core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UploadButton from \"../Dial/Create\";\nimport pathHelper from \"../../utils/page\";\nimport { useLocation } from \"react-router-dom\";\nimport { UploaderError } from \"./core/errors\";\nimport TaskList from \"./Popup/TaskList\";\nimport { Status } from \"./core/uploader/base\";\nimport { DropFileBackground } from \"../Placeholder/DropFile\";\nimport {\n    refreshFileList,\n    refreshStorage,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport Auth from \"../../middleware/Auth\";\n\nlet totalProgressCollector = null;\nlet lastProgressStart = -1;\nlet dragCounter = 0;\n\nexport default function Uploader() {\n    const [uploaders, setUploaders] = useState([]);\n    const [taskListOpen, setTaskListOpen] = useState(false);\n    const [dropBgOpen, setDropBgOpen] = useState(0);\n    const [totalProgress, setTotalProgress] = useState({\n        totalSize: 0,\n        processedSize: 0,\n        total: 0,\n        processed: 0,\n    });\n    const keywords = useSelector((state) => state.explorer.keywords);\n    const policy = useSelector((state) => state.explorer.currentPolicy);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const path = useSelector((state) => state.navigator.path);\n    const fileSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFileSelector\n    );\n    const folderSelectCounter = useSelector(\n        (state) => state.viewUpdate.openFolderSelector\n    );\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => dispatch(refreshFileList()), [\n        dispatch,\n    ]);\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\n        dispatch,\n    ]);\n\n    const enableUploader = useMemo(\n        () =>\n            pathHelper.isHomePage(location.pathname) &&\n            isLogin &&\n            keywords === \"\",\n        [location.pathname, isLogin, keywords]\n    );\n\n    const taskAdded = (original = null) => (tasks) => {\n        if (original !== null) {\n            if (tasks.length !== 1 || tasks[0].key() !== original.key()) {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"所选择文件与原始文件不符\",\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        tasks.forEach((t) => t.start());\n\n        setTaskListOpen(true);\n        setUploaders((uploaders) => {\n            if (original !== null) {\n                uploaders = uploaders.filter((u) => u.key() !== original.key());\n            }\n\n            return [...uploaders, ...tasks];\n        });\n    };\n\n    const uploadManager = useMemo(() => {\n        return new UploadManager({\n            logLevel: \"INFO\",\n            concurrentLimit: parseInt(\n                Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\n            ),\n            dropZone: document.querySelector(\"body\"),\n            onToast: (type, msg) => {\n                ToggleSnackbar(\"top\", \"right\", msg, type);\n            },\n            onDropOver: (e) => {\n                dragCounter++;\n                setDropBgOpen((value) => !value);\n            },\n            onDropLeave: (e) => {\n                dragCounter--;\n                setDropBgOpen((value) => !value);\n            },\n            onDropFileAdded: taskAdded(),\n        });\n    }, []);\n\n    useEffect(() => {\n        uploadManager.setPolicy(policy, path);\n    }, [policy]);\n\n    useEffect(() => {\n        const unfinished = uploadManager.resumeTasks();\n        setUploaders((uploaders) => [...uploaders, ...unfinished]);\n        if (!totalProgressCollector) {\n            totalProgressCollector = setInterval(() => {\n                const progress = {\n                    totalSize: 0,\n                    processedSize: 0,\n                    total: 0,\n                    processed: 0,\n                };\n                setUploaders((uploaders) => {\n                    uploaders.forEach((u) => {\n                        if (u.id <= lastProgressStart) {\n                            return;\n                        }\n\n                        progress.totalSize += u.task.size;\n                        progress.total += 1;\n\n                        if (\n                            u.status === Status.finished ||\n                            u.status === Status.canceled ||\n                            u.status === Status.error\n                        ) {\n                            progress.processedSize += u.task.size;\n                            progress.processed += 1;\n                        }\n\n                        if (\n                            u.status === Status.added ||\n                            u.status === Status.initialized ||\n                            u.status === Status.queued ||\n                            u.status === Status.preparing ||\n                            u.status === Status.processing ||\n                            u.status === Status.finishing\n                        ) {\n                            progress.processedSize += u.progress\n                                ? u.progress.total.loaded\n                                : 0;\n                        }\n                    });\n\n                    if (\n                        progress.total > 0 &&\n                        progress.processed === progress.total\n                    ) {\n                        lastProgressStart = uploaders[uploaders.length - 1].id;\n                    }\n                    return uploaders;\n                });\n\n                if (\n                    progress.total > 0 &&\n                    progress.total === progress.processed\n                ) {\n                    RefreshFileList();\n                    RefreshStorage();\n                }\n\n                setTotalProgress(progress);\n            }, 2000);\n        }\n    }, []);\n\n    const selectFile = (path, type = SelectType.File, original = null) => {\n        setTaskListOpen(true);\n\n        // eslint-disable-next-line no-unreachable\n        uploadManager\n            .select(path, type)\n            .then(taskAdded(original))\n            .catch((e) => {\n                if (e instanceof UploaderError) {\n                    ToggleSnackbar(\"top\", \"right\", e.Message(\"\"), \"warning\");\n                } else {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"出现未知错误：\" + e.message,\n                        \"error\"\n                    );\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (fileSelectCounter > 0) {\n            selectFile(path);\n        }\n    }, [fileSelectCounter]);\n\n    useEffect(() => {\n        if (folderSelectCounter > 0) {\n            selectFile(path, SelectType.Directory);\n        }\n    }, [folderSelectCounter]);\n\n    const deleteTask = (filter) => {\n        setUploaders((uploaders) => uploaders.filter(filter));\n    };\n\n    return (\n        <>\n            {enableUploader && (\n                <>\n                    <DropFileBackground open={dropBgOpen > 0} />\n                    <UploadButton\n                        progress={totalProgress}\n                        taskListOpen={taskListOpen}\n                        selectFile={selectFile}\n                        Queued={uploaders.length}\n                        openFileList={() => setTaskListOpen(true)}\n                    />\n                    <TaskList\n                        progress={totalProgress}\n                        uploadManager={uploadManager}\n                        taskList={uploaders}\n                        open={taskListOpen}\n                        onCancel={deleteTask}\n                        selectFile={selectFile}\n                        onClose={() => setTaskListOpen(false)}\n                        setUploaders={setUploaders}\n                    />\n                </>\n            )}\n        </>\n    );\n}\n","/* eslint-disable */\nclass Crc32 {\n    constructor() {\n        this.crc = -1;\n    }\n\n    append(data) {\n        let crc = this.crc | 0;\n        const table = this.table;\n        for (let offset = 0, len = data.length | 0; offset < len; offset++) {\n            crc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xff];\n        }\n        this.crc = crc;\n    }\n\n    get() {\n        return ~this.crc;\n    }\n}\nCrc32.prototype.table = (() => {\n    let i;\n    let j;\n    let t;\n    const table = [];\n    for (i = 0; i < 256; i++) {\n        t = i;\n        for (j = 0; j < 8; j++) {\n            t = t & 1 ? (t >>> 1) ^ 0xedb88320 : t >>> 1;\n        }\n        table[i] = t;\n    }\n    return table;\n})();\n\nconst getDataHelper = (byteLength) => {\n    const uint8 = new Uint8Array(byteLength);\n    return {\n        array: uint8,\n        view: new DataView(uint8.buffer),\n    };\n};\n\nconst pump = (zipObj) =>\n    zipObj.reader.read().then((chunk) => {\n        if (chunk.done) return zipObj.writeFooter();\n        const outputData = chunk.value;\n        zipObj.crc.append(outputData);\n        zipObj.uncompressedLength += outputData.length;\n        zipObj.compressedLength += outputData.length;\n        zipObj.ctrl.enqueue(outputData);\n    });\n\n/**\n * [createWriter description]\n * @param  {Object} underlyingSource [description]\n * @return {Boolean}                  [description]\n */\nfunction createWriter(underlyingSource) {\n    const files = Object.create(null);\n    const filenames = [];\n    const encoder = new TextEncoder();\n    let offset = 0;\n    let activeZipIndex = 0;\n    let ctrl;\n    let activeZipObject, closed;\n\n    function next() {\n        activeZipIndex++;\n        activeZipObject = files[filenames[activeZipIndex]];\n        if (activeZipObject) processNextChunk();\n        else if (closed) closeZip();\n    }\n\n    const zipWriter = {\n        enqueue(fileLike) {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot enqueue a chunk into a readable stream that is closed or has been requested to be closed\"\n                );\n\n            let name = fileLike.name.trim();\n            const date = new Date(\n                typeof fileLike.lastModified === \"undefined\"\n                    ? Date.now()\n                    : fileLike.lastModified\n            );\n\n            if (fileLike.directory && !name.endsWith(\"/\")) name += \"/\";\n            if (files[name]) throw new Error(\"File already exists.\");\n\n            const nameBuf = encoder.encode(name);\n            filenames.push(name);\n\n            const zipObject = (files[name] = {\n                level: 0,\n                ctrl,\n                directory: !!fileLike.directory,\n                nameBuf,\n                comment: encoder.encode(fileLike.comment || \"\"),\n                compressedLength: 0,\n                uncompressedLength: 0,\n                writeHeader() {\n                    const header = getDataHelper(26);\n                    const data = getDataHelper(30 + nameBuf.length);\n\n                    zipObject.offset = offset;\n                    zipObject.header = header;\n                    if (zipObject.level !== 0 && !zipObject.directory) {\n                        header.view.setUint16(4, 0x0800);\n                    }\n                    header.view.setUint32(0, 0x14000808);\n                    header.view.setUint16(\n                        6,\n                        (((date.getHours() << 6) | date.getMinutes()) << 5) |\n                            (date.getSeconds() / 2),\n                        true\n                    );\n                    header.view.setUint16(\n                        8,\n                        ((((date.getFullYear() - 1980) << 4) |\n                            (date.getMonth() + 1)) <<\n                            5) |\n                            date.getDate(),\n                        true\n                    );\n                    header.view.setUint16(22, nameBuf.length, true);\n                    data.view.setUint32(0, 0x504b0304);\n                    data.array.set(header.array, 4);\n                    data.array.set(nameBuf, 30);\n                    offset += data.array.length;\n                    ctrl.enqueue(data.array);\n                },\n                writeFooter() {\n                    const footer = getDataHelper(16);\n                    footer.view.setUint32(0, 0x504b0708);\n\n                    if (zipObject.crc) {\n                        zipObject.header.view.setUint32(\n                            10,\n                            zipObject.crc.get(),\n                            true\n                        );\n                        zipObject.header.view.setUint32(\n                            14,\n                            zipObject.compressedLength,\n                            true\n                        );\n                        zipObject.header.view.setUint32(\n                            18,\n                            zipObject.uncompressedLength,\n                            true\n                        );\n                        footer.view.setUint32(4, zipObject.crc.get(), true);\n                        footer.view.setUint32(\n                            8,\n                            zipObject.compressedLength,\n                            true\n                        );\n                        footer.view.setUint32(\n                            12,\n                            zipObject.uncompressedLength,\n                            true\n                        );\n                    }\n\n                    ctrl.enqueue(footer.array);\n                    offset += zipObject.compressedLength + 16;\n                    next();\n                },\n                fileLike,\n            });\n\n            if (!activeZipObject) {\n                activeZipObject = zipObject;\n                processNextChunk();\n            }\n        },\n        close() {\n            if (closed)\n                throw new TypeError(\n                    \"Cannot close a readable stream that has already been requested to be closed\"\n                );\n            if (!activeZipObject) closeZip();\n            closed = true;\n        },\n    };\n\n    function closeZip() {\n        let length = 0;\n        let index = 0;\n        let indexFilename, file;\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            length += 46 + file.nameBuf.length + file.comment.length;\n        }\n        const data = getDataHelper(length + 22);\n        for (\n            indexFilename = 0;\n            indexFilename < filenames.length;\n            indexFilename++\n        ) {\n            file = files[filenames[indexFilename]];\n            data.view.setUint32(index, 0x504b0102);\n            data.view.setUint16(index + 4, 0x1400);\n            data.array.set(file.header.array, index + 6);\n            data.view.setUint16(index + 32, file.comment.length, true);\n            if (file.directory) {\n                data.view.setUint8(index + 38, 0x10);\n            }\n            data.view.setUint32(index + 42, file.offset, true);\n            data.array.set(file.nameBuf, index + 46);\n            data.array.set(file.comment, index + 46 + file.nameBuf.length);\n            index += 46 + file.nameBuf.length + file.comment.length;\n        }\n        data.view.setUint32(index, 0x504b0506);\n        data.view.setUint16(index + 8, filenames.length, true);\n        data.view.setUint16(index + 10, filenames.length, true);\n        data.view.setUint32(index + 12, length, true);\n        data.view.setUint32(index + 16, offset, true);\n        ctrl.enqueue(data.array);\n        ctrl.close();\n    }\n\n    function processNextChunk() {\n        if (!activeZipObject) return;\n        if (activeZipObject.directory)\n            return activeZipObject.writeFooter(activeZipObject.writeHeader());\n        if (activeZipObject.reader) return pump(activeZipObject);\n        if (activeZipObject.fileLike.stream) {\n            activeZipObject.crc = new Crc32();\n            activeZipObject.reader = activeZipObject.fileLike\n                .stream()\n                .getReader();\n            activeZipObject.writeHeader();\n        } else next();\n    }\n    return new ReadableStream({\n        start: (c) => {\n            ctrl = c;\n            underlyingSource.start &&\n                Promise.resolve(underlyingSource.start(zipWriter));\n        },\n        pull() {\n            return (\n                processNextChunk() ||\n                (underlyingSource.pull &&\n                    Promise.resolve(underlyingSource.pull(zipWriter)))\n            );\n        },\n    });\n}\n\nwindow.ZIP = createWriter;\n","import { CloudreveFile } from \"../types\";\nimport { list } from \"../services/navigate\";\nimport { pathJoin } from \"../component/Uploader/core/utils\";\n\nexport function getPreviewPath(selected: any): string {\n    return encodeURIComponent(\n        selected.path === \"/\"\n            ? selected.path + selected.name\n            : selected.path + \"/\" + selected.name\n    );\n}\n\nexport async function walk(\n    file: CloudreveFile[],\n    share: any\n): Promise<CloudreveFile[]> {\n    let res: CloudreveFile[] = [];\n    for (const f of file) {\n        if (f.type === \"file\") {\n            res.push(f);\n            continue;\n        }\n\n        if (f.type === \"dir\") {\n            const response = await list(pathJoin([f.path, f.name]), share, \"\");\n            const subs = await walk(response.data.objects, share);\n            res = [...res, ...subs];\n        }\n    }\n\n    return res;\n}\n","import { ThunkAction } from \"redux-thunk\";\nimport { setOptionModal } from \"../viewUpdate/action\";\n\nexport const askForOption = (\n    options: any,\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<any> => {\n        return new Promise<void>((resolve, reject) => {\n            const dialog = {\n                open: true,\n                title: title,\n                options: options,\n            };\n            dispatch(\n                setOptionModal({\n                    ...dialog,\n                    onClose: () => {\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                        reject(\"用户拒绝\");\n                    },\n                    callback: (option: any) => {\n                        resolve(option);\n                        dispatch(setOptionModal({ ...dialog, open: false }));\n                    },\n                })\n            );\n        });\n    };\n};\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\nimport { closeContextMenu } from \"../viewUpdate/action\";\nimport { Policy } from \"../../component/Uploader/core/types\";\nimport streamSaver from \"streamsaver\";\nimport \"../../utils/zip\";\nimport pathHelper from \"../../utils/page\";\nimport { isMac } from \"../../utils\";\nimport API, { getBaseURL } from \"../../middleware/Api\";\nimport { pathJoin, trimPrefix } from \"../../component/Uploader/core/utils\";\nimport { getPreviewPath, walk } from \"../../utils/api\";\nimport { askForOption } from \"./async\";\nimport Auth from \"../../middleware/Auth\";\nimport { isPreviewable } from \"../../config\";\nimport { push } from \"connected-react-router\";\nimport {\n    changeContextMenu,\n    closeAllModals,\n    openLoadingDialog,\n    showAudioPreview,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"./index\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list,\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method,\n    };\n};\n\nexport const setSideBar = (open: boolean) => {\n    return {\n        type: \"SET_SIDE_BAR\",\n        open,\n    };\n};\n\nexport const setCurrentPolicy = (policy: Policy) => {\n    return {\n        type: \"SET_CURRENT_POLICY\",\n        policy,\n    };\n};\n\nexport const removeSelectedTargets = (fileIds: any) => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds,\n    };\n};\nexport const addSelectedTargets = (targets: any) => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets,\n    };\n};\nexport const setSelectedTarget = (targets: any) => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets,\n    };\n};\nexport const setLastSelect = (file: any, index: any) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index,\n    };\n};\nexport const setShiftSelectedIds = (shiftSelectedIds: any) => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds,\n    };\n};\n\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.create_date) - Date.parse(b.create_date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.create_date) - Date.parse(a.create_date);\n    },\n    modifyTimePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    modifyTimeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    },\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod } = state.viewUpdate;\n        const dirList = list.filter((x) => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter((x) => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        Auth.SetPreference(\"sort\", method);\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n\nexport const toggleObjectInfoSidebar = (\n    open: boolean\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        if (open) {\n            dispatch(closeContextMenu());\n        }\n        dispatch(setSideBar(true));\n    };\n};\n\nexport const serverSideBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        dispatch(openLoadingDialog(\"正在准备打包下载...\"));\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const dirs: any[] = [],\n            items: any[] = [];\n        selected.map((value) => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs,\n        };\n        if (pathHelper.isSharePage(pathname)) {\n            reqURL = \"/share/archive/\" + share.key;\n            postBody[\"path\"] = selected[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then((response: any) => {\n                if (response.rawData.code === 0) {\n                    dispatch(closeAllModals());\n                    window.location.assign(response.data);\n                } else {\n                    dispatch(\n                        toggleSnackbar(\n                            \"top\",\n                            \"right\",\n                            response.rawData.msg,\n                            \"warning\"\n                        )\n                    );\n                }\n                dispatch(closeAllModals());\n            })\n            .catch((error) => {\n                dispatch(\n                    toggleSnackbar(\"top\", \"right\", error.message, \"error\")\n                );\n                dispatch(closeAllModals());\n            });\n    };\n};\n\nexport const startBatchDownload = (\n    share: any\n): ThunkAction<any, any, any, any> => {\n    return async (dispatch, getState): Promise<void> => {\n        dispatch(changeContextMenu(\"file\", false));\n        const {\n            explorer: { selected },\n        } = getState();\n\n        const user = Auth.GetUser();\n        if (user.group.allowArchiveDownload) {\n            let option: any;\n            try {\n                option = await dispatch(\n                    askForOption(\n                        [\n                            {\n                                key: \"client\",\n                                name: \"浏览器端打包\",\n                                description:\n                                    \"由浏览器实时下载并打包，并非所有环境都支持。\",\n                            },\n                            {\n                                key: \"server\",\n                                name: \"服务端中转打包\",\n                                description:\n                                    \"由服务端中转打包并实时发送到客户端下载。\",\n                            },\n                        ],\n                        \"选择打包下载方式\"\n                    )\n                );\n            } catch (e) {\n                return;\n            }\n\n            if (option.key === \"server\") {\n                dispatch(serverSideBatchDownload(share));\n                return;\n            }\n        }\n\n        dispatch(openLoadingDialog(\"列取文件中...\"));\n\n        let queue: CloudreveFile[] = [];\n        try {\n            queue = await walk(selected, share);\n        } catch (e) {\n            dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    `列取文件时出错：${e.message}`,\n                    \"warning\"\n                )\n            );\n            dispatch(closeAllModals());\n            return;\n        }\n\n        dispatch(closeAllModals());\n        dispatch(\n            toggleSnackbar(\n                \"top\",\n                \"center\",\n                `打包下载已开始，请不要关闭此标签页`,\n                \"info\"\n            )\n        );\n        const fileStream = streamSaver.createWriteStream(\"archive.zip\");\n        let failed = 0;\n        const readableZipStream = new (window as any).ZIP({\n            start(ctrl: any) {\n                // ctrl.close()\n            },\n            async pull(ctrl: any) {\n                while (queue.length > 0) {\n                    const next = queue.pop();\n                    if (next && next.type === \"file\") {\n                        const previewPath = getPreviewPath(next);\n                        const url =\n                            getBaseURL() +\n                            (pathHelper.isSharePage(location.pathname)\n                                ? \"/share/preview/\" +\n                                  share.key +\n                                  (previewPath !== \"\"\n                                      ? \"?path=\" + previewPath\n                                      : \"\")\n                                : \"/file/preview/\" + next.id);\n                        try {\n                            const res = await fetch(url, { cache: \"no-cache\" });\n                            const stream = () => res.body;\n                            const name = trimPrefix(\n                                pathJoin([next.path, next.name]),\n                                \"/\"\n                            );\n                            ctrl.enqueue({ name, stream });\n                            return;\n                        } catch (e) {\n                            failed++;\n                        }\n                    }\n                }\n                ctrl.close();\n            },\n        });\n\n        // more optimized\n        if (window.WritableStream && readableZipStream.pipeTo) {\n            return readableZipStream\n                .pipeTo(fileStream)\n                .then(() => dispatch(closeAllModals()))\n                .catch((e) => {\n                    console.log(e);\n                    toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        `打包遇到错误：${e && e.message}`,\n                        \"warning\"\n                    );\n                    dispatch(closeAllModals());\n                });\n        }\n    };\n};\n\nexport const getViewerURL = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n): string => {\n    const previewPath = getPreviewPath(file);\n    if (isShare) {\n        return (\n            \"/s/\" +\n            file.key +\n            `/${viewer}?name=` +\n            encodeURIComponent(file.name) +\n            \"&share_path=\" +\n            previewPath\n        );\n    }\n\n    return `/${viewer}?p=` + previewPath + \"&id=\" + file.id;\n};\n\nexport const openViewer = (\n    viewer: string,\n    file: any,\n    isShare: boolean | \"\"\n) => {\n    return (dispatch: any, getState: any) => {\n        dispatch(push(getViewerURL(viewer, file, isShare)));\n    };\n};\n\nexport const openPreview = () => {\n    return (dispatch: any, getState: any) => {\n        const {\n            explorer: { selected },\n            router: {\n                location: { pathname },\n            },\n        } = getState();\n        const isShare = pathHelper.isSharePage(pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                dispatch(toggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\"));\n                dispatch(changeContextMenu(\"file\", false));\n                return;\n            }\n        }\n\n        dispatch(changeContextMenu(\"file\", false));\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                dispatch(showImgPreivew(selected[0]));\n                return;\n            case \"msDoc\":\n                dispatch(openViewer(\"doc\", selected[0], isShare));\n                return;\n            case \"audio\":\n                dispatch(showAudioPreview(selected[0]));\n                return;\n            case \"video\":\n                dispatch(openViewer(\"video\", selected[0], isShare));\n                return;\n            case \"pdf\":\n                dispatch(openViewer(\"pdf\", selected[0], isShare));\n                return;\n            case \"edit\":\n                dispatch(openViewer(\"text\", selected[0], isShare));\n                return;\n            case \"code\":\n                dispatch(openViewer(\"code\", selected[0], isShare));\n                return;\n            default:\n                dispatch(openLoadingDialog(\"获取下载地址...\"));\n                return;\n        }\n    };\n};\nexport const selectFile = (file: any, event: any, fileIndex: any) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch: any, getState: any) => {\n        // 多种组合操作忽略\n        if ([ctrlKey, metaKey, shiftKey].filter(Boolean).length > 1) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const {\n            selected,\n            lastSelect,\n            dirList,\n            fileList,\n            shiftSelectedIds,\n        } = explorer;\n        if (\n            shiftKey &&\n            !ctrlKey &&\n            !metaKey &&\n            selected.length !== 0 &&\n            // 点击类型一样\n            file.type === lastSelect.file.type\n        ) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map((v: any) => v.id)));\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = list.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex((value: any) => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n","export const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\",\n];\nexport const msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\",\n];\nexport const subtitleSuffix = [\"ass\", \"srt\", \"vrr\"];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\", \"flac\",\"m4a\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\", \"avi\", \"m3u8\", \"mov\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    py: \"python\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\",\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\",\"m4a\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"],\n};\nexport const policyTypeMap = {\n    local: \"本机\",\n    remote: \"从机\",\n    qiniu: \"七牛\",\n    upyun: \"又拍云\",\n    oss: \"阿里云 OSS\",\n    cos: \"腾讯云\",\n    onedrive: \"OneDrive\",\n    s3: \"Amazon S3\",\n};\nexport const isPreviewable = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    }\n    return false;\n};\nexport const isTorrent = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = (name: any) => {\n    const suffix = name.split(\".\").pop().toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\"排队中\", \"处理中\", \"失败\", \"取消\", \"已完成\"];\nconst taskType = [\"压缩\", \"解压缩\", \"文件中转\", \"导入外部目录\"];\nconst taskProgress = [\n    \"等待中\",\n    \"压缩中\",\n    \"解压缩中\",\n    \"下载中\",\n    \"转存中\",\n    \"索引中\",\n    \"插入中\",\n];\n\nexport const getTaskStatus = (status: any) => {\n    return taskStatus[status];\n};\n\nexport const getTaskType = (status: any) => {\n    return taskType[status];\n};\n\nexport const getTaskProgress = (type: any, status: any) => {\n    if (type === 2) {\n        return \"已完成 \" + (status + 1) + \" 个文件\";\n    }\n    return taskProgress[status];\n};\n","import dayjs from \"dayjs\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport utc from \"dayjs/plugin/utc\";\nimport Auth from \"../middleware/Auth\";\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst defaultTimeZone = \"Asia/Shanghai\";\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\nexport let timeZone = preferTimeZone ? preferTimeZone : defaultTimeZone;\n\nexport function refreshTimeZone() {\n    timeZone = Auth.GetPreference(\"timeZone\");\n    timeZone = timeZone ? timeZone : defaultTimeZone;\n}\n\nexport function formatLocalTime(time, format) {\n    return dayjs(time).tz(timeZone).format(format);\n}\n\nexport function validateTimeZone(name) {\n    try {\n        dayjs().tz(name).format();\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox,\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon,\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon,\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon,\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon,\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox,\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox,\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox,\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText,\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn,\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox,\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore,\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android,\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon,\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp,\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo,\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython,\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC,\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp,\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript,\n    },\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = (props) => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach((k) => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color,\n                    }}\n                >\n                    <IconComponent\n                        className={props.iconClassName}\n                        style={{\n                            color: theme.palette.background.paper,\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color,\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","import React from \"react\";\nimport { PackageVariant } from \"mdi-material-ui\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    emptyContainer: {\n        bottom: \"0\",\n\n        color: theme.palette.action.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.action.disabled,\n    },\n    emptyInfoSmall: {\n        color: theme.palette.action.disabled,\n    },\n}));\n\nexport default function Nothing({ primary, secondary, top = 20, size = 1 }) {\n    const classes = useStyles();\n    return (\n        <div\n            style={{\n                margin: `${50 * size}px auto`,\n                paddingTop: top,\n            }}\n            className={classes.emptyContainer}\n        >\n            <PackageVariant\n                style={{\n                    fontSize: 160 * size,\n                }}\n            />\n            <div\n                style={{\n                    fontSize: 25 * size,\n                }}\n                className={classes.emptyInfoBig}\n            >\n                {primary}\n            </div>\n            {secondary !== \"\" && (\n                <div className={classes.emptyInfoSmall}>{secondary}</div>\n            )}\n        </div>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        fontSize: \"160px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\",\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n    },\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import { Link, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport pageHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    icp: {\n        padding: \"8px 24px\",\n        position: \"absolute\",\n        bottom: 0,\n    },\n}));\n\nexport const ICPFooter = () => {\n    const siteICPId = useSelector((state) => state.siteConfig.siteICPId);\n    const classes = useStyles();\n    const location = useLocation();\n    const [show, setShow] = useState(true);\n\n    useEffect(() => {\n        // 只在分享和登录界面显示\n        const isSharePage = pageHelper.isSharePage(location.pathname);\n        const isLoginPage = pageHelper.isLoginPage(location.pathname);\n        setShow(siteICPId && (isSharePage || isLoginPage));\n    }, [siteICPId, location]);\n\n    if (!show) {\n        return <></>;\n    }\n    return (\n        <div className={classes.icp}>\n            {`备案号: `}\n            <Link\n                href=\"https://beian.miit.gov.cn/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                {siteICPId}\n            </Link>\n        </div>\n    );\n};\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={80}\n        width={200}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import React, {\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../middleware/Api\";\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Placeholder from \"../component/Placeholder/Captcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\nimport { toggleSnackbar } from \"../redux/explorer\";\n\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\n    { captchaRef, setLoading },\n    ref\n) {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then((response) => {\n                setCaptchaData(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        ref.current = refreshCaptcha;\n        refreshCaptcha();\n    }, []);\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <InputLabel htmlFor=\"captcha\">验证码</InputLabel>\n                <Input\n                    name=\"captcha\"\n                    onChange={(e) => setCaptcha(e.target.value)}\n                    type=\"text\"\n                    id=\"captcha\"\n                    value={captcha}\n                    autoComplete\n                />\n            </FormControl>{\" \"}\n            <div>\n                {captchaData === null && (\n                    <div className={classes.captchaPlaceholder}>\n                        <Placeholder />\n                    </div>\n                )}\n                {captchaData !== null && (\n                    <img\n                        src={captchaData}\n                        alt=\"captcha\"\n                        onClick={refreshCaptcha}\n                    />\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function Normal() {\n            return (\n                <NormalCaptcha\n                    captchaRef={captchaParamsRef}\n                    ref={captchaRefreshRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, captchaRefreshRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge,\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\",\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName,\n})(ReCAPTCHA);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FormControl } from \"@material-ui/core\";\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\n\nconst Recaptcha = ({ captchaRef, setLoading }) => {\n    const classes = useStyle();\n\n    const [captcha, setCaptcha] = useState(\"\");\n\n    const reCaptchaKey = useSelector(\n        (state) => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    useEffect(() => {\n        captchaRef.current.captchaCode = captcha;\n    }, [captcha]);\n\n    useEffect(() => setLoading(false), []);\n\n    return (\n        <div className={classes.captchaContainer}>\n            <FormControl margin=\"normal\" required fullWidth>\n                <div>\n                    <ReCaptcha\n                        style={{\n                            display: \"inline-block\",\n                        }}\n                        sitekey={reCaptchaKey}\n                        onChange={(value) => setCaptcha(value)}\n                        id=\"captcha\"\n                        name=\"captcha\"\n                    />\n                </div>\n            </FormControl>{\" \"}\n        </div>\n    );\n};\n\nexport default function useRecaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: true,\n    });\n\n    const captchaParamsRef = useRef({\n        captchaCode: \"\",\n    });\n\n    const CaptchaRender = useCallback(\n        function RecaptchaRender() {\n            return (\n                <Recaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading]\n    );\n\n    return {\n        isValidate,\n        validate: defaultValidate,\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import React, { forwardRef, useCallback, useRef } from \"react\";\nimport Script from \"react-load-script\";\nimport { useSelector } from \"react-redux\";\n\nconst TCaptcha = forwardRef(function TCaptcha(\n    { captchaRef, setLoading, isValidateRef, submitRef },\n    ref\n) {\n    const appid = useSelector(\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\n    );\n    const onLoad = () => {\n        try {\n            ref.current = new window.TencentCaptcha(appid, function (res) {\n                if (res.ret === 0) {\n                    captchaRef.current.ticket = res.ticket;\n                    captchaRef.current.randstr = res.randstr;\n\n                    isValidateRef.current.isValidate = true;\n                    submitRef.current.submit();\n                    console.log(submitRef);\n                } else {\n                    submitRef.current.setLoading(false);\n                }\n            });\n        } catch (e) {\n            console.error(e);\n        }\n        setLoading(false);\n    };\n    return (\n        <Script\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\n            onLoad={onLoad}\n        />\n    );\n});\n\nexport default function useTCaptcha(setLoading) {\n    const isValidate = useRef({\n        isValidate: false,\n    });\n    const captchaParamsRef = useRef({\n        ticket: \"\",\n        randstr: \"\",\n    });\n    const submitRef = useRef({\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        submit: () => {},\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        setLoading: () => {},\n    });\n\n    const captchaRef = useRef();\n\n    const CaptchaRender = useCallback(\n        function TCaptchaRender() {\n            return (\n                <TCaptcha\n                    captchaRef={captchaParamsRef}\n                    setLoading={setLoading}\n                    isValidateRef={isValidate}\n                    submitRef={submitRef}\n                    ref={captchaRef}\n                />\n            );\n        },\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\n    );\n\n    return {\n        isValidate: isValidate,\n        validate: (submit, setLoading) => {\n            submitRef.current.submit = submit;\n            submitRef.current.setLoading = setLoading;\n            captchaRef.current.show();\n        },\n        captchaParamsRef,\n        CaptchaRender,\n    };\n}\n","import { useSelector } from \"react-redux\";\nimport { useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useNormalCaptcha from \"./normal\";\nimport useRecaptcha from \"./recaptcha\";\nimport useTCaptcha from \"./tcaptcha\";\n\nexport const useStyle = makeStyles((theme) => ({\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n}));\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\nexport const defaultValidate = (submit, setLoading) => {};\n\nexport const useCaptcha = () => {\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\n\n    const [captchaLoading, setCaptchaLoading] = useState(true);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const captchaRefreshRef = useRef(() => {});\n\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\n    const recaptcha = useRecaptcha(setCaptchaLoading);\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\n\n    switch (captchaType) {\n        case \"normal\":\n            return { ...normal, captchaRefreshRef, captchaLoading };\n        case \"recaptcha\":\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\n        case \"tcaptcha\":\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\n        default:\n            return { ...normal, captchaRefreshRef, captchaLoading };\n    }\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport { ICPFooter } from \"../Common/ICPFooter\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { applyThemes, setSessionStatus, toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\n    const title = useSelector((state) => state.siteConfig.title);\n    const authn = useSelector((state) => state.siteConfig.authn);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\n        dispatch,\n    ]);\n    const SetSessionStatus = useCallback(\n        (status) => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n    }, [location]);\n\n    const afterLogin = (data) => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = (e) => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then((response) => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function (listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey,\n                });\n            })\n            .then((assertion) => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && loginCaptcha) {\n            validate(() => login(e), setLoading);\n            return;\n        }\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const twoFALogin = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode,\n        })\n            .then((response) => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            登录 {title}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"password\">\n                                        密码\n                                    </InputLabel>\n                                    <Input\n                                        name=\"password\"\n                                        onChange={(e) => setPwd(e.target.value)}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && <CaptchaRender />}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={\n                                        loading ||\n                                        (loginCaptcha ? captchaLoading : false)\n                                    }\n                                    className={classes.submit}\n                                >\n                                    登录\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={(e) =>\n                                            setEmail(e.target.value)\n                                        }\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    下一步\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/signup\"}>注册账号</Link>\n                            </div>\n                        </div>\n\n                        <ICPFooter />\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        使用外部验证器登录\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8,\n                                            }}\n                                        />\n                                        使用密码登录\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        二步验证\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"code\">\n                                请输入六位二步验证代码\n                            </InputLabel>\n                            <Input\n                                id=\"code\"\n                                type=\"number\"\n                                name=\"code\"\n                                onChange={(event) =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            继续登录\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { Folder } from \"@material-ui/icons\";\n\nconst styles = (theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected,\n                    },\n                    classes.button\n                )}\n            >\n                <div\n                    onClick={this.props.onIconClick}\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected,\n                    })}\n                >\n                    {!isSelected && (\n                        <>\n                            {this.props.isFolder && <Folder />}\n                            {!this.props.isFolder && (\n                                <TypeIcon fileName={this.props.file.name} />\n                            )}\n                        </>\n                    )}\n                    {isSelected && (\n                        <Grow in={isSelected}>\n                            <CheckCircleRoundedIcon\n                                className={classes.checkIcon}\n                            />\n                        </Grow>\n                    )}\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                        variant=\"body2\"\n                    >\n                        {this.props.file.name}\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    fade,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport statusHelper from \"../../utils/page\";\nimport Grow from \"@material-ui/core/Grow\";\n\nconst styles = (theme) => ({\n    container: {},\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"6px 6px 0 0\",\n        backgroundColor: theme.palette.background.default,\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"5px 5px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\",\n    },\n    iconBig: {\n        fontSize: 50,\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n        height: \"100%\",\n        width: \"100%\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    noDrag: {\n        userDrag: \"none\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false,\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false,\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected,\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.pic !== \"\" &&\n                        !this.state.showPicIcon &&\n                        this.props.file.pic !== \" \" &&\n                        this.props.file.pic !== \"null,null\" && (\n                            <div className={classes.preview}>\n                                <LazyLoadImage\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: this.state.loading,\n                                            [classes.picPreview]: !this.state\n                                                .loading,\n                                        },\n                                        classes.noDrag\n                                    )}\n                                    src={\n                                        baseURL +\n                                        (isSharePage\n                                            ? \"/share/thumb/\" +\n                                              window.shareInfo.key +\n                                              \"/\" +\n                                              this.props.file.id +\n                                              \"?path=\" +\n                                              encodeURIComponent(\n                                                  this.props.file.path\n                                              )\n                                            : \"/file/thumb/\" +\n                                              this.props.file.id)\n                                    }\n                                    afterLoad={() =>\n                                        this.setState({ loading: false })\n                                    }\n                                    beforeLoad={() =>\n                                        this.setState({ loading: true })\n                                    }\n                                    onError={() =>\n                                        this.setState({ showPicIcon: true })\n                                    }\n                                />\n                                <ContentLoader\n                                    height={150}\n                                    width={170}\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: !this.state.loading,\n                                        },\n                                        classes.loadingAnimation\n                                    )}\n                                >\n                                    <rect\n                                        x=\"0\"\n                                        y=\"0\"\n                                        width=\"100%\"\n                                        height=\"150\"\n                                    />\n                                </ContentLoader>\n                            </div>\n                        )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && <Divider />}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                onClick={this.props.onIconClick}\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected,\n                                })}\n                            >\n                                {!isSelected && (\n                                    <TypeIcon fileName={this.props.file.name} />\n                                )}\n                                {isSelected && (\n                                    <Grow in={isSelected}>\n                                        <CheckCircleRoundedIcon\n                                            className={classes.checkIcon}\n                                        />\n                                    </Grow>\n                                )}\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]: !isSelected,\n                                    [classes.shareFix]: this.props.share,\n                                })}\n                            >\n                                {this.props.file.name}\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport {\n    ButtonBase,\n    fade,\n    makeStyles,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: fade(\n            theme.palette.primary.main,\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\n        ),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"3px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nexport default function Folder({ folder, isActive, onIconClick }) {\n    const selected = useSelector((state) => state.explorer.selected);\n    const classes = useStyles();\n    const isMobile = statusHelper.isMobile();\n    const isSelected =\n        selected.findIndex((value) => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive,\n                },\n                classes.button\n            )}\n        >\n            <div\n                onClick={onIconClick}\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected,\n                })}\n            >\n                {!isSelected && <FolderIcon />}\n                {isSelected && (\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\n                )}\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected,\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Folder from \"../Folder\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\",\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\",\n    },\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    if (object.type === \"dir\") {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} isFolder />\n            </div>\n        );\n    }\n    if (object.type === \"file\" && viewMethod === \"icon\") {\n        return (\n            <div className={classes.dragging}>\n                <FileIcon file={object} />\n            </div>\n        );\n    }\n    if (\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\n        viewMethod === \"list\"\n    ) {\n        return (\n            <div className={classes.dragging}>\n                <SmallIcon file={object} />\n            </div>\n        );\n    }\n};\n\nconst Preview = (props) => {\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`,\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React, { useMemo } from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nimport { useSelector } from \"react-redux\";\n\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n};\n\nfunction getItemStyles(\n    initialOffset,\n    currentOffset,\n    pointerOffset,\n    viewMethod\n) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\",\n        };\n    }\n    let { x, y } = currentOffset;\n    if (viewMethod === \"list\") {\n        x += pointerOffset.x - initialOffset.x;\n        y += pointerOffset.y - initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        opacity: 0.5,\n        transform,\n        WebkitTransform: transform,\n    };\n}\nconst CustomDragLayer = (props) => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset,\n        pointerOffset,\n    } = useDragLayer((monitor) => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        pointerOffset: monitor.getInitialClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const image = useMemo(() => {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }, [itemType, item]);\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    pointerOffset,\n                    viewMethod\n                )}\n            >\n                {image}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { FolderUpload, MagnetOn, FilePlus } from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport { allowSharePreview } from \"../../utils/index\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    openPreview,\n    setSelectedTarget,\n    startBatchDownload,\n    toggleObjectInfoSidebar,\n} from \"../../redux/explorer/action\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCompressDialog,\n    openCopyDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openGetSourceDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    openTorrentDownloadDialog,\n    refreshFileList,\n    setNavigatorLoadingStatus,\n    showImgPreivew,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport {\n    openFileSelector,\n    openFolderSelector,\n} from \"../../redux/viewUpdate/action\";\n\nconst styles = () => ({\n    propover: {},\n    divider: {\n        marginTop: 4,\n        marginBottom: 4,\n    },\n});\n\nconst StyledListItemIcon = withStyles({\n    root: {\n        minWidth: 38,\n    },\n})(ListItemIcon);\n\nconst mapStateToProps = (state) => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        keywords: state.explorer.keywords,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownloadDialog());\n        },\n        openGetSourceDialog: () => {\n            dispatch(openGetSourceDialog());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: (text) => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        openPreview: () => {\n            dispatch(openPreview());\n        },\n        toggleObjectInfoSidebar: (open) => {\n            dispatch(toggleObjectInfoSidebar(open));\n        },\n        startBatchDownload: (share) => {\n            dispatch(startBatchDownload(share));\n        },\n        openFileSelector: () => {\n            dispatch(openFileSelector());\n        },\n        openFolderSelector: () => {\n            dispatch(openFolderSelector());\n        },\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = (e) => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.startBatchDownload(this.props.share);\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            this.props.changeContextMenu(\"file\", false);\n            return;\n        }\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            pathJoin([this.props.path, this.props.selected[0].name])\n        );\n    };\n\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\n    renderMenuItems = (items) => {\n        const res = [];\n        let key = 0;\n\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\n            let visibleCount = 0;\n            items[position].forEach((item) => {\n                if (item.condition) {\n                    res.push(\n                        <MenuItem dense key={key} onClick={item.onClick}>\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <Typography variant=\"inherit\">\n                                {item.text}\n                            </Typography>\n                        </MenuItem>\n                    );\n                    key++;\n                    visibleCount++;\n                }\n            });\n            if (visibleCount > 0 && position != \"bottom\") {\n                res.push(\n                    <Divider key={key} className={this.props.classes.divider} />\n                );\n                key++;\n            }\n        });\n\n        return res;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const emptyMenuList = {\n            top: [\n                {\n                    condition: true,\n                    onClick: () => {\n                        this.props.refreshFileList();\n                        this.props.changeContextMenu(\n                            this.props.menuType,\n                            false\n                        );\n                    },\n                    icon: <RefreshIcon />,\n                    text: \"刷新\",\n                },\n            ],\n            center: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openFileSelector(),\n                    icon: <UploadIcon />,\n                    text: \"上传文件\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openFolderSelector(),\n                    icon: <FolderUpload />,\n                    text: \"上传目录\",\n                },\n                {\n                    condition: user.group.allowRemoteDownload,\n                    onClick: () => this.props.openRemoteDownloadDialog(),\n                    icon: <DownloadIcon />,\n                    text: \"离线下载\",\n                },\n            ],\n            bottom: [\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFolderDialog(),\n                    icon: <NewFolderIcon />,\n                    text: \"创建文件夹\",\n                },\n                {\n                    condition: true,\n                    onClick: () => this.props.openCreateFileDialog(),\n                    icon: <FilePlus />,\n                    text: \"创建文件\",\n                },\n            ],\n        };\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\",\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                dense\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false\n                                    );\n                                }}\n                            >\n                                <StyledListItemIcon>\n                                    <RefreshIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">刷新</Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFileSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <UploadIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传文件\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() => this.props.openFolderSelector()}\n                            >\n                                <StyledListItemIcon>\n                                    <FolderUpload />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传目录\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        离线下载\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <NewFolderIcon />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件夹\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                dense\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <StyledListItemIcon>\n                                    <FilePlus />\n                                </StyledListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <div>\n                                    <MenuItem dense onClick={this.enterFolder}>\n                                        <StyledListItemIcon>\n                                            <OpenFolderIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            进入\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openPreview()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <OpenIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                打开\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() => this.openDownload()}\n                                    >\n                                        <StyledListItemIcon>\n                                            <DownloadIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            下载\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple ||\n                                this.props.withFolder) && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.openArchiveDownload()}\n                                >\n                                    <StyledListItemIcon>\n                                        <DownloadIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        打包下载\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                isHomePage &&\n                                this.props.selected[0].source_enabled && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openGetSourceDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <LinkIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            获取外链\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <MagnetOn />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            创建离线下载任务\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <Unarchive />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            解压缩\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <Archive />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建压缩文件\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <StyledListItemIcon>\n                                        <ShareIcon />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建分享链接\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    dense\n                                    onClick={() =>\n                                        this.props.toggleObjectInfoSidebar(true)\n                                    }\n                                >\n                                    <StyledListItemIcon>\n                                        <InfoOutlined />\n                                    </StyledListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        详细信息\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <Divider className={classes.divider} />\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        dense\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <RenameIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            重命名\n                                        </Typography>\n                                    </MenuItem>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <FileCopyIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                复制\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            dense\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <StyledListItemIcon>\n                                                <MoveIcon />\n                                            </StyledListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                移动\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        dense\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <StyledListItemIcon>\n                                            <DeleteIcon />\n                                        </StyledListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            删除\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired,\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport {\n    fade,\n    TableCell,\n    TableRow,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport pathHelper from \"../../utils/page\";\nimport statusHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst styles = (theme) => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary,\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\",\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\",\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    tableRow: {\n        padding: \"10px 16px\",\n    },\n    checkIcon: {\n        color: theme.palette.primary.main,\n    },\n    active: {\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const isSelectedCurrent =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isSelectedNext =\n            nextProps.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        if (\n            nextProps.selected !== this.props.selected &&\n            isSelectedCurrent === isSelectedNext\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n        const isSelected =\n            this.props.selected.findIndex((value) => {\n                return value === this.props.file;\n            }) !== -1;\n        const isMobile = statusHelper.isMobile();\n\n        return (\n            <TableRow\n                ref={this.props.pref}\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: this.props.isActive,\n                })}\n            >\n                <TableCell\n                    ref={this.props.dref}\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        <div\n                            onClick={\n                                this.props.file.type !== \"up\"\n                                    ? this.props.onIconClick\n                                    : null\n                            }\n                        >\n                            {!isSelected && icon}\n                            {isSelected && (\n                                <Grow in={isSelected}>\n                                    <CheckCircleRoundedIcon\n                                        className={classNames(\n                                            classes.checkIcon,\n                                            classes.icon\n                                        )}\n                                    />\n                                </Grow>\n                            )}\n                        </div>\n                        {this.props.file.name}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                    >\n                        {\" \"}\n                        {formatLocalTime(\n                            this.props.file.date,\n                            \"YYYY-MM-DD H:mm:ss\"\n                        )}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nimport classNames from \"classnames\";\nimport TableItem from \"../TableRow\";\nexport default function FolderDropWarpper({\n    isListView,\n    folder,\n    onIconClick,\n    contextMenu,\n    handleClick,\n    handleDoubleClick,\n    className,\n    pref,\n}) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n    const isActive = canDrop && isOver;\n    if (!isListView) {\n        return (\n            <div ref={drop}>\n                <Folder\n                    folder={folder}\n                    onIconClick={onIconClick}\n                    isActive={isActive}\n                />\n            </div>\n        );\n    }\n    return (\n        <TableItem\n            pref={pref}\n            dref={drop}\n            className={className}\n            onIconClick={onIconClick}\n            contextMenu={contextMenu}\n            handleClick={handleClick}\n            handleDoubleClick={handleDoubleClick}\n            file={folder}\n            isActive={isActive}\n        />\n    );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useLocation } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport { pathBack } from \"../../utils\";\nimport {\n    changeContextMenu,\n    dragAndDrop,\n    navigateTo,\n    openLoadingDialog,\n    openPreview,\n    selectFile,\n    setSelectedTarget,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\",\n    },\n    fixFlex: {\n        minWidth: 0,\n    },\n    dragging: {\n        opacity: 0.4,\n    },\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector((state) => state.navigator.path);\n    const selected = useSelector((state) => state.explorer.selected);\n    const viewMethod = useSelector(\n        (state) => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector((state) => state.navigator.path);\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        (targets) => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        (text) => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n    const OpenPreview = useCallback(() => dispatch(openPreview()), [dispatch]);\n\n    const classes = useStyles();\n\n    const contextMenu = (e) => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex((value) => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const SelectFile = (e) => {\n        dispatch(selectFile(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n    const handleClick = (e) => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n            return;\n        }\n\n        SelectFile(e);\n        if (props.file.type === \"dir\" && !e.ctrlKey) {\n            enterFolder();\n            return;\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n        const isShare = statusHelper.isSharePage(location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\n                return;\n            }\n        }\n        if (window.shareInfo && !window.shareInfo.preview) {\n            OpenLoadingDialog(\"获取下载地址...\");\n            return;\n        }\n\n        OpenPreview();\n    };\n\n    const handleIconClick = (e) => {\n        e.stopPropagation();\n        e.ctrlKey = true;\n        SelectFile(e);\n        return false;\n    };\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod,\n        },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <>\n                {props.file.type === \"dir\" && (\n                    <DropWarpper\n                        isListView={true}\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type !== \"dir\" && (\n                    <TableItem\n                        pref={drag}\n                        className={classNames(classes.container, {\n                            [classes.dragging]: isDragging,\n                        })}\n                        onIconClick={handleIconClick}\n                        contextMenu={contextMenu}\n                        handleClick={handleClick}\n                        handleDoubleClick={handleDoubleClick.bind(this)}\n                        file={props.file}\n                    />\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging,\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper\n                        isListView={false}\n                        onIconClick={handleIconClick}\n                        folder={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon\n                        onIconClick={handleIconClick}\n                        ref={drag}\n                        file={props.file}\n                    />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon\n                        onIconClick={handleIconClick}\n                        file={props.file}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport explorer, { changeContextMenu, navigateTo, navigateUp, openRemoveDialog, setSelectedTarget } from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\nimport Nothing from \"../Placeholder/Nothing\";\n\nconst styles = (theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\",\n    },\n    root: {\n        flexGrow: 1,\n        padding: \"10px\",\n        overflowY: \"auto\",\n        height: \"calc(100vh - 113px)\",\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\",\n        },\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\",\n        },\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\",\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\",\n    },\n    errorBox: {\n        padding: theme.spacing(4),\n    },\n    errorMsg: {\n        marginTop: \"10px\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    flexFix: {\n        minWidth: 0,\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    gridContainer: {\n        [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns: \"repeat(auto-fill,minmax(180px,1fr))\",\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            gridTemplateColumns: \"repeat(auto-fill,minmax(220px,1fr))\",\n        },\n        display: \"grid\",\n    },\n    gridItem: {\n        flex: \"1 1 220px\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        sortMethod: state.viewUpdate.sortMethod,\n        fileList: state.explorer.fileList,\n        dirList: state.explorer.dirList,\n        loading: state.viewUpdate.navigatorLoading,\n        navigatorError: state.viewUpdate.navigatorError,\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\n        keywords: state.explorer.keywords,\n        selected: state.explorer.selected,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        changeSort: (method) => {\n            dispatch(explorer.actions.changeSortMethod(method));\n        },\n    };\n};\n\nclass ExplorerCompoment extends Component {\n    constructor() {\n        super();\n        this.keyMap = {\n            DELETE_FILE: \"del\",\n            SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+a`,\n        };\n\n        this.handlers = {\n            DELETE_FILE: () => {\n                if (this.props.selected.length > 0 && !this.props.share) {\n                    this.props.openRemoveDialog();\n                }\n            },\n            SELECT_ALL: (e) => {\n                e.preventDefault();\n                if (\n                    this.props.selected.length >=\n                    this.props.dirList.length + this.props.fileList.length\n                ) {\n                    this.props.setSelectedTarget([]);\n                } else {\n                    this.props.setSelectedTarget([\n                        ...this.props.dirList,\n                        ...this.props.fileList,\n                    ]);\n                }\n            },\n        };\n\n        configure({\n            ignoreTags: [\"input\", \"select\", \"textarea\"],\n        });\n    }\n\n    contextMenu = (e) => {\n        e.preventDefault();\n        if (\n            this.props.keywords === \"\" &&\n            !pathHelper.isSharePage(this.props.location.pathname)\n        ) {\n            if (!this.props.loading) {\n                this.props.changeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    componentDidUpdate() {\n        this.away = 0;\n    }\n\n    ClickAway = (e) => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        const showView =\n            !this.props.loading &&\n            (this.props.dirList.length !== 0 ||\n                this.props.fileList.length !== 0);\n        const listView = (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"namePos\" ||\n                                    this.props.sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"namePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\"\n                                    );\n                                }}\n                            >\n                                名称\n                                {this.props.sortMethod === \"namePos\" ||\n                                this.props.sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"sizePos\" ||\n                                    this.props.sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"sizePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\"\n                                    );\n                                }}\n                            >\n                                大小\n                                {this.props.sortMethod === \"sizePos\" ||\n                                this.props.sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"modifyTimePos\" ||\n                                    this.props.sortMethod === \"modifyTimeRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"modifyTimePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod ===\n                                            \"modifyTimePos\"\n                                            ? \"modifyTimeRev\"\n                                            : \"modifyTimePos\"\n                                    );\n                                }}\n                            >\n                                修改日期\n                                {this.props.sortMethod === \"modifyTimePos\" ||\n                                this.props.sortMethod === \"modifyTimeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && this.props.path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: \"上级目录\",\n                            }}\n                        />\n                    )}\n                    {this.props.dirList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                    {this.props.fileList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const normalView = (\n            <div className={classes.flexFix}>\n                {this.props.dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件夹\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {this.props.dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    className={classes.gridItem}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {this.props.fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                            className={classes.gridContainer}\n                        >\n                            {this.props.fileList.map((value, index) => (\n                                <Grid\n                                    className={classes.gridItem}\n                                    key={value.id}\n                                    item\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={index}\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        );\n        const view = this.props.viewMethod === \"list\" ? listView : normalView;\n        return (\n            <div\n                onContextMenu={this.contextMenu}\n                onClick={this.ClickAway}\n                className={classNames(\n                    {\n                        [classes.root]: this.props.viewMethod !== \"list\",\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\n                        [classes.rootShare]: this.props.share,\n                    },\n                    classes.button\n                )}\n            >\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\n                <ContextMenu share={this.props.share} />\n                <ImgPreivew />\n                {this.props.navigatorError && (\n                    <Paper elevation={1} className={classes.errorBox}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            :( 请求时出现错误\n                        </Typography>\n                        <Typography\n                            color={\"textSecondary\"}\n                            className={classes.errorMsg}\n                        >\n                            {this.props.navigatorErrorMsg.message}\n                        </Typography>\n                    </Paper>\n                )}\n\n                {this.props.loading && !this.props.navigatorError && (\n                    <div className={classes.loading}>\n                        <CircularProgress />\n                    </div>\n                )}\n\n                {this.props.keywords === \"\" &&\n                    isHomePage &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError && (\n                        <Nothing\n                            primary={\"拖拽文件至此\"}\n                            secondary={\"或点击右下方“上传文件”按钮添加文件\"}\n                        />\n                    )}\n                {((this.props.keywords !== \"\" &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError) ||\n                    (this.props.dirList.length === 0 &&\n                        this.props.fileList.length === 0 &&\n                        !this.props.loading &&\n                        !this.props.navigatorError &&\n                        !isHomePage)) && <Nothing primary={\"什么都没有找到\"} />}\n                {showView && view}\n            </div>\n        );\n    }\n}\n\nExplorerCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Explorer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\n\nexport default Explorer;\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles((theme) => ({\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    active: {\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\n    },\n    button: {\n        textTransform: \"none\",\n    },\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder,\n                    },\n                };\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive,\n                    },\n                    classes.button\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light,\n    },\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder,\n                },\n            });\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive,\n            })}\n            onClick={(e) => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach((element) => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport explorer, {\n    drawerToggleAction,\n    navigateTo,\n    navigateUp,\n    openCompressDialog,\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    openShareDialog,\n    refreshFileList,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n} from \"../../../redux/explorer\";\nimport { fixUrlHash, setGetParameter } from \"../../../utils/index\";\nimport {\n    Divider,\n    ListItemIcon,\n    Menu,\n    MenuItem,\n    withStyles,\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport SubActions from \"./SubActions\";\nimport { setCurrentPolicy } from \"../../../redux/explorer/action\";\nimport { list } from \"../../../services/navigate\";\n\nconst mapStateToProps = (state) => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        keywords: state.explorer.keywords,\n        sortMethod: state.viewUpdate.sortMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        navigateToPath: (path) => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: (list) => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: (status) => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: (target) => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: (open) => {\n            dispatch(drawerToggleAction(open));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        setCurrentPolicy: (policy) => {\n            dispatch(setCurrentPolicy(policy));\n        },\n    };\n};\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst styles = (theme) => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        height: \"49px\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\",\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\",\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\",\n    },\n    expandMore: {\n        color: \"#8d8d8d\",\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\",\n    },\n});\n\nclass NavigatorComponent extends Component {\n    keywords = \"\";\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\"),\n        });\n        const newPath = path !== null ? path : this.props.path;\n        list(newPath, this.props.share, this.keywords)\n            .then((response) => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                if (this.keywords === \"\") {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n                if (response.data.policy) {\n                    this.props.setCurrentPolicy({\n                        id: response.data.policy.id,\n                        name: response.data.policy.name,\n                        type: response.data.policy.type,\n                        maxSize: response.data.policy.max_size,\n                        allowedSuffix: response.data.policy.file_type,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = (path) => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        if (this.props.keywords !== nextProps.keywords) {\n            this.keywords = nextProps.keywords;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = (force) => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = (e) => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    performAction = (e) => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\n            },\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    刷新\n                </MenuItem>\n                {this.props.keywords === \"\" && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            分享\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                压缩\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            创建文件夹\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            创建文件\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare,\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={(e) => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title=\"显示路径\"\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\n                                    {this.state.folders.slice(-1)}  \n                                    <ExpandMore className={classes.expandMore}/>\n                                </Button> */}\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={(e) =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={(e) =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        <SubActions isSmall share={this.props.share} />\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(NavigatorComponent)));\n\nexport default Navigator;\n","import React from \"react\";\nimport { BulletList } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"100%\",\n        // padding: 40,\n        // [theme.breakpoints.down(\"md\")]: {\n        //     width: \"100%\",\n        //     padding: 10\n        // }\n    },\n}));\n\nconst MyLoader = (props) => (\n    <BulletList\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n        className={props.className}\n    />\n);\n\nfunction ListLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default ListLoading;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Clear, Folder } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { setSideBar } from \"../../../redux/explorer/action\";\nimport TypeIcon from \"../TypeIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../../middleware/Api\";\nimport { filename, sizeToString } from \"../../../utils\";\nimport Link from \"@material-ui/core/Link\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TimeAgo from \"timeago-react\";\nimport ListLoading from \"../../Placeholder/ListLoading\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { formatLocalTime } from \"../../../utils/datetime\";\nimport { navigateTo, toggleSnackbar } from \"../../../redux/explorer\";\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxShadow:\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    header: {\n        display: \"flex\",\n        padding: theme.spacing(3),\n        placeContent: \"space-between\",\n    },\n    fileIcon: { width: 33, height: 33 },\n    fileIconSVG: { fontSize: 20 },\n    folderIcon: {\n        color: theme.palette.text.secondary,\n        width: 33,\n        height: 33,\n    },\n    fileName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        wordBreak: \"break-all\",\n        flexGrow: 2,\n    },\n    closeIcon: {\n        placeSelf: \"flex-start\",\n        marginTop: 2,\n    },\n    propsContainer: {\n        padding: theme.spacing(3),\n    },\n    propsLabel: {\n        color: theme.palette.text.secondary,\n        padding: theme.spacing(1),\n    },\n    propsTime: {\n        color: theme.palette.text.disabled,\n        padding: theme.spacing(1),\n    },\n    propsValue: {\n        padding: theme.spacing(1),\n        wordBreak: \"break-all\",\n    },\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SideDrawer() {\n    const dispatch = useDispatch();\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\n    const selected = useSelector((state) => state.explorer.selected);\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\n        dispatch,\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\n    const keywords = useSelector((state) => state.explorer.keywords);\n    const [target, setTarget] = useState(null);\n    const [details, setDetails] = useState(null);\n    const loadProps = (object) => {\n        API.get(\n            \"/object/property/\" +\n                object.id +\n                \"?trace_root=\" +\n                (keywords !== \"\" ? \"true\" : \"false\") +\n                \"&is_folder=\" +\n                (object.type === \"dir\").toString()\n        )\n            .then((response) => {\n                setDetails(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        setDetails(null);\n        if (sideBarOpen) {\n            if (selected.length !== 1) {\n                SetSideBar(false);\n            } else {\n                setTarget(selected[0]);\n                loadProps(selected[0]);\n            }\n        }\n    }, [selected, sideBarOpen]);\n\n    const classes = useStyles();\n    const propsItem = [\n        {\n            label: \"大小\",\n            value: (d, t) =>\n                sizeToString(d.size) +\n                \"  (\" +\n                d.size.toLocaleString() +\n                \" 字节)\",\n            show: (d) => true,\n        },\n        {\n            label: \"存储策略\",\n            value: (d, t) => d.policy,\n            show: (d) => d.type === \"file\",\n        },\n        {\n            label: \"包含目录\",\n            value: (d, t) => d.child_folder_num.toLocaleString() + \" \" + \"个\",\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: \"包含文件\",\n            value: (d, t) => d.child_file_num.toLocaleString() + \" \" + \"个\",\n            show: (d) => d.type === \"dir\",\n        },\n        {\n            label: \"所在目录\",\n            // eslint-disable-next-line react/display-name\n            value: (d, t) => {\n                const path = d.path === \"\" ? t.path : d.path;\n                const name = filename(path);\n                return (\n                    <Tooltip title={path}>\n                        <Link\n                            href={\"javascript:void\"}\n                            onClick={() => NavigateTo(path)}\n                        >\n                            {name === \"\" ? \"根目录\" : name}\n                        </Link>\n                    </Tooltip>\n                );\n            },\n            show: (d) => true,\n        },\n        {\n            label: \"修改于\",\n            value: (d, t) =>\n                formatLocalTime(d.updated_at, \"YYYY/MM/DD  H:mm:ss\"),\n            show: (d) => true,\n        },\n        {\n            label: \"创建于\",\n            value: (d) => formatLocalTime(d.created_at, \"YYYY/MM/DD  H:mm:ss\"),\n            show: (d) => true,\n        },\n    ];\n    const content = (\n        <Grid container className={classes.propsContainer}>\n            {!details && <ListLoading />}\n            {details && (\n                <>\n                    {propsItem.map((item) => {\n                        if (item.show(target)) {\n                            return (\n                                <>\n                                    <Grid\n                                        item\n                                        xs={5}\n                                        className={classes.propsLabel}\n                                    >\n                                        {item.label}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={7}\n                                        className={classes.propsValue}\n                                    >\n                                        {item.value(details, target)}\n                                    </Grid>\n                                </>\n                            );\n                        }\n                    })}\n                    {target.type === \"dir\" && (\n                        <Grid item xs={12} className={classes.propsTime}>\n                            统计于{\" \"}\n                            <TimeAgo\n                                datetime={details.query_date}\n                                locale=\"zh_CN\"\n                            />\n                        </Grid>\n                    )}\n                </>\n            )}\n        </Grid>\n    );\n    return (\n        <>\n            <Hidden smUp>\n                <Dialog\n                    fullScreen\n                    open={sideBarOpen}\n                    TransitionComponent={Transition}\n                >\n                    {target && (\n                        <>\n                            <AppBar className={classes.appBar}>\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => SetSideBar(false)}\n                                        aria-label=\"close\"\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        {target.name}\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            {content}\n                        </>\n                    )}\n                </Dialog>\n            </Hidden>\n            <Hidden xsDown>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    open={sideBarOpen}\n                    anchor=\"right\"\n                >\n                    <Toolbar />\n                    <div className={classes.drawerContainer}>\n                        {target && (\n                            <>\n                                <div className={classes.header}>\n                                    {target.type === \"dir\" && (\n                                        <Folder\n                                            className={classes.folderIcon}\n                                        />\n                                    )}\n                                    {target.type !== \"dir\" && (\n                                        <TypeIcon\n                                            isUpload\n                                            className={classes.fileIcon}\n                                            iconClassName={classes.fileIconSVG}\n                                            fileName={target.name}\n                                        />\n                                    )}\n                                    <div className={classes.fileName}>\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            {target.name}\n                                        </Typography>\n                                    </div>\n                                    <IconButton\n                                        onClick={() => SetSideBar(false)}\n                                        className={classes.closeIcon}\n                                        aria-label=\"close\"\n                                        size={\"small\"}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                </div>\n                            </>\n                        )}\n                        <Divider />\n                        {content}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\nimport SideDrawer from \"./Sidebar/SideDrawer\";\nimport { closeAllModals, navigateTo, setSelectedTarget, toggleSnackbar } from \"../../redux/explorer\";\n\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSubTitle: (text) => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: (path) => {\n            dispatch(navigateTo(path));\n        },\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <DndProvider backend={HTML5Backend}>\n                    <Modals share={this.props.share} />\n                    <Navigator\n                        isShare={this.props.isShare}\n                        share={this.props.share}\n                    />\n                    <Explorer share={this.props.share} />\n                    <DragLayer />\n                </DndProvider>\n                <SideDrawer />\n            </div>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(FileManager));\n","import React from \"react\";\nimport {\n    Icon,\n    ListItemIcon,\n    makeStyles,\n    Menu,\n    MenuItem,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        minWidth: 38,\n    },\n}));\n\nexport default function SelectMenu({\n    options,\n    anchorEl,\n    handleClose,\n    callback,\n    selected,\n    showIcon = true,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            {options.map((item) => (\n                <>\n                    <MenuItem\n                        style={{ whiteSpace: \"normal\" }}\n                        dense\n                        onClick={() => callback(item)}\n                    >\n                        {showIcon && (\n                            <ListItemIcon className={classes.icon}>\n                                {item.name !== selected ? (\n                                    <Icon />\n                                ) : (\n                                    <CheckIcon />\n                                )}\n                            </ListItemIcon>\n                        )}\n\n                        {item.name}\n                    </MenuItem>\n                </>\n            ))}\n        </Menu>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\nimport { getPreviewURL } from \"../../middleware/Api\";\nimport { useHistory } from \"react-router-dom\";\nimport { basename, fileNameNoExt, isMobileSafari } from \"../../utils\";\nimport { list } from \"../../services/navigate\";\nimport { getViewerURL } from \"../../redux/explorer/action\";\nimport { subtitleSuffix, videoPreviewSuffix } from \"../../config\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport { pathJoin } from \"../Uploader/core/utils\";\nimport { Launch, PlaylistPlay, Subtitles } from \"@material-ui/icons\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport SelectMenu from \"./SelectMenu\";\nimport { getDownloadURL } from \"../../services/file\";\n\nconst Artplayer = React.lazy(() =>\n    import(\n        /* webpackChunkName: \"artplayer\" */ \"artplayer/examples/react/Artplayer\"\n    )\n);\n\nconst externalPlayers = [\n    {\n        name: \"PotPlayer\",\n        url: (source, title) => `potplayer://${source}`,\n    },\n    {\n        name: \"VLC\",\n        url: (source, title) => `vlc://${source}`,\n    },\n    {\n        name: \"IINA\",\n        url: (source, title) => `iina://weblink?url=${source}`,\n    },\n    {\n        name: \"nPlayer\",\n        url: (source, title) => `nplayer-${source}`,\n    },\n    {\n        name: \"MXPlayer (Free)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.ad;S.title=${title};end`,\n    },\n    {\n        name: \"MXPlayer (Pro)\",\n        url: (source, title) =>\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.pro;S.title=${title};end`,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 50,\n    },\n    player: {\n        borderRadius: \"4px\",\n        height: 600,\n    },\n    actions: {\n        marginTop: theme.spacing(2),\n    },\n    actionButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const { title, path } = UseFileSubTitle(query, math, location);\n    const theme = useTheme();\n    const [art, setArt] = useState(null);\n    const history = useHistory();\n    const [files, setFiles] = useState([]);\n    const [subtitles, setSubtitles] = useState([]);\n    const [playlist, setPlaylist] = useState([]);\n    const [subtitleOpen, setSubtitleOpen] = useState(null);\n    const [subtitleSelected, setSubtitleSelected] = useState(\"\");\n    const [playlistOpen, setPlaylistOpen] = useState(null);\n    const [externalPlayerOpen, setExternalPlayerOpen] = useState(null);\n    const isShare = pathHelper.isSharePage(location.pathname);\n\n    useEffect(() => {\n        return () => {\n            if (\n                art !== null &&\n                !isMobileSafari() &&\n                document.pictureInPictureEnabled &&\n                art.playing\n            ) {\n                art.pip = true;\n                art.query(\".art-video\").addEventListener(\n                    \"leavepictureinpicture\",\n                    () => {\n                        art.pause();\n                    },\n                    false\n                );\n            }\n        };\n    }, [art]);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (art !== null) {\n            const newURL = getPreviewURL(\n                isShare,\n                id,\n                query.get(\"id\"),\n                query.get(\"share_path\")\n            );\n            if (newURL !== art.url) {\n                if (art.subtitle) {\n                    art.subtitle.show = false;\n                }\n                art.switchUrl(newURL);\n                if (path && path !== \"\") {\n                    list(basename(path), isShare ? { key: id } : null, \"\").then(\n                        (res) => {\n                            setFiles(\n                                res.data.objects.filter(\n                                    (o) => o.type === \"file\"\n                                )\n                            );\n                            setPlaylist(\n                                res.data.objects.filter(\n                                    (o) =>\n                                        o.type === \"file\" &&\n                                        videoPreviewSuffix.indexOf(\n                                            o.name\n                                                .split(\".\")\n                                                .pop()\n                                                .toLowerCase()\n                                        ) !== -1\n                                )\n                            );\n                        }\n                    );\n                }\n            }\n        }\n    }, [art, id, location, path]);\n\n    const switchSubtitle = (f) => {\n        if (art !== null) {\n            const fileType = f.name.split(\".\").pop().toLowerCase();\n            art.subtitle.switch(\n                getPreviewURL(\n                    isShare,\n                    id,\n                    f.id,\n                    pathJoin([basename(query.get(\"share_path\")), f.name])\n                ),\n                {\n                    type: fileType,\n                }\n            );\n            art.subtitle.show = true;\n            setSubtitleSelected(f.name);\n            ToggleSnackbar(\"top\", \"center\", `字幕切换到：${f.name} `, \"info\");\n        }\n    };\n\n    useEffect(() => {\n        if (files.length > 0) {\n            const options = files.filter((f) => {\n                const fileType = f.name.split(\".\").pop().toLowerCase();\n                if (subtitleSuffix.indexOf(fileType) !== -1) {\n                    if (fileNameNoExt(f.name) === fileNameNoExt(title)) {\n                        switchSubtitle(f);\n                    }\n                    return true;\n                }\n                return false;\n            });\n            setSubtitles(options);\n        }\n    }, [files]);\n\n    const switchVideo = (file) => {\n        if (isShare) {\n            file.key = id;\n        }\n        if (isMobileSafari()) {\n            window.location.href = getViewerURL(\"video\", file, isShare);\n        } else {\n            history.push(getViewerURL(\"video\", file, isShare));\n        }\n    };\n\n    const setSubtitle = (sub) => {\n        setSubtitleOpen(null);\n        switchSubtitle(sub);\n    };\n\n    const startSelectSubTitle = (e) => {\n        if (subtitles.length === 0) {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                `视频目录下没有可用字幕文件 (支持：ASS/SRT/VTT)`,\n                \"warning\"\n            );\n            return;\n        }\n        setSubtitleOpen(e.currentTarget);\n    };\n\n    const openInExternalPlayer = (player) => {\n        const current = { name: title };\n        current.id = query.get(\"id\");\n        current.path = basename(path);\n        if (isShare) {\n            current.key = id;\n        }\n\n        setExternalPlayerOpen(null);\n        getDownloadURL(current)\n            .then((response) => {\n                window.location.assign(player.url(response.data, title));\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <Suspense fallback={<TextLoading />}>\n                    <Artplayer\n                        option={{\n                            title: title,\n                            theme: theme.palette.secondary.main,\n                            flip: true,\n                            setting: true,\n                            playbackRate: true,\n                            aspectRatio: true,\n                            hotkey: true,\n                            pip: true,\n                            fullscreen: true,\n                            fullscreenWeb: true,\n                            whitelist: [\"*\"],\n                            moreVideoAttr: {\n                                \"webkit-playsinline\": true,\n                                playsInline: true,\n                            },\n                        }}\n                        className={classes.player}\n                        getInstance={(a) => setArt(a)}\n                    />\n                </Suspense>\n            </Paper>\n            <div className={classes.actions}>\n                <Button\n                    onClick={startSelectSubTitle}\n                    className={classes.actionButton}\n                    startIcon={<Subtitles />}\n                    variant=\"outlined\"\n                >\n                    选择字幕\n                </Button>\n                {playlist.length >= 2 && (\n                    <Button\n                        onClick={(e) => setPlaylistOpen(e.currentTarget)}\n                        className={classes.actionButton}\n                        startIcon={<PlaylistPlay />}\n                        variant=\"outlined\"\n                    >\n                        播放列表\n                    </Button>\n                )}\n                <Button\n                    onClick={(e) => setExternalPlayerOpen(e.currentTarget)}\n                    className={classes.actionButton}\n                    startIcon={<Launch />}\n                    variant=\"outlined\"\n                >\n                    用外部播放器打开\n                </Button>\n            </div>\n            <SelectMenu\n                selected={subtitleSelected}\n                options={subtitles}\n                callback={setSubtitle}\n                anchorEl={subtitleOpen}\n                handleClose={() => setSubtitleOpen(null)}\n            />\n            <SelectMenu\n                selected={title}\n                options={playlist}\n                callback={switchVideo}\n                anchorEl={playlistOpen}\n                handleClose={() => setPlaylistOpen(null)}\n            />\n            <SelectMenu\n                showIcon={false}\n                options={externalPlayers}\n                callback={openInExternalPlayer}\n                anchorEl={externalPlayerOpen}\n                handleClose={() => setExternalPlayerOpen(null)}\n            />\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Avatar,\n    Card,\n    CardHeader,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then((response) => {\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = (event) => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        搜索结果\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                创建日期由晚到早\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                创建日期由早到晚\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                下载次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                下载次数由小到大\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                浏览次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                浏览次数由小到大\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.length === 0 && <Nothing primary={\"没有分享记录\"} />}\n                {shareList.map((value) => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"}{\" \"}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        分享于{\" \"}\n                                        <TimeAgo\n                                            datetime={value.create_date}\n                                            locale=\"zh_CN\"\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardHeader,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\n\nconst styles = (theme) => ({\n    cardContainer: {\n        padding: theme.spacing(1),\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17,\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\",\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = (pwd) => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = (id) => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter((value) => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1,\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"分享已取消\",\n                    \"success\"\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePermission = (id) => {\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\n        })\n            .then((response) => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePreviewOption = (id) => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex((value) => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\n        })\n            .then((response) => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1]\n        )\n            .then((response) => {\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value,\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = (event) => {\n        this.setState({\n            orderBy: event.target.value,\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = (share) => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            我的分享\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    创建日期由晚到早\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    创建日期由早到晚\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    下载次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    下载次数由小到大\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    浏览次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    浏览次数由小到大\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={24} className={classes.gird}>\n                    {this.state.shareList.length === 0 && (\n                        <Nothing primary={\"没有分享记录\"} />\n                    )}\n                    {this.state.shareList.map((value) => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"}{\" \"}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {formatLocalTime(\n                                                value.create_date,\n                                                \"YYYY-MM-DD H:mm:ss\"\n                                            )}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label=\"已失效\"\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\",\n                                    }}\n                                >\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password)\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"变更为公开分享\"\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"查看密码\"\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey\n                                                        fontSize={\"small\"}\n                                                    />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title=\"变更为私密分享\"\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon\n                                                    fontSize={\"small\"}\n                                                />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? \"禁止预览\"\n                                                : \"允许预览\"\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <ToggleIcon\n                                                on={value.preview}\n                                                onIcon={\n                                                    <EyeIcon\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                                offIcon={\n                                                    <VisibilityOff\n                                                        fontSize={\"small\"}\n                                                    />\n                                                }\n                                            />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title=\"取消分享\"\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon fontSize={\"small\"} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭{\" \"}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(MyShareCompoment)));\n\nexport default MyShare;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\",\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    content: {\n        padding: 0,\n    },\n}));\n\nexport default function SelectFileDialog(props) {\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = (index) => (event) => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\",\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map((v) => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                {files.map((v, k) => {\n                    return (\n                        <MenuItem key={k}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    );\n                })}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    scroll: {\n        overflowY: \"auto\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\nexport default function DownloadingCard(props) {\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = (panel) => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter((v) => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = (index) => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map((v) => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\",\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\",\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex,\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles,\n                    },\n                });\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? \"[未知]\" : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已取消，状态会在稍后更新\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = (fileIndex) => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex,\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"操作成功，状态会在稍后更新\",\n                    \"success\"\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && (\n                        <div className={classes.scroll}>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {activeFiles().map((value) => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                                style={{\n                                                    background:\n                                                        \"linear-gradient(to right, \" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" 0%,\" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" 100%)\",\n                                                }}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"删除此文件\">\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                deleteFile(\n                                                                    value.index\n                                                                )\n                                                            }\n                                                            disabled={loading}\n                                                            size={\"small\"}\n                                                        >\n                                                            <HighlightOff />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files,\n                                    ]);\n                                }}\n                            >\n                                选择要下载的文件\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            取消任务\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    更新于：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={task.update}\n                                        locale=\"zh_CN\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传速度：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            InfoHash：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\",\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种者：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种中：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? \"是\"\n                                                : \"否\"}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片数量：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme,\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0,\n        },\n        \"&:before\": {\n            display: \"none\",\n        },\n        \"&$expanded\": {},\n    },\n    expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56,\n        },\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\",\n        },\n    },\n    expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0),\n    },\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\",\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\n        },\n        textAlign: \"left\",\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    iconBig: {\n        fontSize: \"30px\",\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\",\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4,\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\",\n    },\n    expanded: {\n        transform: \"rotate(180deg)\",\n    },\n    subFileName: {\n        display: \"flex\",\n    },\n    subFileIcon: {\n        marginRight: \"20px\",\n    },\n    scroll: {\n        overflowY: \"auto\",\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\",\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n    },\n    info: {\n        padding: theme.spacing(2),\n    },\n    infoTitle: {\n        fontWeight: 700,\n    },\n    infoValue: {\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function FinishedCard(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"删除成功\", \"success\");\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter((v) => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = (error) => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return \"文件转存失败\";\n        }\n    };\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    下载出错：{props.task.error}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                已取消\n                                {props.task.error !== \"\" && (\n                                    <span>：{props.task.error}</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 4 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.main,\n                                    }}\n                                    noWrap\n                                >\n                                    已完成\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 0 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    已完成，转存排队中\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 1 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light,\n                                    }}\n                                    noWrap\n                                >\n                                    已完成，转存处理中\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 2 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    color={\"error\"}\n                                    noWrap\n                                >\n                                    {getTaskError(props.task.task_error)}\n                                </Typography>\n                            )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded,\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && (\n                        <div className={classes.scroll}>\n                            <Table>\n                                <TableBody>\n                                    {activeFiles().map((value) => {\n                                        return (\n                                            <TableRow key={value.index}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(props.task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            删除记录\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    创建日期：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {formatLocalTime(\n                                        props.task.create,\n                                        \"YYYY-MM-DD H:mm:ss\"\n                                    )}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    最后更新：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {formatLocalTime(\n                                        props.task.update,\n                                        \"YYYY-MM-DD H:mm:ss\"\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\nimport { openRemoteDownloadDialog } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\",\n    },\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\nimport Nothing from \"../Placeholder/Nothing\";\n\nconst styles = (theme) => ({\n    actions: {\n        display: \"flex\",\n    },\n    title: {\n        marginTop: \"20px\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    shareTitle: {\n        maxWidth: \"200px\",\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    gird: {\n        marginTop: \"30px\",\n    },\n    hide: {\n        display: \"none\",\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n    },\n    shareFix: {\n        marginLeft: \"20px\",\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n    },\n    margin: {\n        marginTop: theme.spacing(2),\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n    previousDownloading = -1;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true,\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/downloading\")\n            .then((response) => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false,\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 *\n                            response.data.reduce(function (prev, current) {\n                                return prev.interval < current.interval\n                                    ? prev\n                                    : current;\n                            }).interval\n                    );\n                }\n\n                // 下载中条目变更时刷新已完成列表\n                if (response.data.length !== this.previousDownloading) {\n                    this.page = 0;\n                    this.setState({\n                        finishedList: [],\n                        continue: true,\n                    });\n                    this.loadMore();\n                }\n                this.previousDownloading = response.data.length;\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true,\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then((response) => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data,\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10,\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    进行中\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.length === 0 && (\n                    <Nothing primary={\"没有下载中的任务\"} />\n                )}\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    已完成\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.length === 0 && (\n                        <Nothing primary={\"没有已完成的任务\"} />\n                    )}\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        加载更多\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(DownloadComponent));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\",\n        },\n\n        marginTop: 30,\n    },\n}));\n\nconst MyLoader = (props) => {\n    return (\n        <Facebook\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\n            className={props.className}\n        />\n    );\n};\n\nfunction PageLoading() {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\",\n            }}\n        >\n            <MyLoader\n                dark={theme.palette.type === \"dark\"}\n                className={classes.loader}\n            />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    withStyles,\n    Button,\n    Card,\n    Divider,\n    CardHeader,\n    CardContent,\n    CardActions,\n    TextField,\n    Avatar,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst styles = (theme) => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\",\n    },\n    actions: {\n        display: \"flex\",\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\"),\n        };\n    }\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={this.props.share.creator.nick + \" 的加密分享\"}\n                        subheader={formatLocalTime(\n                            this.props.share.create_date,\n                            \"YYYY-MM-DD H:mm:ss\"\n                        )}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label=\"输入分享密码\"\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            继续\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(LockedFileCompoment)));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\nimport { formatLocalTime } from \"../../utils/datetime\";\n\nconst useStyles = makeStyles((theme) => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24,\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\",\n    },\n    shareDes: {\n        marginTop: 12,\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n}));\n\nexport default function Creator(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return (\n                    Math.round(props.share.expire / (24 * 3600)) + \" 天后到期\"\n                );\n            }\n            return Math.round(props.share.expire / 3600) + \" 小时后到期\";\n        }\n        return formatLocalTime(props.share.create_date, \"YYYY-MM-DD H:mm:ss\");\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <>\n                        此分享由{\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        创建\n                    </>\n                )}\n                {!props.isFolder && (\n                    <>\n                        {\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        向您分享了 1 个文件\n                    </>\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {props.share.views} 次浏览 • {props.share.downloads} 次下载 •{\" \"}\n                {getSecondDes()}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport { isPreviewable } from \"../../config\";\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\nimport { openMusicDialog, openResaveDialog, setSelectedTarget, showImgPreivew, toggleSnackbar } from \"../../redux/explorer\";\n\n\nvhCheck();\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0,\n        },\n        justifyContent: \"center\",\n        display: \"flex\",\n    },\n    player: {\n        borderRadius: \"4px\",\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\",\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2,\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 12,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000,\n        },\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\",\n    },\n    fileName: {\n        marginLeft: 20,\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14,\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\",\n    },\n    downloadButton: {\n        marginLeft: 8,\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false,\n    };\n\n    downloaded = false;\n\n    // TODO merge into react thunk\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name,\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"audio\":\n                this.props.setSelectedTarget([\n                    {\n                        key: this.props.share.key,\n                        type: \"share\",\n                    },\n                ]);\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"此文件无法预览\",\n                    \"warning\"\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = (callback) => (event) => {\n        callback(event);\n    };\n\n    download = () => {\n        this.setState({ loading: true });\n        API.put(\"/share/download/\" + this.props.share.key)\n            .then((response) => {\n                this.downloaded = true;\n                window.location.assign(response.data);\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    预览\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.scoreHandle(this.download)}\n                                disabled={this.state.loading}\n                            >\n                                下载\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFileCompoment)));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography, withStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nimport { openMusicDialog, openResaveDialog, setSelectedTarget, setShareUserPopover, showImgPreivew, toggleSnackbar } from \"../../redux/explorer\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n    },\n    managerContainer: {\n        overflowY: \"auto\",\n    },\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = (state) => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: (targets) => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: (first) => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: (e) => {\n            dispatch(setShareUserPopover(e));\n        },\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        window.shareInfo = this.props.share;\n    }\n\n    componentWillUnmount() {\n        window.shareInfo = null;\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = () => {\n        if (!pathHelper.isMobile()) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map((value) => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\",\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\",\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nexport default function SharePreload() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(\n        (title) => dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(share.creator.nick + \"的加密分享\");\n                if (password !== \"\") {\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then((response) => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={\"分享不存在或已过期\"} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport pathHelper from \"../../utils/page\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n    },\n\n    container: {\n        border: \"none\",\n        width: \"100%\",\n        height: \"calc(100vh - 18px)\",\n        marginBottom: -3,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [url, setURL] = useState(\"\");\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    UseFileSubTitle(query, math, location);\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then((response) => {\n                setURL(response.data);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            {url !== \"\" && (\n                <iframe title={\"ms\"} className={classes.container} src={url} />\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1),\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: 250,\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24,\n    },\n    button: {\n        marginTop: 8,\n    },\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\",\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = (folder) => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = (name) => (e) => {\n        setValue({\n            ...value,\n            [name]: e.target.value,\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        取消\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label=\"备注名\"\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label=\"相对根目录\"\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                选择目录\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\nimport Link from \"@material-ui/core/Link\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    copy: {\n        marginLeft: 10,\n    },\n}));\n\nexport default function WebDAV() {\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const copyToClipboard = (text) => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(text);\n            ToggleSnackbar(\"top\", \"center\", \"已复制到剪切板\", \"success\");\n        } else {\n            ToggleSnackbar(\n                \"top\",\n                \"center\",\n                \"当前浏览器不支持，请手动复制\",\n                \"warning\"\n            );\n        }\n    };\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then((response) => {\n                setAccounts(response.data.accounts);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = (id) => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = (account) => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name,\n        })\n            .then((response) => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path,\n                    },\n                    ...accounts,\n                ]);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                WebDAV\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label=\"账号管理\" />\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                WebDAV的地址为：\n                                {window.location.origin + \"/dav\"}\n                                ；登录用户名统一为：{user.user_name}{\" \"}\n                                ；密码为所创建账号的密码。\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>备注名</TableCell>\n                                            <TableCell>密码</TableCell>\n                                            <TableCell align=\"right\">\n                                                根目录\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                创建日期\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                操作\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Password}\n                                                    <Link\n                                                        className={classes.copy}\n                                                        onClick={() =>\n                                                            copyToClipboard(\n                                                                row.Password\n                                                            )\n                                                        }\n                                                        href={\"javascript:void\"}\n                                                    >\n                                                        复制\n                                                    </Link>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                {accounts.length === 0 && (\n                                    <Nothing primary={\"没有记录\"} />\n                                )}\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                创建新账号\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nimport Nothing from \"../Placeholder/Nothing\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: \"50px\",\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\",\n    },\n    cardContent: {\n        padding: theme.spacing(2),\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n    create: {\n        marginTop: theme.spacing(2),\n    },\n    noWrap: {\n        wordBreak: \"keepAll\",\n    },\n    footer: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function Tasks() {\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = (page) => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then((response) => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = (error) => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return `${res.msg}: ${res.error}`;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                任务队列\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                任务类型\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                状态\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                最后进度\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    {formatLocalTime(\n                                        row.create_date,\n                                        \"YYYY-MM-DD H:mm:ss\"\n                                    )}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {tasks.length === 0 && <Nothing primary={\"没有记录\"} />}\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    withStyles,\n    Paper,\n    Avatar,\n    Typography,\n    Tabs,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Grid,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { formatLocalTime } from \"../../utils/datetime\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    userNav: {\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\",\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\",\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\",\n    },\n    th: {\n        minWidth: \"106px\",\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    tableLink: {\n        cursor: \"pointer\",\n    },\n    navigator: {\n        padding: theme.spacing(2),\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\",\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\",\n    },\n    infoContainer: {\n        marginTop: \"30px\",\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n    },\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0,\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order\n        )\n            .then((response) => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper square>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label=\"全部分享\" />\n                            <Tab label=\"热门分享\" />\n                            <Tab label=\"个人资料\" />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            UID\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            昵称\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            用户组\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            分享总数\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            注册日期\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>文件名</TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    分享日期\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    下载次数\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide,\n                                                    ]}\n                                                >\n                                                    浏览次数\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[已失效]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {formatLocalTime(\n                                                                row.create_date,\n                                                                \"YYYY-MM-DD H:mm:ss\"\n                                                            )}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\"\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ProfileCompoment)));\n\nexport default Profile;\n","import React, { useState, useCallback } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n}));\n\nexport default function Authn(props) {\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = (id) => {\n        API.patch(\"/user/setting/authn\", {\n            id: id,\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"凭证已删除\", \"success\");\n                props.remove(id);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then((response) => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey,\n                });\n            })\n            .then((credential) => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                        },\n                    })\n                );\n            })\n            .then((response) => {\n                props.add(response.data);\n                ToggleSnackbar(\"top\", \"right\", \"验证器已添加\", \"success\");\n                return;\n            })\n            .catch((error) => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>删除凭证</DialogTitle>\n                <DialogContent>确定要吊销这个凭证吗？</DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                外部认证器\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map((v) => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60,\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText primary=\"添加新验证器\" />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { FormLabel, makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n    refreshTimeZone,\n    timeZone,\n    validateTimeZone,\n} from \"../../utils/datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Auth from \"../../middleware/Auth\";\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function TimeZoneDialog(props) {\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const saveZoneInfo = () => {\n        if (!validateTimeZone(timeZoneValue)) {\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\n            return;\n        }\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\n        refreshTimeZone();\n        props.onClose();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">更改时区</DialogTitle>\n\n            <DialogContent>\n                <FormControl>\n                    <TextField\n                        label={\"IANA 时区名称标识\"}\n                        value={timeZoneValue}\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\n                    />\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        disabled={timeZoneValue === \"\"}\n                        onClick={() => saveZoneInfo()}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch,\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport QRCode from \"qrcode-react\";\nimport {\n    Brightness3,\n    GitHub,\n    Home,\n    ListAlt,\n    PermContactCalendar,\n    Schedule,\n} from \"@material-ui/icons\";\nimport Authn from \"./Authn\";\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\nimport TimeZoneDialog from \"../Modals/TimeZone\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar,\n} from \"../../redux/explorer\";\n\nconst styles = (theme) => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\",\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800],\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800],\n    },\n    infoText: {\n        marginRight: \"17px\",\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\",\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary,\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40,\n    },\n    flexContainer: {\n        display: \"flex\",\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\",\n        },\n    },\n    desText: {\n        marginTop: \"10px\",\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\",\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\",\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\",\n    },\n    paddingBottom: {\n        marginBottom: \"30px\",\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2),\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: (color) => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: (method) => {\n            dispatch(changeViewMethod(method));\n        },\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        changeTimeZone: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\",\n                },\n                options: [],\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: [],\n        },\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false,\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then((response) => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\",\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\",\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"昵称已更改，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\",\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设置已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage,\n                    },\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"两次密码输入不一致\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\",\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码已更新\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\",\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"主题配色已更换\",\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\",\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\",\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd,\n            })\n            .then((response) => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false,\n                    });\n                }\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then((response) => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\",\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode,\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设定已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor,\n                    },\n                });\n                this.handleClose();\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\",\n                });\n            });\n    };\n\n    handleChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = (current) => {\n        if (current !== null) {\n            this.props.toggleDaylightMode();\n            Auth.SetPreference(\"theme_mode\", null);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个人资料\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary=\"头像\" />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary=\"UID\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"昵称\" />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Email\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"用户组\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"注册时间\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {formatLocalTime(\n                                            user.created_at,\n                                            \"YYYY-MM-DD H:mm:ss\"\n                                        )}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        安全隐私\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"个人主页\" />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"登录密码\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"二步验证\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? \"未开启\"\n                                            : \"已开启\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={(credential) => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential,\n                                    ],\n                                },\n                            });\n                        }}\n                        remove={(id) => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter((v) => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials,\n                                },\n                            });\n                        }}\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个性化\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主题配色\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor}></div>\n                                    <div className={classes.secondColor}></div>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary=\"黑暗模式\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? \"偏好开启\"\n                                                : \"偏好关闭\")}\n                                        {dark === null && \"跟随系统\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文件列表\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            \"大图标\"}\n                                        {this.props.viewMethod === \"list\" &&\n                                            \"列表\"}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" && \"小图标\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                onClick={() =>\n                                    this.setState({ changeTimeZone: true })\n                                }\n                                button\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Schedule />\n                                </ListItemIcon>\n                                <ListItemText primary=\"时区\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {timeZone}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"连接地址\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true,\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"用户名\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"账号管理\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        关于 Cloudreve\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub 仓库\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <div className={classes.paddingBottom}></div>\n                </div>\n                <TimeZoneDialog\n                    onClose={() => this.setState({ changeTimeZone: false })}\n                    open={this.state.changeTimeZone}\n                />\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改头像</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"从文件上传\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary=\"使用 Gravatar 头像 \"\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            取消\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>修改昵称</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"昵称\"\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改登录密码</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"原密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"确认新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                        二步验证\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCode\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        请验证当前二步验证代码。\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"6位验证码\"\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                            二步验证\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>更改主题配色</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV用户名</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\n\nexport default UserSetting;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    buttonContainer: {\n        display: \"flex\",\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16,\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nfunction Register() {\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n\n    const title = useSelector((state) => state.siteConfig.title);\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n    const classes = useStyles();\n\n    const register = (e) => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        if (!isValidate.current.isValidate && regCaptcha) {\n            validate(() => register(e), setLoading);\n            return;\n        }\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            ...captchaParamsRef.current,\n        })\n            .then((response) => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\n                }\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            注册 {title}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">\n                                    电子邮箱\n                                </InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">密码</InputLabel>\n                                <Input\n                                    name=\"password\"\n                                    onChange={handleInputChange(\"password\")}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">\n                                    确认密码\n                                </InputLabel>\n                                <Input\n                                    name=\"pwdRepeat\"\n                                    onChange={handleInputChange(\n                                        \"password_repeat\"\n                                    )}\n                                    type=\"password\"\n                                    id=\"pwdRepeat\"\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && <CaptchaRender />}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={\n                                    loading ||\n                                    (regCaptcha ? captchaLoading : false)\n                                }\n                                className={classes.submit}\n                            >\n                                注册账号\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/login\"}>返回登录</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            邮件激活\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { Button, Paper, Avatar, Typography } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\n        )\n            .then((response) => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch((error) => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        激活成功\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        您的账号已被成功激活。\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        返回登录\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography,\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const submit = (e) => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password,\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\n                        <Input\n                            id=\"pwd\"\n                            type=\"password\"\n                            name=\"pwd\"\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\n                        <Input\n                            id=\"pwdRepeat\"\n                            type=\"password\"\n                            name=\"pwdRepeat\"\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        重设密码\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    FormControl,\n    Input,\n    InputLabel,\n    Link,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        marginBottom: 110,\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nfunction Reset() {\n    const [input, setInput] = useState({\n        email: \"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(\n        (state) => state.siteConfig.forgetCaptcha\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = (name) => (e) => {\n        setInput({\n            ...input,\n            [name]: e.target.value,\n        });\n    };\n\n    const {\n        captchaLoading,\n        isValidate,\n        validate,\n        CaptchaRender,\n        captchaRefreshRef,\n        captchaParamsRef,\n    } = useCaptcha();\n\n    const submit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!isValidate.current.isValidate && forgetCaptcha) {\n            validate(() => submit(e), setLoading);\n            return;\n        }\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            ...captchaParamsRef.current,\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码重置邮件已发送，请注意查收\",\n                    \"success\"\n                );\n            })\n            .catch((error) => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                captchaRefreshRef.current();\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && <CaptchaRender />}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={\n                            loading || (forgetCaptcha ? captchaLoading : false)\n                        }\n                        className={classes.submit}\n                    >\n                        发送密码重置邮件\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import {\n    Button, Dialog,\n    DialogActions,\n    DialogContent, DialogTitle, withStyles\n} from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport {Slider,List,Grid} from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MusicNote from '@material-ui/icons/MusicNote';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport PlayNext from '@material-ui/icons/SkipNext';\nimport PlayPrev from '@material-ui/icons/SkipPrevious';\nimport Pause from '@material-ui/icons/Pause';\nimport {Repeat, RepeatOne, Shuffle} from '@material-ui/icons';\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { audioPreviewSuffix } from \"../../config\";\nimport { baseURL } from \"../../middleware/Api\";\nimport * as explorer from \"../../redux/explorer/reducer\";\nimport pathHelper from \"../../utils/page\";\nimport { audioPreviewSetIsOpen, audioPreviewSetPlaying, showAudioPreview } from \"../../redux/explorer\";\n\n\n\nconst styles = (theme) => ({  \n    list: {\n        //maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n    },\n    slider_root:{\n        \"vertical-align\": \"middle\",\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        first: state.explorer.audioPreview.first,\n        other: state.explorer.audioPreview.other,\n        isOpen:state.explorer.audioPreview.isOpen,\n        playingName:state.explorer.audioPreview.playingName,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showAudioPreview: (first) => {\n            dispatch(showAudioPreview(first));\n        },\n        audioPreviewSetIsOpen: (first) => {\n            dispatch(audioPreviewSetIsOpen(first));\n        },\n        audioPreviewSetPlaying: (playingName,paused) => {\n            dispatch(audioPreviewSetPlaying(playingName,paused));\n        },\n    };\n};\n\nclass MusicPlayerComponent extends Component {\n    state = {\n        items: [],\n        currentIndex: 0,\n        //isOpen: false,\n        //isPlay:false,\n        currentTime:0,\n        duration:0,\n        progressText:'00:00/00:00',\n        looptype:0,\n    };\n    myAudioRef = React.createRef();  \n\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newItem = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\n                };\n                firstOne = 0;\n                items.push(newItem);\n                this.setState({\n                    currentIndex: firstOne,\n                    items: items,\n                    //isOpen: true,\n                });\n                this.props.audioPreviewSetIsOpen(true);\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map((value) => {\n                const fileType = value.name.split(\".\").pop().toLowerCase();\n                if (audioPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newItem = {\n                        intro: value.name,\n                        src: src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newItem);\n                }\n            });\n            this.setState({\n                currentIndex: firstOne,\n                items: items,\n                //isOpen: true,\n            });\n            this.props.audioPreviewSetIsOpen(true);\n            this.props.showAudioPreview(explorer.initState.audioPreview.first);\n        }        \n    };\n\n    handleItemClick = (currentIndex) => () => {\n        this.setState({\n            currentIndex: currentIndex,\n        });\n    };\n    \n\n    handleClose = () => {\n        /*this.setState({\n            isOpen: false,\n        });*/\n        this.setState({\n            currentIndex: -1,\n        });\n        this.pause();\n        this.props.audioPreviewSetPlaying(null,false);\n        this.props.audioPreviewSetIsOpen(false);\n    };\n    backgroundPlay = () => {        \n        this.props.audioPreviewSetIsOpen(false);\n    };\n\n    componentDidMount() {\n        if(this.myAudioRef.current){\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }\n    componentDidUpdate() {\n        if(this.myAudioRef.current){\n            this.bindEvents(this.myAudioRef.current);\n        }\n    }    \n    componentWillUnmount() {\n        this.unbindEvents(this.myAudioRef.current)\n    }\n\n    bindEvents=(ele)=>{\n        if(ele){\n            ele.addEventListener('canplay', this.readyPlay)\n            ele.addEventListener('ended', this.loopnext)\n            ele.addEventListener('timeupdate', this.timeUpdate)\n        }\n    };\n\n    unbindEvents=(ele)=> {\n        if(ele){\n            ele.removeEventListener('canplay', this.readyPlay)\n            ele.removeEventListener('ended', this.loopnext)\n            ele.removeEventListener('timeupdate', this.timeUpdate)\n        }\n    };\n\n    readyPlay = () => {\n        this.play();\n    };\n\n    formatTime = s => {\n        if(isNaN(s))return \"00:00\";\n        const minute = Math.floor(s / 60);\n        const second = Math.floor(s % 60);\n        return `${minute}`.padStart(2,'0')+':'+`${second}`.padStart(2,'0');\n    }\n\n    timeUpdate = () => {\n        const currentTime=Math.floor(this.myAudioRef.current.currentTime);//this.myAudioRef.current.currentTime;//\n        this.setState({\n            currentTime: currentTime,\n            duration: this.myAudioRef.current.duration,\n            progressText: this.formatTime(currentTime)+'/'+this.formatTime(this.myAudioRef.current.duration)\n        });\n    }\n\n    play = () => {\n       this.myAudioRef.current.play();\n       /*this.setState({\n            isPlay: true\n        });*/\n        this.props.audioPreviewSetPlaying(this.state.items[this.state.currentIndex].intro,false);\n    };\n\n    pause = () => {\n        if(this.myAudioRef.current){\n            this.myAudioRef.current.pause();\n        }\n        /*this.setState({\n            isPlay: false\n        })*/\n        this.props.audioPreviewSetPlaying(this.state.items[this.state.currentIndex]?.intro,true);\n    };\n\n    playOrPaues = () => {\n        if (this.state.isPlay) {\n            this.pause()\n        } else {\n            this.play()\n        }\n    };\n    changeLoopType=()=>{\n        let lt=this.state.looptype+1;\n        if(lt>=3){\n            lt=0;\n        }\n        this.setState({\n            looptype: lt,\n        });\n    };\n    loopnext=()=>{\n        let index = this.state.currentIndex;\n        if(this.state.looptype==0){//all\n            index=index+1;\n            if (index >= this.state.items.length) {\n                index =  0;\n            }\n        }else if(this.state.looptype==1){//single\n            //index=index;\n        }else if(this.state.looptype==2){//random\n            if(this.state.items.length<=2){\n                index=index+1;\n                if (index >= this.state.items.length) {\n                    index =  0;\n                }\n            }else{\n                while(index==this.state.currentIndex){\n                    index=Math.floor(Math.random()*this.state.items.length);\n                }\n            }\n        }\n        if(this.state.currentIndex==index){\n            this.myAudioRef.current.currentTime=0;\n            this.play();\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    }\n\n    prev = () => {\n        let index = this.state.currentIndex - 1\n        if (index < 0) {\n            index = this.state.items.length - 1\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n    \n    next = () => {\n        let index = this.state.currentIndex + 1\n        if (index >= this.state.items.length) {\n            index =  0;\n        }\n        this.setState({\n            currentIndex: index,\n        });\n    };\n\n    handleProgress = (e, newValue) => {\n        this.myAudioRef.current.currentTime=newValue;\n    }\n      \n\n    render() {\n        const { currentIndex, items } = this.state;\n        const { isOpen,classes } = this.props;\n        return (            \n            <Dialog\n                open={isOpen}\n                onClose={this.backgroundPlay}\n                aria-labelledby=\"form-dialog-title\"\n                maxWidth=\"xs\"\n                fullWidth\n                keepMounted\n            >\n                <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\n                <DialogContent>\n                    <List className={classes.list} dense>\n                        {items.map((value,idx) => {\n                            const labelId = `label-${value.intro}`;\n                            return (\n                                <ListItem key={value.src} dense button onClick={this.handleItemClick(idx)}\n                                    selected={idx==currentIndex}>\n                                    <ListItemIcon>\n                                        {\n                                            idx==currentIndex?(<PlayArrow/>):(<MusicNote/>)\n                                        }\n                                    </ListItemIcon>\n                                    <ListItemText id={labelId} primary={`${value.intro}`} />\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                    <audio ref={this.myAudioRef}                                 \n                        src={items[currentIndex]?.src}\n                        />\n                    <div style={{\"padding-top\":8}}></div>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs>\n                        <Slider classes={{\"root\":classes.slider_root}}\n                            value={this.state.currentTime}\n                            onChange={this.handleProgress}\n                            step={1}\n                            min={0}\n                            max={this.state.duration}\n                            aria-labelledby=\"continuous-slider\" />\n                        </Grid>\n                        <Grid item>\n                            {this.state.progressText}\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} justifyContent=\"center\" justify=\"center\">\n                        <Grid item>\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.changeLoopType}>\n                                {\n                                    this.state.looptype==0?(<Repeat/>):(this.state.looptype==1?(<RepeatOne/>):(<Shuffle />))\n                                }\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.prev}>\n                                <PlayPrev />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.pause}>\n                                <Pause />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.play}>\n                                <PlayArrow />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.next}>\n                                <PlayNext />\n                            </IconButton>\n                        </Grid>                                \n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose}>退出播放</Button>\n                    <Button onClick={this.backgroundPlay}>后台播放</Button>\n                </DialogActions>\n            </Dialog>\n            \n        );\n    }\n}\n\nMusicPlayerComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst MusicPlayer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(MusicPlayerComponent)));\n\nexport default MusicPlayer;\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nimport MusicPlayer from \"./component/FileManager/MusicPlayer\";\n\nconst PDFViewer = React.lazy(() =>\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\n);\n\nexport default function App() {\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main,\n                },\n            },\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0,\n        },\n        toolbar: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\",\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <AuthRoute\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <Route path={`${path}login`} exact>\n                                <LoginForm />\n                            </Route>\n\n                            <Route path={`${path}signup`} exact>\n                                <Register />\n                            </Route>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound msg={\"页面不存在\"} />\n                            </Route>\n                        </Switch>\n                    </main>\n                    <MusicPlayer/>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\nimport {\n    changeViewMethod,\n    setSiteConfig,\n    toggleSnackbar,\n} from \"../redux/explorer\";\n\nconst initUserConfig = (siteConfig) => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = (rawStore) => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n    return rawStore;\n};\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function (response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data)\n            );\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method)\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method)\n                    );\n                }\n            }\n        })\n        .catch(function (error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载站点配置：\" + error.message,\n                    \"error\"\n                )\n            );\n        });\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\nimport { SortMethod } from \"../../types\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod: SortMethod;\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        torrentDownload: boolean;\n        getSource: boolean;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n        option?: {\n            options: {\n                open: boolean;\n                key: string;\n                name: string;\n                description?: string;\n            }[];\n            title: string;\n            callback: any;\n            onClose: any;\n        };\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n    openFileSelector: number;\n    openFolderSelector: number;\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: Auth.GetPreferenceWithDefault(\"sort\", \"timePos\"),\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        torrentDownload: false,\n        getSource: false,\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\",\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\",\n    },\n    openFileSelector: 0,\n    openFolderSelector: 0,\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open,\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method,\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status,\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg,\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true,\n                }),\n                contextOpen: false,\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor,\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor,\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    torrentDownload: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text,\n                }),\n                contextOpen: false,\n            });\n        case \"CLOSE_CONTEXT_MENU\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    torrentDownload: false,\n                    getSource: false,\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false,\n                    option: undefined,\n                }),\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color,\n                },\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status,\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status,\n            };\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh,\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true,\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType,\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title,\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method,\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading,\n            };\n        case \"SET_OPTION_MODAL\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    option: action.option,\n                }),\n                contextOpen: false,\n            });\n        case \"OPEN_FILE_SELECTOR\":\n            return {\n                ...state,\n                openFileSelector: state.openFileSelector + 1,\n                contextOpen: false,\n            };\n        case \"OPEN_FOLDER_SELECTOR\":\n            return {\n                ...state,\n                openFolderSelector: state.openFolderSelector + 1,\n                contextOpen: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path,\n        }),\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\",\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\",\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\",\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\",\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\",\n                },\n            },\n        },\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_type: \"normal\",\n        tcaptcha_captcha_app_id: \"\",\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true,\n    },\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\",\n                            },\n                        },\n                    },\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\",\n                        },\n                    },\n                },\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme],\n                    }),\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config,\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh,\n                }),\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/搜索结果\",\n                    refresh:\n                        state.explorer.keywords === \"\"\n                            ? state.navigator.refresh\n                            : !state.navigator.refresh,\n                }),\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (history) => (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({\n        viewUpdate,\n        explorer,\n        router: connectRouter(history),\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\n    return {\n        ...appState,\n        ...combinedState,\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\",\n    },\n    h2: {\n        margin: \"15px 0px\",\n    },\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        // 更新 state 使下一次渲染能够显示降级后的 UI\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.hasError) {\n            // 你可以自定义降级后的 UI 并渲染\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>\n                        页面渲染出现错误，请尝试刷新此页面。\n                    </h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>错误详情</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withStyles(styles)(ErrorBoundary);\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nimport { createBrowserHistory } from \"history\";\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\n\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\n\nserviceWorker.register({\n    onUpdate: (registration) => {\n        alert(\"当前页面有新版本可用，准备刷新。\");\n        if (registration && registration.waiting) {\n            registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\n        }\n        window.location.reload();\n    },\n});\n\nexport const history = createBrowserHistory();\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nconst store = createStore(cloureveApp(history), reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <ErrorBoundary>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <Switch>\n                    <Route path=\"/admin\">\n                        <Suspense fallback={\"Loading...\"}>\n                            <Admin />\n                        </Suspense>\n                    </Route>\n                    <Route exact path=\"\">\n                        <App />\n                    </Route>\n                </Switch>\n            </ConnectedRouter>\n        </Provider>\n    </ErrorBoundary>,\n    document.getElementById(\"root\")\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction,\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\n\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title,\n    };\n};\n\nexport const closeContextMenu = () => {\n    return {\n        type: \"CLOSE_CONTEXT_MENU\",\n    };\n};\n\nexport const changeContextMenu = (type: string, open: boolean) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open,\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n\nexport const setOptionModal = (option: any) => {\n    return {\n        type: \"SET_OPTION_MODAL\",\n        option: option,\n    };\n};\n\nexport const openFileSelector = () => {\n    return {\n        type: \"OPEN_FILE_SELECTOR\",\n    };\n};\n\nexport const openFolderSelector = () => {\n    return {\n        type: \"OPEN_FOLDER_SELECTOR\",\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport {\n    MenuList,\n    MenuItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    withStyles,\n    ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../redux/explorer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        keywords: state.explorer.keywords,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n    };\n};\n\nconst styles = (theme) => ({\n    iconWhite: {\n        color: theme.palette.common.white,\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white,\n        },\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\",\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\",\n    },\n});\n\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        dirList: [],\n        selectedTarget: null,\n    };\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(this.props.keywords === \"\" ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = (toBeLoad) => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad)\n        )\n            .then((response) => {\n                const dirList = response.data.objects.filter((x) => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex((value) => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                if (toBeLoad === \"/\") {\n                    dirList.unshift({ name: \"/\", path: \"\" });\n                }\n                this.setState({\n                    presentPath: toBeLoad,\n                    dirList: dirList,\n                    selectedTarget: null,\n                });\n            })\n            .catch((error) => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            });\n    };\n\n    handleSelect = (index) => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.container}>\n                <MenuList className={classes.selector}>\n                    {this.state.presentPath !== \"/\" && (\n                        <MenuItem onClick={this.back}>\n                            <ListItemIcon>\n                                <UpIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"返回上一层\" />\n                        </MenuItem>\n                    )}\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected,\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.name}\n                                primaryTypographyProps={{\n                                    style: { whiteSpace: \"normal\" },\n                                }}\n                            />\n                            {value.name !== \"/\" && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index,\n                                        })}\n                                        onClick={() =>\n                                            this.enterFolder(\n                                                value.path === \"/\"\n                                                    ? value.path + value.name\n                                                    : value.path +\n                                                          \"/\" +\n                                                          value.name\n                                            )\n                                        }\n                                    >\n                                        <RightIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(PathSelectorCompoment));\n"],"sourceRoot":""}